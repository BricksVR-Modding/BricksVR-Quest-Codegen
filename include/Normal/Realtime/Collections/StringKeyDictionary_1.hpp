// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: Normal.Realtime.Serialization.ICollection
#include "Normal/Realtime/Serialization/ICollection.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: Normal.Realtime.Serialization.IMetaModelExtension
#include "Normal/Realtime/Serialization/IMetaModelExtension.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime::Collections
namespace Normal::Realtime::Collections {
  // Skipping declaration: DidInsertModelForKey because it is already included!
  // Skipping declaration: DidRemoveModelForKey because it is already included!
  // Skipping declaration: DidClearAllModels because it is already included!
  // Skipping declaration: ModelExtension because it is already included!
  // Skipping declaration: <GetEnumerator>d__29 because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: Dictionary`2 because it is already included!
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Forward declaring namespace: Normal::Realtime::Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: WriteStream
  class WriteStream;
  // Forward declaring type: ReadStream
  class ReadStream;
}
// Completed forward declares
// Type namespace: Normal.Realtime.Collections
namespace Normal::Realtime::Collections {
  // Forward declaring type: StringKeyDictionary`1<TValue>
  template<typename TValue>
  class StringKeyDictionary_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Normal::Realtime::Collections::StringKeyDictionary_1, "Normal.Realtime.Collections", "StringKeyDictionary`1");
// Type namespace: Normal.Realtime.Collections
namespace Normal::Realtime::Collections {
  // WARNING Size may be invalid!
  // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: BB570
  template<typename TValue>
  class StringKeyDictionary_1 : public ::Normal::Realtime::RealtimeModel/*, public ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>, public ::Normal::Realtime::Serialization::ICollection*/ {
    public:
    // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::DidInsertModelForKey<TValue>
    class DidInsertModelForKey;
    // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::DidRemoveModelForKey<TValue>
    class DidRemoveModelForKey;
    // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::DidClearAllModels<TValue>
    class DidClearAllModels;
    // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension<TValue>
    class ModelExtension;
    // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29<TValue>
    class $GetEnumerator$d__29;
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidInsertModelForKey
    // [TokenAttribute] Offset: FFFFFFFF
    class DidInsertModelForKey : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = StringKeyDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "DidInsertModelForKey";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename StringKeyDictionary_1<TValue>::DidInsertModelForKey* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidInsertModelForKey::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::DidInsertModelForKey*, creationType>(object, method)));
      }
      // public System.Void Invoke(Normal.Realtime.Collections.StringKeyDictionary`1<TValue> dictionary, System.String key, TValue model, System.Boolean remote)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary, ::StringW key, TValue model, bool remote) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidInsertModelForKey::Invoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionary, key, model, remote);
      }
      // public System.IAsyncResult BeginInvoke(Normal.Realtime.Collections.StringKeyDictionary`1<TValue> dictionary, System.String key, TValue model, System.Boolean remote, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary, ::StringW key, TValue model, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidInsertModelForKey::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, dictionary, key, model, remote, callback, object);
      }
      // public System.Void EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidInsertModelForKey::EndInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidInsertModelForKey
    // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidInsertModelForKey is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidRemoveModelForKey
    // [TokenAttribute] Offset: FFFFFFFF
    class DidRemoveModelForKey : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = StringKeyDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "DidRemoveModelForKey";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename StringKeyDictionary_1<TValue>::DidRemoveModelForKey* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidRemoveModelForKey::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::DidRemoveModelForKey*, creationType>(object, method)));
      }
      // public System.Void Invoke(Normal.Realtime.Collections.StringKeyDictionary`1<TValue> dictionary, System.String key, System.Boolean remote)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary, ::StringW key, bool remote) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidRemoveModelForKey::Invoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionary, key, remote);
      }
      // public System.IAsyncResult BeginInvoke(Normal.Realtime.Collections.StringKeyDictionary`1<TValue> dictionary, System.String key, System.Boolean remote, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary, ::StringW key, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidRemoveModelForKey::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, dictionary, key, remote, callback, object);
      }
      // public System.Void EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidRemoveModelForKey::EndInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidRemoveModelForKey
    // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidRemoveModelForKey is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidClearAllModels
    // [TokenAttribute] Offset: FFFFFFFF
    class DidClearAllModels : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = StringKeyDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "DidClearAllModels";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename StringKeyDictionary_1<TValue>::DidClearAllModels* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidClearAllModels::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::DidClearAllModels*, creationType>(object, method)));
      }
      // public System.Void Invoke(Normal.Realtime.Collections.StringKeyDictionary`1<TValue> dictionary, System.Boolean remote)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Invoke(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary, bool remote) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidClearAllModels::Invoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionary, remote);
      }
      // public System.IAsyncResult BeginInvoke(Normal.Realtime.Collections.StringKeyDictionary`1<TValue> dictionary, System.Boolean remote, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidClearAllModels::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, dictionary, remote, callback, object);
      }
      // public System.Void EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::DidClearAllModels::EndInvoke");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidClearAllModels
    // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidClearAllModels is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension
    // [TokenAttribute] Offset: FFFFFFFF
    class ModelExtension : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::Normal::Realtime::Serialization::IMetaModelExtension*/ {
      public:
      using declaring_type = StringKeyDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "ModelExtension";
      static constexpr bool IS_VALUE_TYPE = false;
      // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID<TValue>
      struct PropertyID;
      // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel<TValue>
      class KeyIDsModel;
      // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel<TValue>
      class KeyVersionsModel;
      // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate<TValue>
      class DictionaryUpdate;
      // WARNING Size may be invalid!
      // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID
      // [TokenAttribute] Offset: FFFFFFFF
      struct PropertyID : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::Enum*/ {
        public:
        using declaring_type = typename StringKeyDictionary_1<TValue>::ModelExtension*;
        static constexpr std::string_view NESTED_NAME = "PropertyID";
        static constexpr bool IS_VALUE_TYPE = true;
        public:
        // public System.UInt32 value__
        // Size: 0x4
        // Offset: 0x0
        uint value;
        // Field size check
        static_assert(sizeof(uint) == 0x4);
        public:
        // Creating value type constructor for type: PropertyID
        constexpr PropertyID(uint value_ = {}) noexcept : value{value_} {}
        // Creating interface conversion operator: operator ::System::Enum
        operator ::System::Enum() noexcept {
          return *reinterpret_cast<::System::Enum*>(this);
        }
        // Creating conversion operator: operator uint
        constexpr operator uint() const noexcept {
          return value;
        }
        // Autogenerated static field getter
        // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> DictionaryVersion
        static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID _get_DictionaryVersion() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_get_DictionaryVersion");
          return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "DictionaryVersion"));
        }
        // Autogenerated static field setter
        // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> DictionaryVersion
        static void _set_DictionaryVersion(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID value) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_set_DictionaryVersion");
          THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "DictionaryVersion", value));
        }
        // Autogenerated static field getter
        // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> KeyIDs
        static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID _get_KeyIDs() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_get_KeyIDs");
          return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "KeyIDs"));
        }
        // Autogenerated static field setter
        // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> KeyIDs
        static void _set_KeyIDs(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID value) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_set_KeyIDs");
          THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "KeyIDs", value));
        }
        // Autogenerated static field getter
        // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> KeyVersions
        static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID _get_KeyVersions() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_get_KeyVersions");
          return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "KeyVersions"));
        }
        // Autogenerated static field setter
        // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> KeyVersions
        static void _set_KeyVersions(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID value) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_set_KeyVersions");
          THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "KeyVersions", value));
        }
        // Autogenerated static field getter
        // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> DictionaryUpdate
        static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID _get_DictionaryUpdate() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_get_DictionaryUpdate");
          return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "DictionaryUpdate"));
        }
        // Autogenerated static field setter
        // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID<TValue> DictionaryUpdate
        static void _set_DictionaryUpdate(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::PropertyID value) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::_set_DictionaryUpdate");
          THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::PropertyID>::get(), "DictionaryUpdate", value));
        }
        // Autogenerated instance field getter
        // Get instance field: public System.UInt32 value__
        [[deprecated]] uint& dyn_value__() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::PropertyID::dyn_value__");
          auto ___internal__instance = *this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
          return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
      }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID
      // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.PropertyID is generic, or has no fields that are valid for size checks!
      // WARNING Size may be invalid!
      // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyIDsModel
      // [TokenAttribute] Offset: FFFFFFFF
      class KeyIDsModel : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::Normal::Realtime::Serialization::IModel*/ {
        public:
        using declaring_type = typename StringKeyDictionary_1<TValue>::ModelExtension*;
        static constexpr std::string_view NESTED_NAME = "KeyIDsModel";
        static constexpr bool IS_VALUE_TYPE = false;
        public:
        // private System.Collections.Generic.Dictionary`2<System.String,System.UInt32> _keyToKeyIDMap
        // Size: 0x8
        // Offset: 0x0
        ::System::Collections::Generic::Dictionary_2<::StringW, uint>* keyToKeyIDMap;
        // Field size check
        static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, uint>*) == 0x8);
        // private System.Collections.Generic.Dictionary`2<System.UInt32,System.String> _keyIDToKeyMap
        // Size: 0x8
        // Offset: 0x0
        ::System::Collections::Generic::Dictionary_2<uint, ::StringW>* keyIDToKeyMap;
        // Field size check
        static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::StringW>*) == 0x8);
        public:
        // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IModel
        operator ::Normal::Realtime::Serialization::IModel() noexcept {
          return *reinterpret_cast<::Normal::Realtime::Serialization::IModel*>(this);
        }
        // Autogenerated instance field getter
        // Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.UInt32> _keyToKeyIDMap
        [[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, uint>*& dyn__keyToKeyIDMap() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::dyn__keyToKeyIDMap");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyToKeyIDMap"))->offset;
          return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // Autogenerated instance field getter
        // Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt32,System.String> _keyIDToKeyMap
        [[deprecated]] ::System::Collections::Generic::Dictionary_2<uint, ::StringW>*& dyn__keyIDToKeyMap() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::dyn__keyIDToKeyMap");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyIDToKeyMap"))->offset;
          return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // public System.Boolean TryGetKeyID(System.String key, out System.UInt32 keyID)
        // Offset: 0xFFFFFFFFFFFFFFFF
        bool TryGetKeyID(::StringW key, ByRef<uint> keyID) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::TryGetKeyID");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetKeyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
          return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(keyID));
        }
        // public System.Boolean TryGetKey(System.UInt32 keyID, out System.String key)
        // Offset: 0xFFFFFFFFFFFFFFFF
        bool TryGetKey(uint keyID, ByRef<::StringW> key) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::TryGetKey");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyID), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
          return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keyID, byref(key));
        }
        // public System.Void SetKeyID(System.String key, System.UInt32 keyID)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void SetKeyID(::StringW key, uint keyID) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::SetKeyID");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(keyID)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, keyID);
        }
        // public System.Void Clear()
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Clear() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::Clear");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
        }
        // public System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::WriteLength");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel*), -1));
          return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
        }
        // public System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::Write");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel*), -1));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
        // public System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::Read");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel*), -1));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
        // public System.Void .ctor()
        // Offset: 0xFFFFFFFFFFFFFFFF
        // Implemented from: System.Object
        // Base method: System.Void Object::.ctor()
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel* New_ctor() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyIDsModel::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel*, creationType>()));
        }
      }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyIDsModel
      // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyIDsModel is generic, or has no fields that are valid for size checks!
      // WARNING Size may be invalid!
      // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyVersionsModel
      // [TokenAttribute] Offset: FFFFFFFF
      class KeyVersionsModel : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::Normal::Realtime::Serialization::IModel*/ {
        public:
        using declaring_type = typename StringKeyDictionary_1<TValue>::ModelExtension*;
        static constexpr std::string_view NESTED_NAME = "KeyVersionsModel";
        static constexpr bool IS_VALUE_TYPE = false;
        public:
        // private System.Collections.Generic.Dictionary`2<System.UInt32,System.Byte> _keyVersions
        // Size: 0x8
        // Offset: 0x0
        ::System::Collections::Generic::Dictionary_2<uint, uint8_t>* keyVersions;
        // Field size check
        static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, uint8_t>*) == 0x8);
        public:
        // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IModel
        operator ::Normal::Realtime::Serialization::IModel() noexcept {
          return *reinterpret_cast<::Normal::Realtime::Serialization::IModel*>(this);
        }
        // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<uint, uint8_t>*
        constexpr operator ::System::Collections::Generic::Dictionary_2<uint, uint8_t>*() const noexcept {
          return keyVersions;
        }
        // Autogenerated instance field getter
        // Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt32,System.Byte> _keyVersions
        [[deprecated]] ::System::Collections::Generic::Dictionary_2<uint, uint8_t>*& dyn__keyVersions() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::dyn__keyVersions");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyVersions"))->offset;
          return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // public System.Byte GetKeyVersion(System.UInt32 keyID)
        // Offset: 0xFFFFFFFFFFFFFFFF
        uint8_t GetKeyVersion(uint keyID) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::GetKeyVersion");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyID)})));
          return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, keyID);
        }
        // public System.Void SetKeyVersion(System.UInt32 keyID, System.Byte keyVersion)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void SetKeyVersion(uint keyID, uint8_t keyVersion) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::SetKeyVersion");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyID), ::il2cpp_utils::ExtractType(keyVersion)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyID, keyVersion);
        }
        // public System.Void Clear()
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Clear() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::Clear");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
        }
        // public System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::WriteLength");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel*), -1));
          return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
        }
        // public System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::Write");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel*), -1));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
        // public System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::Read");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel*), -1));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
        // public System.Void .ctor()
        // Offset: 0xFFFFFFFFFFFFFFFF
        // Implemented from: System.Object
        // Base method: System.Void Object::.ctor()
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel* New_ctor() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::KeyVersionsModel::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel*, creationType>()));
        }
      }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyVersionsModel
      // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyVersionsModel is generic, or has no fields that are valid for size checks!
      // WARNING Size may be invalid!
      // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate
      // [TokenAttribute] Offset: FFFFFFFF
      class DictionaryUpdate : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::Normal::Realtime::Serialization::IModel*/ {
        public:
        using declaring_type = typename StringKeyDictionary_1<TValue>::ModelExtension*;
        static constexpr std::string_view NESTED_NAME = "DictionaryUpdate";
        static constexpr bool IS_VALUE_TYPE = false;
        // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update<TValue>
        class Update;
        // WARNING Size may be invalid!
        // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update
        // [TokenAttribute] Offset: FFFFFFFF
        class Update : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::Normal::Realtime::Serialization::IModel*/ {
          public:
          using declaring_type = typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*;
          static constexpr std::string_view NESTED_NAME = "Update";
          static constexpr bool IS_VALUE_TYPE = false;
          // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation<TValue>
          struct Operation;
          // Nested type: ::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID<TValue>
          struct PropertyID;
          // WARNING Size may be invalid!
          // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation
          // [TokenAttribute] Offset: FFFFFFFF
          struct Operation : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::Enum*/ {
            public:
            using declaring_type = typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*;
            static constexpr std::string_view NESTED_NAME = "Operation";
            static constexpr bool IS_VALUE_TYPE = true;
            public:
            // public System.UInt32 value__
            // Size: 0x4
            // Offset: 0x0
            uint value;
            // Field size check
            static_assert(sizeof(uint) == 0x4);
            public:
            // Creating value type constructor for type: Operation
            constexpr Operation(uint value_ = {}) noexcept : value{value_} {}
            // Creating interface conversion operator: operator ::System::Enum
            operator ::System::Enum() noexcept {
              return *reinterpret_cast<::System::Enum*>(this);
            }
            // Creating conversion operator: operator uint
            constexpr operator uint() const noexcept {
              return value;
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Reject
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation _get_Reject() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_get_Reject");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Reject"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Reject
            static void _set_Reject(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_set_Reject");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Reject", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Insert
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation _get_Insert() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_get_Insert");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Insert"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Insert
            static void _set_Insert(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_set_Insert");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Insert", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Remove
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation _get_Remove() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_get_Remove");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Remove"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Remove
            static void _set_Remove(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_set_Remove");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Remove", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Clear
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation _get_Clear() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_get_Clear");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Clear"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> Clear
            static void _set_Clear(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::_set_Clear");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation>::get(), "Clear", value));
            }
            // Autogenerated instance field getter
            // Get instance field: public System.UInt32 value__
            [[deprecated]] uint& dyn_value__() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Operation::dyn_value__");
              auto ___internal__instance = *this;
              static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
              return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
            }
          }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation
          // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation is generic, or has no fields that are valid for size checks!
          // WARNING Size may be invalid!
          // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID
          // [TokenAttribute] Offset: FFFFFFFF
          struct PropertyID : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::Enum*/ {
            public:
            using declaring_type = typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*;
            static constexpr std::string_view NESTED_NAME = "PropertyID";
            static constexpr bool IS_VALUE_TYPE = true;
            public:
            // public System.UInt32 value__
            // Size: 0x4
            // Offset: 0x0
            uint value;
            // Field size check
            static_assert(sizeof(uint) == 0x4);
            public:
            // Creating value type constructor for type: PropertyID
            constexpr PropertyID(uint value_ = {}) noexcept : value{value_} {}
            // Creating interface conversion operator: operator ::System::Enum
            operator ::System::Enum() noexcept {
              return *reinterpret_cast<::System::Enum*>(this);
            }
            // Creating conversion operator: operator uint
            constexpr operator uint() const noexcept {
              return value;
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> Operation
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID _get_Operation() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_get_Operation");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "Operation"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> Operation
            static void _set_Operation(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_set_Operation");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "Operation", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> DictionaryVersion
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID _get_DictionaryVersion() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_get_DictionaryVersion");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "DictionaryVersion"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> DictionaryVersion
            static void _set_DictionaryVersion(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_set_DictionaryVersion");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "DictionaryVersion", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> Key
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID _get_Key() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_get_Key");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "Key"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> Key
            static void _set_Key(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_set_Key");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "Key", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> KeyID
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID _get_KeyID() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_get_KeyID");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "KeyID"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> KeyID
            static void _set_KeyID(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_set_KeyID");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "KeyID", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> KeyVersion
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID _get_KeyVersion() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_get_KeyVersion");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "KeyVersion"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> KeyVersion
            static void _set_KeyVersion(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_set_KeyVersion");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "KeyVersion", value));
            }
            // Autogenerated static field getter
            // Get static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> Value
            static typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID _get_Value() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_get_Value");
              return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "Value"));
            }
            // Autogenerated static field setter
            // Set static field: static public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID<TValue> Value
            static void _set_Value(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID value) {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::_set_Value");
              THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::PropertyID>::get(), "Value", value));
            }
            // Autogenerated instance field getter
            // Get instance field: public System.UInt32 value__
            [[deprecated]] uint& dyn_value__() {
              static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::PropertyID::dyn_value__");
              auto ___internal__instance = *this;
              static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
              return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
            }
          }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID
          // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.PropertyID is generic, or has no fields that are valid for size checks!
          public:
          // public System.Boolean createdByServer
          // Size: 0x1
          // Offset: 0x0
          bool createdByServer;
          // Field size check
          static_assert(sizeof(bool) == 0x1);
          // public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> requestedOperation
          // Size: 0xFFFFFFFF
          // Offset: 0x0
          typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation requestedOperation;
          // public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> responseOperation
          // Size: 0xFFFFFFFF
          // Offset: 0x0
          typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation responseOperation;
          // public System.Byte dictionaryVersion
          // Size: 0x1
          // Offset: 0x0
          uint8_t dictionaryVersion;
          // Field size check
          static_assert(sizeof(uint8_t) == 0x1);
          // public System.String key
          // Size: 0x8
          // Offset: 0x0
          ::StringW key;
          // Field size check
          static_assert(sizeof(::StringW) == 0x8);
          // public System.UInt32 keyID
          // Size: 0x4
          // Offset: 0x0
          uint keyID;
          // Field size check
          static_assert(sizeof(uint) == 0x4);
          // public System.Byte keyVersion
          // Size: 0x1
          // Offset: 0x0
          uint8_t keyVersion;
          // Field size check
          static_assert(sizeof(uint8_t) == 0x1);
          // public TValue value
          // Size: 0xFFFFFFFF
          // Offset: 0x0
          TValue value;
          // public System.Action`1<System.Boolean> completionHandler
          // Size: 0x8
          // Offset: 0x0
          ::System::Action_1<bool>* completionHandler;
          // Field size check
          static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
          public:
          // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IModel
          operator ::Normal::Realtime::Serialization::IModel() noexcept {
            return *reinterpret_cast<::Normal::Realtime::Serialization::IModel*>(this);
          }
          // Autogenerated instance field getter
          // Get instance field: public System.Boolean createdByServer
          [[deprecated]] bool& dyn_createdByServer() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_createdByServer");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createdByServer"))->offset;
            return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> requestedOperation
          [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation& dyn_requestedOperation() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_requestedOperation");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedOperation"))->offset;
            return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update/Normal.Realtime.Collections.Operation<TValue> responseOperation
          [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation& dyn_responseOperation() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_responseOperation");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "responseOperation"))->offset;
            return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update::Operation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public System.Byte dictionaryVersion
          [[deprecated]] uint8_t& dyn_dictionaryVersion() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_dictionaryVersion");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dictionaryVersion"))->offset;
            return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public System.String key
          [[deprecated]] ::StringW& dyn_key() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_key");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
            return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public System.UInt32 keyID
          [[deprecated]] uint& dyn_keyID() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_keyID");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyID"))->offset;
            return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public System.Byte keyVersion
          [[deprecated]] uint8_t& dyn_keyVersion() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_keyVersion");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyVersion"))->offset;
            return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public TValue value
          [[deprecated]] TValue& dyn_value() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_value");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
            return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // Autogenerated instance field getter
          // Get instance field: public System.Action`1<System.Boolean> completionHandler
          [[deprecated]] ::System::Action_1<bool>*& dyn_completionHandler() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::dyn_completionHandler");
            auto ___internal__instance = this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
            return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
          // public System.Void .ctor(System.Boolean createdByServer)
          // Offset: 0xFFFFFFFFFFFFFFFF
          template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
          static typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update* New_ctor(bool createdByServer) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::.ctor");
            return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*, creationType>(createdByServer)));
          }
          // public System.Void .ctor(System.Byte dictionaryVersion, System.String key, System.UInt32 keyID, System.Byte keyVersion, TValue value, System.Action`1<System.Boolean> completionHandler)
          // Offset: 0xFFFFFFFFFFFFFFFF
          template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
          static typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update* New_ctor(uint8_t dictionaryVersion, ::StringW key, uint keyID, uint8_t keyVersion, TValue value, ::System::Action_1<bool>* completionHandler) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::.ctor");
            return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*, creationType>(dictionaryVersion, key, keyID, keyVersion, value, completionHandler)));
          }
          // public System.Void .ctor(System.Byte dictionaryVersion, System.UInt32 keyID, System.Byte keyVersion, System.Action`1<System.Boolean> completionHandler)
          // Offset: 0xFFFFFFFFFFFFFFFF
          template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
          static typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update* New_ctor(uint8_t dictionaryVersion, uint keyID, uint8_t keyVersion, ::System::Action_1<bool>* completionHandler) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::.ctor");
            return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*, creationType>(dictionaryVersion, keyID, keyVersion, completionHandler)));
          }
          // public System.Void .ctor(System.Byte dictionaryVersion, System.Action`1<System.Boolean> completionHandler)
          // Offset: 0xFFFFFFFFFFFFFFFF
          template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
          static typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update* New_ctor(uint8_t dictionaryVersion, ::System::Action_1<bool>* completionHandler) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::.ctor");
            return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*, creationType>(dictionaryVersion, completionHandler)));
          }
          // public System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
          // Offset: 0xFFFFFFFFFFFFFFFF
          int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::WriteLength");
            auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*), -1));
            return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
          }
          // public System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
          // Offset: 0xFFFFFFFFFFFFFFFF
          void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Write");
            auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*), -1));
            ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
          }
          // public System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
          // Offset: 0xFFFFFFFFFFFFFFFF
          void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Update::Read");
            auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*), -1));
            ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
          }
        }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update
        // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update is generic, or has no fields that are valid for size checks!
        public:
        // private System.Collections.Generic.List`1<Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update<TValue>> _updates
        // Size: 0x8
        // Offset: 0x0
        ::System::Collections::Generic::List_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*>* updates;
        // Field size check
        static_assert(sizeof(::System::Collections::Generic::List_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*>*) == 0x8);
        // public System.UInt32 updateID
        // Size: 0x4
        // Offset: 0x0
        uint updateID;
        // Field size check
        static_assert(sizeof(uint) == 0x4);
        public:
        // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IModel
        operator ::Normal::Realtime::Serialization::IModel() noexcept {
          return *reinterpret_cast<::Normal::Realtime::Serialization::IModel*>(this);
        }
        // Autogenerated instance field getter
        // Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update<TValue>> _updates
        [[deprecated]] ::System::Collections::Generic::List_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*>*& dyn__updates() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::dyn__updates");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updates"))->offset;
          return *reinterpret_cast<::System::Collections::Generic::List_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // Autogenerated instance field getter
        // Get instance field: public System.UInt32 updateID
        [[deprecated]] uint& dyn_updateID() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::dyn_updateID");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
          return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // public System.Collections.Generic.List`1<Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate/Normal.Realtime.Collections.Update<TValue>> get_updates()
        // Offset: 0xFFFFFFFFFFFFFFFF
        ::System::Collections::Generic::List_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*>* get_updates() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::get_updates");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
          return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate::Update*>*, false>(this, ___internal__method);
        }
        // public System.Boolean get_hasUpdates()
        // Offset: 0xFFFFFFFFFFFFFFFF
        bool get_hasUpdates() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::get_hasUpdates");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
          return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
        }
        // public System.Void InsertValueForKey(System.Byte dictionaryVersion, System.String key, TValue value, System.Action`1<System.Boolean> completionHandler)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void InsertValueForKey(uint8_t dictionaryVersion, ::StringW key, TValue value, ::System::Action_1<bool>* completionHandler) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::InsertValueForKey");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertValueForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionaryVersion), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(completionHandler)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionaryVersion, key, value, completionHandler);
        }
        // public System.Void InsertValueForKeyID(System.Byte dictionaryVersion, System.UInt32 keyID, System.Byte keyVersion, TValue value, System.Action`1<System.Boolean> completionHandler)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void InsertValueForKeyID(uint8_t dictionaryVersion, uint keyID, uint8_t keyVersion, TValue value, ::System::Action_1<bool>* completionHandler) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::InsertValueForKeyID");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertValueForKeyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionaryVersion), ::il2cpp_utils::ExtractType(keyID), ::il2cpp_utils::ExtractType(keyVersion), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(completionHandler)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionaryVersion, keyID, keyVersion, value, completionHandler);
        }
        // public System.Void RemoveValueForKeyID(System.Byte dictionaryVersion, System.UInt32 keyID, System.Byte keyVersion, System.Action`1<System.Boolean> completionHandler)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void RemoveValueForKeyID(uint8_t dictionaryVersion, uint keyID, uint8_t keyVersion, ::System::Action_1<bool>* completionHandler) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::RemoveValueForKeyID");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveValueForKeyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionaryVersion), ::il2cpp_utils::ExtractType(keyID), ::il2cpp_utils::ExtractType(keyVersion), ::il2cpp_utils::ExtractType(completionHandler)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionaryVersion, keyID, keyVersion, completionHandler);
        }
        // public System.Void ClearDictionary(System.Byte dictionaryVersion, System.Action`1<System.Boolean> completionHandler)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void ClearDictionary(uint8_t dictionaryVersion, ::System::Action_1<bool>* completionHandler) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::ClearDictionary");
          static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionaryVersion), ::il2cpp_utils::ExtractType(completionHandler)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionaryVersion, completionHandler);
        }
        // public System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::WriteLength");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*), -1));
          return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
        }
        // public System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Write");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*), -1));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
        // public System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFFFFFFFFFF
        void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::Read");
          auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*), -1));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
        // public System.Void .ctor()
        // Offset: 0xFFFFFFFFFFFFFFFF
        // Implemented from: System.Object
        // Base method: System.Void Object::.ctor()
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate* New_ctor() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::DictionaryUpdate::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*, creationType>()));
        }
      }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate
      // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate is generic, or has no fields that are valid for size checks!
      public:
      // private Normal.Realtime.Collections.StringKeyDictionary`1<TValue> _dictionary
      // Size: 0x8
      // Offset: 0x0
      ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary;
      // Field size check
      static_assert(sizeof(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>*) == 0x8);
      // private System.Byte _dictionaryVersion
      // Size: 0x1
      // Offset: 0x0
      uint8_t dictionaryVersion;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      // private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyIDsModel<TValue> _keyIDsModel
      // Size: 0x8
      // Offset: 0x0
      typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel* keyIDsModel;
      // Field size check
      static_assert(sizeof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel*) == 0x8);
      // private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyVersionsModel<TValue> _keyVersionsModel
      // Size: 0x8
      // Offset: 0x0
      typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel* keyVersionsModel;
      // Field size check
      static_assert(sizeof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel*) == 0x8);
      // private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate<TValue> _pendingUpdates
      // Size: 0x8
      // Offset: 0x0
      typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate* pendingUpdates;
      // Field size check
      static_assert(sizeof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*) == 0x8);
      // private System.Collections.Generic.Queue`1<Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate<TValue>> _inflightUpdates
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::Queue_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*>* inflightUpdates;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Queue_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*>*) == 0x8);
      public:
      // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IMetaModelExtension
      operator ::Normal::Realtime::Serialization::IMetaModelExtension() noexcept {
        return *reinterpret_cast<::Normal::Realtime::Serialization::IMetaModelExtension*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1<TValue> _dictionary
      [[deprecated]] ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>*& dyn__dictionary() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::dyn__dictionary");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictionary"))->offset;
        return *reinterpret_cast<::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Byte _dictionaryVersion
      [[deprecated]] uint8_t& dyn__dictionaryVersion() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::dyn__dictionaryVersion");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dictionaryVersion"))->offset;
        return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyIDsModel<TValue> _keyIDsModel
      [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel*& dyn__keyIDsModel() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::dyn__keyIDsModel");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyIDsModel"))->offset;
        return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyIDsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.KeyVersionsModel<TValue> _keyVersionsModel
      [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel*& dyn__keyVersionsModel() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::dyn__keyVersionsModel");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyVersionsModel"))->offset;
        return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::KeyVersionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate<TValue> _pendingUpdates
      [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*& dyn__pendingUpdates() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::dyn__pendingUpdates");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingUpdates"))->offset;
        return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.Queue`1<Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension/Normal.Realtime.Collections.DictionaryUpdate<TValue>> _inflightUpdates
      [[deprecated]] ::System::Collections::Generic::Queue_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*>*& dyn__inflightUpdates() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::dyn__inflightUpdates");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inflightUpdates"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::Queue_1<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension::DictionaryUpdate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.UInt32 get_modelType()
      // Offset: 0xFFFFFFFFFFFFFFFF
      uint get_modelType() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::get_modelType");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension*), -1));
        return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
      }
      // public System.Void .ctor(Normal.Realtime.Collections.StringKeyDictionary`1<TValue> dictionary)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename StringKeyDictionary_1<TValue>::ModelExtension* New_ctor(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* dictionary) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::ModelExtension*, creationType>(dictionary)));
      }
      // public System.Boolean TryGetKeyIDForKey(System.String key, out System.UInt32 keyID)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool TryGetKeyIDForKey(::StringW key, ByRef<uint> keyID) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::TryGetKeyIDForKey");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetKeyIDForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(keyID));
      }
      // public System.Boolean TryGetKeyForKeyID(System.UInt32 keyID, out System.String key)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool TryGetKeyForKeyID(uint keyID, ByRef<::StringW> key) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::TryGetKeyForKeyID");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetKeyForKeyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyID), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keyID, byref(key));
      }
      // public System.Void InsertValueForKey(System.String key, TValue value, System.Action`1<System.Boolean> completionHandler)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void InsertValueForKey(::StringW key, TValue value, ::System::Action_1<bool>* completionHandler) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::InsertValueForKey");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertValueForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(completionHandler)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value, completionHandler);
      }
      // public System.Boolean RemoveValueForKey(System.String key, System.Action`1<System.Boolean> completionHandler)
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool RemoveValueForKey(::StringW key, ::System::Action_1<bool>* completionHandler) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::RemoveValueForKey");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveValueForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(completionHandler)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, completionHandler);
      }
      // public System.Void ClearDictionary(System.Action`1<System.Boolean> completionHandler)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void ClearDictionary(::System::Action_1<bool>* completionHandler) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::ClearDictionary");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completionHandler)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completionHandler);
      }
      // public System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
      // Offset: 0xFFFFFFFFFFFFFFFF
      int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::WriteLength");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension*), -1));
        return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
      }
      // public System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::Write");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
      }
      // public System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::Read");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
      }
      // static private System.Byte GetNextKeyVersion(System.Byte keyVersion)
      // Offset: 0xFFFFFFFFFFFFFFFF
      static uint8_t GetNextKeyVersion(uint8_t keyVersion) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ModelExtension::GetNextKeyVersion");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename StringKeyDictionary_1<TValue>::ModelExtension*>::get(), "GetNextKeyVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyVersion)})));
        return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyVersion);
      }
    }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension
    // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.<GetEnumerator>d__29
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $GetEnumerator$d__29 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>*/ {
      public:
      using declaring_type = StringKeyDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<GetEnumerator>d__29";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // private System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Collections.Generic.KeyValuePair`2<System.String,TValue> <>2__current
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::System::Collections::Generic::KeyValuePair_2<::StringW, TValue> $$2__current;
      // public Normal.Realtime.Collections.StringKeyDictionary`1<TValue> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>* $$4__this;
      // Field size check
      static_assert(sizeof(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>*) == 0x8);
      // private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.UInt32,TValue> <>7__wrap1
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      typename ::System::Collections::Generic::Dictionary_2<uint, TValue>::Enumerator $$7__wrap1;
      public:
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>
      operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>1__state
      [[deprecated]] int& dyn_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::dyn_$$1__state");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,TValue> <>2__current
      [[deprecated]] ::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>& dyn_$$2__current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::dyn_$$2__current");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public Normal.Realtime.Collections.StringKeyDictionary`1<TValue> <>4__this
      [[deprecated]] ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.UInt32,TValue> <>7__wrap1
      [[deprecated]] typename ::System::Collections::Generic::Dictionary_2<uint, TValue>::Enumerator& dyn_$$7__wrap1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::dyn_$$7__wrap1");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
        return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<uint, TValue>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // private System.Collections.Generic.KeyValuePair`2<System.String,TValue> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,TValue>>.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::System::Collections::Generic::KeyValuePair_2<::StringW, TValue> System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_TValue$$_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,TValue>>.get_Current");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::$GetEnumerator$d__29*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>, false>(this, ___internal__method);
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xFFFFFFFFFFFFFFFF
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::System.Collections.IEnumerator.get_Current");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::$GetEnumerator$d__29*), -1));
        return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
      }
      // public System.Void .ctor(System.Int32 <>1__state)
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename StringKeyDictionary_1<TValue>::$GetEnumerator$d__29* New_ctor(int $$1__state) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename StringKeyDictionary_1<TValue>::$GetEnumerator$d__29*, creationType>($$1__state)));
      }
      // private System.Void System.IDisposable.Dispose()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_IDisposable_Dispose() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::System.IDisposable.Dispose");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::$GetEnumerator$d__29*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Boolean MoveNext()
      // Offset: 0xFFFFFFFFFFFFFFFF
      bool MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::MoveNext");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::$GetEnumerator$d__29*), -1));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // private System.Void <>m__Finally1()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $$m__Finally1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::<>m__Finally1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Void System.Collections.IEnumerator.Reset()
      // Offset: 0xFFFFFFFFFFFFFFFF
      void System_Collections_IEnumerator_Reset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::$GetEnumerator$d__29::System.Collections.IEnumerator.Reset");
        auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::$GetEnumerator$d__29*), -1));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
    }; // Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.<GetEnumerator>d__29
    // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.<GetEnumerator>d__29 is generic, or has no fields that are valid for size checks!
    public:
    // private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidInsertModelForKey<TValue> didInsertModelForKey
    // Size: 0x8
    // Offset: 0x0
    typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey* didInsertModelForKey;
    // Field size check
    static_assert(sizeof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey*) == 0x8);
    // private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidRemoveModelForKey<TValue> didRemoveModelForKey
    // Size: 0x8
    // Offset: 0x0
    typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey* didRemoveModelForKey;
    // Field size check
    static_assert(sizeof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey*) == 0x8);
    // private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidClearAllModels<TValue> didClearAllModels
    // Size: 0x8
    // Offset: 0x0
    typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels* didClearAllModels;
    // Field size check
    static_assert(sizeof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels*) == 0x8);
    // private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension<TValue> _modelExtension
    // Size: 0x8
    // Offset: 0x0
    typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension* modelExtension;
    // Field size check
    static_assert(sizeof(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.UInt32,TValue> _storage
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<uint, TValue>* storage;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, TValue>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>
    operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>*>(this);
    }
    // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::ICollection
    operator ::Normal::Realtime::Serialization::ICollection() noexcept {
      return *reinterpret_cast<::Normal::Realtime::Serialization::ICollection*>(this);
    }
    // Autogenerated static field getter
    // Get static field: static private System.UInt32 DictionaryMaxKeyID
    static uint _get_DictionaryMaxKeyID() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::_get_DictionaryMaxKeyID");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<StringKeyDictionary_1<TValue>*>::get(), "DictionaryMaxKeyID"));
    }
    // Autogenerated static field setter
    // Set static field: static private System.UInt32 DictionaryMaxKeyID
    static void _set_DictionaryMaxKeyID(uint value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::_set_DictionaryMaxKeyID");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<StringKeyDictionary_1<TValue>*>::get(), "DictionaryMaxKeyID", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidInsertModelForKey<TValue> didInsertModelForKey
    [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey*& dyn_didInsertModelForKey() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::dyn_didInsertModelForKey");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInsertModelForKey"))->offset;
      return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidRemoveModelForKey<TValue> didRemoveModelForKey
    [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey*& dyn_didRemoveModelForKey() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::dyn_didRemoveModelForKey");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didRemoveModelForKey"))->offset;
      return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidClearAllModels<TValue> didClearAllModels
    [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels*& dyn_didClearAllModels() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::dyn_didClearAllModels");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didClearAllModels"))->offset;
      return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.ModelExtension<TValue> _modelExtension
    [[deprecated]] typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension*& dyn__modelExtension() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::dyn__modelExtension");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelExtension"))->offset;
      return *reinterpret_cast<typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::ModelExtension**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt32,TValue> _storage
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<uint, TValue>*& dyn__storage() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::dyn__storage");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storage"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public TValue get_Item(System.String key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue get_Item(::StringW key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::get_Item");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, key);
    }
    // public System.Int32 get_Count()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Count() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::get_Count");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Void add_didInsertModelForKey(Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidInsertModelForKey<TValue> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_didInsertModelForKey(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::add_didInsertModelForKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInsertModelForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_didInsertModelForKey(Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidInsertModelForKey<TValue> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_didInsertModelForKey(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidInsertModelForKey* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::remove_didInsertModelForKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInsertModelForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_didRemoveModelForKey(Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidRemoveModelForKey<TValue> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_didRemoveModelForKey(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::add_didRemoveModelForKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didRemoveModelForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_didRemoveModelForKey(Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidRemoveModelForKey<TValue> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_didRemoveModelForKey(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidRemoveModelForKey* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::remove_didRemoveModelForKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didRemoveModelForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_didClearAllModels(Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidClearAllModels<TValue> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_didClearAllModels(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::add_didClearAllModels");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didClearAllModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_didClearAllModels(Normal.Realtime.Collections.StringKeyDictionary`1/Normal.Realtime.Collections.DidClearAllModels<TValue> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_didClearAllModels(typename ::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>::DidClearAllModels* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::remove_didClearAllModels");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didClearAllModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void Insert(System.String key, TValue value, System.Action`1<System.Boolean> completionHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Insert(::StringW key, TValue value, ::System::Action_1<bool>* completionHandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::Insert");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(completionHandler)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value, completionHandler);
    }
    // public System.Void Remove(System.String key, System.Action`1<System.Boolean> completionHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Remove(::StringW key, ::System::Action_1<bool>* completionHandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::Remove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(completionHandler)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, completionHandler);
    }
    // public System.Void Clear(System.Action`1<System.Boolean> completionHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Clear(::System::Action_1<bool>* completionHandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::Clear");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completionHandler)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completionHandler);
    }
    // public System.Boolean TryGetValue(System.String key, out TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryGetValue(::StringW key, ByRef<TValue> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::TryGetValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<TValue&>()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
    }
    // public System.Boolean ContainsKey(System.String key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ContainsKey(::StringW key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ContainsKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
    }
    // public System.Boolean ContainsValue(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ContainsValue(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ContainsValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
    }
    // private System.Void InsertValueForKeyID(System.UInt32 keyID, TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InsertValueForKeyID(uint keyID, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::InsertValueForKeyID");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertValueForKeyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyID), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyID, value);
    }
    // private System.Boolean RemoveValueForKeyID(System.UInt32 keyID)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool RemoveValueForKeyID(uint keyID) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::RemoveValueForKeyID");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveValueForKeyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyID)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keyID);
    }
    // private System.Void ClearDictionary()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearDictionary() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::ClearDictionary");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String,TValue>> GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>* GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::GetEnumerator");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, TValue>>*, false>(this, ___internal__method);
    }
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::System.Collections.IEnumerable.GetEnumerator");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
    }
    // public System.UInt32 GetCollectionTypeID()
    // Offset: 0xFFFFFFFFFFFFFFFF
    uint GetCollectionTypeID() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::GetCollectionTypeID");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Collections::StringKeyDictionary_1<TValue>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
    }
    // private System.Void FireDidInsertModelForKey(System.String key, TValue model, System.Boolean remote)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FireDidInsertModelForKey(::StringW key, TValue model, bool remote) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::FireDidInsertModelForKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireDidInsertModelForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, model, remote);
    }
    // private System.Void FireDidRemoveModelForKey(System.String key, System.Boolean remote)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FireDidRemoveModelForKey(::StringW key, bool remote) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::FireDidRemoveModelForKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireDidRemoveModelForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remote)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, remote);
    }
    // private System.Void FireDidClearAllModels(System.Boolean remote)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FireDidClearAllModels(bool remote) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::FireDidClearAllModels");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireDidClearAllModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remote)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remote);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringKeyDictionary_1<TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringKeyDictionary_1<TValue>*, creationType>()));
    }
    // protected override System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Int32 RealtimeModel::WriteLength(Normal.Realtime.Serialization.StreamContext context)
    int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::WriteLength");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
    }
    // protected override System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Void RealtimeModel::Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
    void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::Write");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
    }
    // protected override System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Void RealtimeModel::Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
    void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Collections::StringKeyDictionary_1::Read");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
    }
  }; // Normal.Realtime.Collections.StringKeyDictionary`1
  // Could not write size check! Type: Normal.Realtime.Collections.StringKeyDictionary`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
