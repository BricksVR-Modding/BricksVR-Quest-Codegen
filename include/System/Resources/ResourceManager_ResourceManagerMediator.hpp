// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Resources.ResourceManager
#include "System/Resources/ResourceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Version
  class Version;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: System::Resources
namespace System::Resources {
  // Forward declaring type: UltimateResourceFallbackLocation
  struct UltimateResourceFallbackLocation;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: RuntimeAssembly
  class RuntimeAssembly;
  // Forward declaring type: Assembly
  class Assembly;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Resources::ResourceManager::ResourceManagerMediator);
DEFINE_IL2CPP_ARG_TYPE(::System::Resources::ResourceManager::ResourceManagerMediator*, "System.Resources", "ResourceManager/ResourceManagerMediator");
// Type namespace: System.Resources
namespace System::Resources {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Resources.ResourceManager/System.Resources.ResourceManagerMediator
  // [TokenAttribute] Offset: FFFFFFFF
  class ResourceManager::ResourceManagerMediator : public ::Il2CppObject {
    public:
    public:
    // private System.Resources.ResourceManager _rm
    // Size: 0x8
    // Offset: 0x10
    ::System::Resources::ResourceManager* rm;
    // Field size check
    static_assert(sizeof(::System::Resources::ResourceManager*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Resources::ResourceManager*
    constexpr operator ::System::Resources::ResourceManager*() const noexcept {
      return rm;
    }
    // Get instance field reference: private System.Resources.ResourceManager _rm
    [[deprecated]] ::System::Resources::ResourceManager*& dyn__rm();
    // System.String get_ModuleDir()
    // Offset: 0x4A51C0
    ::StringW get_ModuleDir();
    // System.Type get_LocationInfo()
    // Offset: 0x4A5100
    ::System::Type* get_LocationInfo();
    // System.Type get_UserResourceSet()
    // Offset: 0x4A5220
    ::System::Type* get_UserResourceSet();
    // System.String get_BaseNameField()
    // Offset: 0x4A5070
    ::StringW get_BaseNameField();
    // System.Globalization.CultureInfo get_NeutralResourcesCulture()
    // Offset: 0x4A51E0
    ::System::Globalization::CultureInfo* get_NeutralResourcesCulture();
    // System.Boolean get_LookedForSatelliteContractVersion()
    // Offset: 0x4A5120
    bool get_LookedForSatelliteContractVersion();
    // System.Void set_LookedForSatelliteContractVersion(System.Boolean value)
    // Offset: 0x4A5240
    void set_LookedForSatelliteContractVersion(bool value);
    // System.Version get_SatelliteContractVersion()
    // Offset: 0x4A5200
    ::System::Version* get_SatelliteContractVersion();
    // System.Void set_SatelliteContractVersion(System.Version value)
    // Offset: 0x4A5260
    void set_SatelliteContractVersion(::System::Version* value);
    // System.Resources.UltimateResourceFallbackLocation get_FallbackLoc()
    // Offset: 0x4A50E0
    ::System::Resources::UltimateResourceFallbackLocation get_FallbackLoc();
    // System.Reflection.RuntimeAssembly get_CallingAssembly()
    // Offset: 0x4A50C0
    ::System::Reflection::RuntimeAssembly* get_CallingAssembly();
    // System.Reflection.RuntimeAssembly get_MainAssembly()
    // Offset: 0x4A5140
    ::System::Reflection::RuntimeAssembly* get_MainAssembly();
    // System.String get_BaseName()
    // Offset: 0x4A5090
    ::StringW get_BaseName();
    // System.Void .ctor(System.Resources.ResourceManager rm)
    // Offset: 0x4A4FE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ResourceManager::ResourceManagerMediator* New_ctor(::System::Resources::ResourceManager* rm) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Resources::ResourceManager::ResourceManagerMediator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ResourceManager::ResourceManagerMediator*, creationType>(rm)));
    }
    // System.String GetResourceFileName(System.Globalization.CultureInfo culture)
    // Offset: 0x4A4F50
    ::StringW GetResourceFileName(::System::Globalization::CultureInfo* culture);
    // System.Version ObtainSatelliteContractVersion(System.Reflection.Assembly a)
    // Offset: 0x4A4F80
    ::System::Version* ObtainSatelliteContractVersion(::System::Reflection::Assembly* a);
  }; // System.Resources.ResourceManager/System.Resources.ResourceManagerMediator
  #pragma pack(pop)
  static check_size<sizeof(ResourceManager::ResourceManagerMediator), 16 + sizeof(::System::Resources::ResourceManager*)> __System_Resources_ResourceManager_ResourceManagerMediatorSizeCheck;
  static_assert(sizeof(ResourceManager::ResourceManagerMediator) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_ModuleDir
// Il2CppName: get_ModuleDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_ModuleDir)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_ModuleDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_LocationInfo
// Il2CppName: get_LocationInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_LocationInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_LocationInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_UserResourceSet
// Il2CppName: get_UserResourceSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_UserResourceSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_UserResourceSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_BaseNameField
// Il2CppName: get_BaseNameField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_BaseNameField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_BaseNameField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_NeutralResourcesCulture
// Il2CppName: get_NeutralResourcesCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_NeutralResourcesCulture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_NeutralResourcesCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_LookedForSatelliteContractVersion
// Il2CppName: get_LookedForSatelliteContractVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_LookedForSatelliteContractVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_LookedForSatelliteContractVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::set_LookedForSatelliteContractVersion
// Il2CppName: set_LookedForSatelliteContractVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Resources::ResourceManager::ResourceManagerMediator::*)(bool)>(&System::Resources::ResourceManager::ResourceManagerMediator::set_LookedForSatelliteContractVersion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "set_LookedForSatelliteContractVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_SatelliteContractVersion
// Il2CppName: get_SatelliteContractVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_SatelliteContractVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_SatelliteContractVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::set_SatelliteContractVersion
// Il2CppName: set_SatelliteContractVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Resources::ResourceManager::ResourceManagerMediator::*)(::System::Version*)>(&System::Resources::ResourceManager::ResourceManagerMediator::set_SatelliteContractVersion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Version")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "set_SatelliteContractVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_FallbackLoc
// Il2CppName: get_FallbackLoc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Resources::UltimateResourceFallbackLocation (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_FallbackLoc)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_FallbackLoc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_CallingAssembly
// Il2CppName: get_CallingAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::RuntimeAssembly* (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_CallingAssembly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_CallingAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_MainAssembly
// Il2CppName: get_MainAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::RuntimeAssembly* (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_MainAssembly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_MainAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::get_BaseName
// Il2CppName: get_BaseName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Resources::ResourceManager::ResourceManagerMediator::*)()>(&System::Resources::ResourceManager::ResourceManagerMediator::get_BaseName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "get_BaseName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::GetResourceFileName
// Il2CppName: GetResourceFileName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Resources::ResourceManager::ResourceManagerMediator::*)(::System::Globalization::CultureInfo*)>(&System::Resources::ResourceManager::ResourceManagerMediator::GetResourceFileName)> {
  static const MethodInfo* get() {
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "GetResourceFileName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{culture});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceManager::ResourceManagerMediator::ObtainSatelliteContractVersion
// Il2CppName: ObtainSatelliteContractVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (System::Resources::ResourceManager::ResourceManagerMediator::*)(::System::Reflection::Assembly*)>(&System::Resources::ResourceManager::ResourceManagerMediator::ObtainSatelliteContractVersion)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System.Reflection", "Assembly")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceManager::ResourceManagerMediator*), "ObtainSatelliteContractVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
