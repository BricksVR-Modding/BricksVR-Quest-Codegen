// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.ManifestEnvelope/System.Diagnostics.Tracing.ManifestFormats
#include "System/Diagnostics/Tracing/ManifestEnvelope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.ManifestEnvelope/System.Diagnostics.Tracing.ManifestFormats SimpleXmlFormat
::System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats::_get_SimpleXmlFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats::_get_SimpleXmlFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats>("System.Diagnostics.Tracing", "ManifestEnvelope/ManifestFormats", "SimpleXmlFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.ManifestEnvelope/System.Diagnostics.Tracing.ManifestFormats SimpleXmlFormat
void System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats::_set_SimpleXmlFormat(::System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats::_set_SimpleXmlFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "ManifestEnvelope/ManifestFormats", "SimpleXmlFormat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated]] uint8_t& System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ManifestEnvelope::ManifestFormats::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSourceException
#include "System/Diagnostics/Tracing/EventSourceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventLevel
#include "System/Diagnostics/Tracing/EventLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel LogAlways
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_LogAlways() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_LogAlways");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "LogAlways"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel LogAlways
void System::Diagnostics::Tracing::EventLevel::_set_LogAlways(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_LogAlways");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "LogAlways", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Critical
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Critical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Critical"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Critical
void System::Diagnostics::Tracing::EventLevel::_set_Critical(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Critical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Critical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Error
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Error
void System::Diagnostics::Tracing::EventLevel::_set_Error(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Warning
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Warning
void System::Diagnostics::Tracing::EventLevel::_set_Warning(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Informational
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Informational() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Informational");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Informational"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Informational
void System::Diagnostics::Tracing::EventLevel::_set_Informational(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Informational");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Informational", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Verbose
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Verbose
void System::Diagnostics::Tracing::EventLevel::_set_Verbose(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Verbose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Diagnostics::Tracing::EventLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventTask
#include "System/Diagnostics/Tracing/EventTask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventTask None
::System::Diagnostics::Tracing::EventTask System::Diagnostics::Tracing::EventTask::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventTask::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventTask>("System.Diagnostics.Tracing", "EventTask", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventTask None
void System::Diagnostics::Tracing::EventTask::_set_None(::System::Diagnostics::Tracing::EventTask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventTask::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventTask", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Diagnostics::Tracing::EventTask::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventTask::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventOpcode
#include "System/Diagnostics/Tracing/EventOpcode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Info
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Info"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Info
void System::Diagnostics::Tracing::EventOpcode::_set_Info(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Start
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Start
void System::Diagnostics::Tracing::EventOpcode::_set_Start(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Stop
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Stop
void System::Diagnostics::Tracing::EventOpcode::_set_Stop(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Stop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode DataCollectionStart
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_DataCollectionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_DataCollectionStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "DataCollectionStart"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode DataCollectionStart
void System::Diagnostics::Tracing::EventOpcode::_set_DataCollectionStart(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_DataCollectionStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "DataCollectionStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode DataCollectionStop
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_DataCollectionStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_DataCollectionStop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "DataCollectionStop"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode DataCollectionStop
void System::Diagnostics::Tracing::EventOpcode::_set_DataCollectionStop(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_DataCollectionStop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "DataCollectionStop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Extension
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Extension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Extension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Extension"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Extension
void System::Diagnostics::Tracing::EventOpcode::_set_Extension(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Extension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Extension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Reply
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Reply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Reply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Reply"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Reply
void System::Diagnostics::Tracing::EventOpcode::_set_Reply(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Reply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Reply", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Resume
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Resume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Resume"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Resume
void System::Diagnostics::Tracing::EventOpcode::_set_Resume(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Resume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Resume", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Suspend
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Suspend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Suspend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Suspend"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Suspend
void System::Diagnostics::Tracing::EventOpcode::_set_Suspend(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Suspend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Suspend", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Send
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Send");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Send"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Send
void System::Diagnostics::Tracing::EventOpcode::_set_Send(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Send");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Send", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventOpcode Receive
::System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventOpcode::_get_Receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_get_Receive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventOpcode>("System.Diagnostics.Tracing", "EventOpcode", "Receive"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventOpcode Receive
void System::Diagnostics::Tracing::EventOpcode::_set_Receive(::System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::_set_Receive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventOpcode", "Receive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Diagnostics::Tracing::EventOpcode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventOpcode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventChannel
#include "System/Diagnostics/Tracing/EventChannel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventChannel None
::System::Diagnostics::Tracing::EventChannel System::Diagnostics::Tracing::EventChannel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventChannel>("System.Diagnostics.Tracing", "EventChannel", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventChannel None
void System::Diagnostics::Tracing::EventChannel::_set_None(::System::Diagnostics::Tracing::EventChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventChannel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventChannel Admin
::System::Diagnostics::Tracing::EventChannel System::Diagnostics::Tracing::EventChannel::_get_Admin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_get_Admin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventChannel>("System.Diagnostics.Tracing", "EventChannel", "Admin"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventChannel Admin
void System::Diagnostics::Tracing::EventChannel::_set_Admin(::System::Diagnostics::Tracing::EventChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_set_Admin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventChannel", "Admin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventChannel Operational
::System::Diagnostics::Tracing::EventChannel System::Diagnostics::Tracing::EventChannel::_get_Operational() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_get_Operational");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventChannel>("System.Diagnostics.Tracing", "EventChannel", "Operational"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventChannel Operational
void System::Diagnostics::Tracing::EventChannel::_set_Operational(::System::Diagnostics::Tracing::EventChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_set_Operational");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventChannel", "Operational", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventChannel Analytic
::System::Diagnostics::Tracing::EventChannel System::Diagnostics::Tracing::EventChannel::_get_Analytic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_get_Analytic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventChannel>("System.Diagnostics.Tracing", "EventChannel", "Analytic"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventChannel Analytic
void System::Diagnostics::Tracing::EventChannel::_set_Analytic(::System::Diagnostics::Tracing::EventChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_set_Analytic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventChannel", "Analytic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventChannel Debug
::System::Diagnostics::Tracing::EventChannel System::Diagnostics::Tracing::EventChannel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventChannel>("System.Diagnostics.Tracing", "EventChannel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventChannel Debug
void System::Diagnostics::Tracing::EventChannel::_set_Debug(::System::Diagnostics::Tracing::EventChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventChannel", "Debug", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated]] uint8_t& System::Diagnostics::Tracing::EventChannel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventChannel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventKeywords
#include "System/Diagnostics/Tracing/EventKeywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords None
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords None
void System::Diagnostics::Tracing::EventKeywords::_set_None(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords All
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords All
void System::Diagnostics::Tracing::EventKeywords::_set_All(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords MicrosoftTelemetry
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_MicrosoftTelemetry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_MicrosoftTelemetry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "MicrosoftTelemetry"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords MicrosoftTelemetry
void System::Diagnostics::Tracing::EventKeywords::_set_MicrosoftTelemetry(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_MicrosoftTelemetry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "MicrosoftTelemetry", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords WdiContext
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_WdiContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_WdiContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "WdiContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords WdiContext
void System::Diagnostics::Tracing::EventKeywords::_set_WdiContext(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_WdiContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "WdiContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords WdiDiagnostic
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_WdiDiagnostic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_WdiDiagnostic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "WdiDiagnostic"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords WdiDiagnostic
void System::Diagnostics::Tracing::EventKeywords::_set_WdiDiagnostic(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_WdiDiagnostic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "WdiDiagnostic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords Sqm
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_Sqm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_Sqm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "Sqm"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords Sqm
void System::Diagnostics::Tracing::EventKeywords::_set_Sqm(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_Sqm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "Sqm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords AuditFailure
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_AuditFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_AuditFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "AuditFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords AuditFailure
void System::Diagnostics::Tracing::EventKeywords::_set_AuditFailure(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_AuditFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "AuditFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords AuditSuccess
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_AuditSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_AuditSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "AuditSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords AuditSuccess
void System::Diagnostics::Tracing::EventKeywords::_set_AuditSuccess(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_AuditSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "AuditSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords CorrelationHint
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_CorrelationHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_CorrelationHint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "CorrelationHint"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords CorrelationHint
void System::Diagnostics::Tracing::EventKeywords::_set_CorrelationHint(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_CorrelationHint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "CorrelationHint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords EventLogClassic
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_EventLogClassic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_EventLogClassic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "EventLogClassic"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords EventLogClassic
void System::Diagnostics::Tracing::EventKeywords::_set_EventLogClassic(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_EventLogClassic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "EventLogClassic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 value__
[[deprecated]] int64_t& System::Diagnostics::Tracing::EventKeywords::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Emit.UnmanagedMarshal
#include "System/Reflection/Emit/UnmanagedMarshal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.DynamicMethod
#include "System/Reflection/Emit/DynamicMethod.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::Emit::DynamicMethod::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MethodBase*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_DeclaringType
::System::Type* System::Reflection::Emit::DynamicMethod::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MemberInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::Emit::DynamicMethod::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MethodBase*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Name
::StringW System::Reflection::Emit::DynamicMethod::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MemberInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_ReflectedType
::System::Type* System::Reflection::Emit::DynamicMethod::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MemberInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MemberInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MemberInfo*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MethodBase*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::Emit::DynamicMethod::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MethodBase*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.Invoke
::Il2CppObject* System::Reflection::Emit::DynamicMethod::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MethodBase*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.IsDefined
bool System::Reflection::Emit::DynamicMethod::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::IsDefined");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Reflection::MemberInfo*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.__Il2CppComObject
#include "System/__Il2CppComObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComObject.Finalize
void System::__Il2CppComObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComObject::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComDelegate
#include "System/__Il2CppComDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComDelegate.Finalize
void System::__Il2CppComDelegate::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComDelegate::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::__Il2CppComObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.AudioDeviceDataReader
#include "Normal/Realtime/AudioDeviceDataReader.hpp"
// Including type: Normal.Realtime.MicrophoneDevice
#include "Normal/Realtime/MicrophoneDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.MicrophoneDevice <microphone>k__BackingField
[[deprecated]] ::Normal::Realtime::MicrophoneDevice*& Normal::Realtime::AudioDeviceDataReader::dyn_$microphone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::dyn_$microphone$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<microphone>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::MicrophoneDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _previousLocalWriteHeadPosition
[[deprecated]] int& Normal::Realtime::AudioDeviceDataReader::dyn__previousLocalWriteHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::dyn__previousLocalWriteHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousLocalWriteHeadPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _writeHeadLoopCount
[[deprecated]] int& Normal::Realtime::AudioDeviceDataReader::dyn__writeHeadLoopCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::dyn__writeHeadLoopCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeHeadLoopCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _readHeadPosition
[[deprecated]] int& Normal::Realtime::AudioDeviceDataReader::dyn__readHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::dyn__readHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readHeadPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.AudioDeviceDataReader.get_microphone
::Normal::Realtime::MicrophoneDevice* Normal::Realtime::AudioDeviceDataReader::get_microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::get_microphone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_microphone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::MicrophoneDevice*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioDeviceDataReader.set_microphone
void Normal::Realtime::AudioDeviceDataReader::set_microphone(::Normal::Realtime::MicrophoneDevice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::set_microphone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_microphone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.AudioDeviceDataReader.GetData
bool Normal::Realtime::AudioDeviceDataReader::GetData(::ArrayW<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Normal.Realtime.AudioDeviceDataReader.GetMostRecentData
bool Normal::Realtime::AudioDeviceDataReader::GetMostRecentData(::ArrayW<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioDeviceDataReader::GetMostRecentData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMostRecentData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.AudioOutput
#include "Normal/Realtime/AudioOutput.hpp"
// Including type: Normal.Realtime.AudioOutput/Normal.Realtime.<>c
#include "Normal/Realtime/AudioOutput_--c.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mute
[[deprecated]] bool& Normal::Realtime::AudioOutput::dyn__mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::dyn__mute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _dbLevel
[[deprecated]] float& Normal::Realtime::AudioOutput::dyn__dbLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::dyn__dbLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dbLevel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _systemSampleRate
[[deprecated]] int& Normal::Realtime::AudioOutput::dyn__systemSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::dyn__systemSampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_systemSampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.AudioOutputStream _audioOutputStream
[[deprecated]] ::Normal::Realtime::Native::AudioOutputStream*& Normal::Realtime::AudioOutput::dyn__audioOutputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::dyn__audioOutputStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioOutputStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::AudioOutputStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _audioOutputStreamChannels
[[deprecated]] int& Normal::Realtime::AudioOutput::dyn__audioOutputStreamChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::dyn__audioOutputStreamChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioOutputStreamChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
[[deprecated]] ::UnityEngine::AudioClip*& Normal::Realtime::AudioOutput::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _audioData
[[deprecated]] ::ArrayW<float>& Normal::Realtime::AudioOutput::dyn__audioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::dyn__audioData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioData"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.AudioOutput.get_mute
bool Normal::Realtime::AudioOutput::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioOutput.set_mute
void Normal::Realtime::AudioOutput::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.AudioOutput.get_dbLevel
float Normal::Realtime::AudioOutput::get_dbLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::get_dbLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dbLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioOutput.Awake
void Normal::Realtime::AudioOutput::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioOutput.OnDestroy
void Normal::Realtime::AudioOutput::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioOutput.OnEnable
void Normal::Realtime::AudioOutput::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioOutput.StartWithAudioOutputStream
void Normal::Realtime::AudioOutput::StartWithAudioOutputStream(::Normal::Realtime::Native::AudioOutputStream* audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::StartWithAudioOutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithAudioOutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.AudioOutput.Stop
void Normal::Realtime::AudioOutput::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioOutput.OnAudioFilterRead
void Normal::Realtime::AudioOutput::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.AudioOutput/Normal.Realtime.<>c
#include "Normal/Realtime/AudioOutput_--c.hpp"
// Including type: UnityEngine.AudioClip/UnityEngine.PCMReaderCallback
#include "UnityEngine/AudioClip_PCMReaderCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Normal.Realtime.AudioOutput/Normal.Realtime.<>c <>9
::Normal::Realtime::AudioOutput::$$c* Normal::Realtime::AudioOutput::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Normal::Realtime::AudioOutput::$$c*>("Normal.Realtime", "AudioOutput/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Normal.Realtime.AudioOutput/Normal.Realtime.<>c <>9
void Normal::Realtime::AudioOutput::$$c::_set_$$9(::Normal::Realtime::AudioOutput::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "AudioOutput/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioClip/UnityEngine.PCMReaderCallback <>9__15_0
::UnityEngine::AudioClip::PCMReaderCallback* Normal::Realtime::AudioOutput::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::AudioClip::PCMReaderCallback*>("Normal.Realtime", "AudioOutput/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioClip/UnityEngine.PCMReaderCallback <>9__15_0
void Normal::Realtime::AudioOutput::$$c::_set_$$9__15_0(::UnityEngine::AudioClip::PCMReaderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Normal.Realtime", "AudioOutput/<>c", "<>9__15_0", value)));
}
// Autogenerated method: Normal.Realtime.AudioOutput/Normal.Realtime.<>c..cctor
void Normal::Realtime::AudioOutput::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "AudioOutput/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.AudioOutput/Normal.Realtime.<>c.<StartWithAudioOutputStream>b__15_0
void Normal::Realtime::AudioOutput::$$c::$StartWithAudioOutputStream$b__15_0(::ArrayW<float> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioOutput::$$c::<StartWithAudioOutputStream>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartWithAudioOutputStream>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.AudioPreprocessorPlaybackListener
#include "Normal/Realtime/AudioPreprocessorPlaybackListener.hpp"
// Including type: Normal.Realtime.Native.AudioPreprocessor
#include "Normal/Realtime/Native/AudioPreprocessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Native.AudioPreprocessor audioPreprocessor
[[deprecated]] ::Normal::Realtime::Native::AudioPreprocessor*& Normal::Realtime::AudioPreprocessorPlaybackListener::dyn_audioPreprocessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioPreprocessorPlaybackListener::dyn_audioPreprocessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioPreprocessor"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::AudioPreprocessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean didLogChannelWarning
[[deprecated]] bool& Normal::Realtime::AudioPreprocessorPlaybackListener::dyn_didLogChannelWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioPreprocessorPlaybackListener::dyn_didLogChannelWarning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didLogChannelWarning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.AudioPreprocessorPlaybackListener.OnAudioFilterRead
void Normal::Realtime::AudioPreprocessorPlaybackListener::OnAudioFilterRead(::ArrayW<float> samples, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioPreprocessorPlaybackListener::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.MicrophoneDevice
#include "Normal/Realtime/MicrophoneDevice.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Normal.Realtime.MicrophoneDevice <sharedMicrophone>k__BackingField
::Normal::Realtime::MicrophoneDevice* Normal::Realtime::MicrophoneDevice::_get_$sharedMicrophone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::_get_$sharedMicrophone$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Normal::Realtime::MicrophoneDevice*>("Normal.Realtime", "MicrophoneDevice", "<sharedMicrophone>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Normal.Realtime.MicrophoneDevice <sharedMicrophone>k__BackingField
void Normal::Realtime::MicrophoneDevice::_set_$sharedMicrophone$k__BackingField(::Normal::Realtime::MicrophoneDevice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::_set_$sharedMicrophone$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "MicrophoneDevice", "<sharedMicrophone>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _microphone
[[deprecated]] ::UnityEngine::AudioClip*& Normal::Realtime::MicrophoneDevice::dyn__microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::dyn__microphone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphone"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _deviceName
[[deprecated]] ::StringW& Normal::Realtime::MicrophoneDevice::dyn__deviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::dyn__deviceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deviceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sampleRate
[[deprecated]] int& Normal::Realtime::MicrophoneDevice::dyn__sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::dyn__sampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfChannels
[[deprecated]] int& Normal::Realtime::MicrophoneDevice::dyn__numberOfChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::dyn__numberOfChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sampleCount
[[deprecated]] int& Normal::Realtime::MicrophoneDevice::dyn__sampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::dyn__sampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.get_sharedMicrophone
::Normal::Realtime::MicrophoneDevice* Normal::Realtime::MicrophoneDevice::get_sharedMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::get_sharedMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "MicrophoneDevice", "get_sharedMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::MicrophoneDevice*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.set_sharedMicrophone
void Normal::Realtime::MicrophoneDevice::set_sharedMicrophone(::Normal::Realtime::MicrophoneDevice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::set_sharedMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "MicrophoneDevice", "set_sharedMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.get_sampleRate
int Normal::Realtime::MicrophoneDevice::get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::get_sampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.get_numberOfChannels
int Normal::Realtime::MicrophoneDevice::get_numberOfChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::get_numberOfChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.get_deviceWriteHeadPosition
int Normal::Realtime::MicrophoneDevice::get_deviceWriteHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::get_deviceWriteHeadPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceWriteHeadPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.get_deviceBufferSampleCount
int Normal::Realtime::MicrophoneDevice::get_deviceBufferSampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::get_deviceBufferSampleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceBufferSampleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.Start
::Normal::Realtime::MicrophoneDevice* Normal::Realtime::MicrophoneDevice::Start(::StringW deviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "MicrophoneDevice", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::MicrophoneDevice*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceName);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.Dispose
void Normal::Realtime::MicrophoneDevice::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::MicrophoneDevice*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.Dispose
void Normal::Realtime::MicrophoneDevice::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.GetBufferData
bool Normal::Realtime::MicrophoneDevice::GetBufferData(::ArrayW<float> buffer, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::GetBufferData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBufferData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offsetSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer, offsetSamples);
}
// Autogenerated method: Normal.Realtime.MicrophoneDevice.Finalize
void Normal::Realtime::MicrophoneDevice::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::MicrophoneDevice::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.OculusMicrophoneDevice
#include "Normal/Realtime/OculusMicrophoneDevice.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Type __oculusPlatformCore
::System::Type* Normal::Realtime::OculusMicrophoneDevice::_get___oculusPlatformCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::_get___oculusPlatformCore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Normal.Realtime", "OculusMicrophoneDevice", "__oculusPlatformCore"));
}
// Autogenerated static field setter
// Set static field: static private System.Type __oculusPlatformCore
void Normal::Realtime::OculusMicrophoneDevice::_set___oculusPlatformCore(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::_set___oculusPlatformCore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "OculusMicrophoneDevice", "__oculusPlatformCore", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo __IsInitializedMethod
::System::Reflection::MethodInfo* Normal::Realtime::OculusMicrophoneDevice::_get___IsInitializedMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::_get___IsInitializedMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("Normal.Realtime", "OculusMicrophoneDevice", "__IsInitializedMethod"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo __IsInitializedMethod
void Normal::Realtime::OculusMicrophoneDevice::_set___IsInitializedMethod(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::_set___IsInitializedMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "OculusMicrophoneDevice", "__IsInitializedMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OVR_DLL_NAME
::StringW Normal::Realtime::OculusMicrophoneDevice::_get_OVR_DLL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::_get_OVR_DLL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal.Realtime", "OculusMicrophoneDevice", "OVR_DLL_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String OVR_DLL_NAME
void Normal::Realtime::OculusMicrophoneDevice::_set_OVR_DLL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::_set_OVR_DLL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "OculusMicrophoneDevice", "OVR_DLL_NAME", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _microphone
[[deprecated]] ::System::IntPtr& Normal::Realtime::OculusMicrophoneDevice::dyn__microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::dyn__microphone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphone"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice..cctor
void Normal::Realtime::OculusMicrophoneDevice::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.IsOculusPlatformAvailable
bool Normal::Realtime::OculusMicrophoneDevice::IsOculusPlatformAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::IsOculusPlatformAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", "IsOculusPlatformAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.IsOculusPlatformInitialized
bool Normal::Realtime::OculusMicrophoneDevice::IsOculusPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::IsOculusPlatformInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", "IsOculusPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.ovr_Microphone_Create
::System::IntPtr Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", "ovr_Microphone_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.ovr_Microphone_Destroy
void Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Destroy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", "ovr_Microphone_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.ovr_Microphone_Start
void Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Start(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", "ovr_Microphone_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.ovr_Microphone_Stop
void Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Stop(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", "ovr_Microphone_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.ovr_Microphone_GetPCMFloat
::System::UIntPtr Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_GetPCMFloat(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::ovr_Microphone_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "OculusMicrophoneDevice", "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.Dispose
void Normal::Realtime::OculusMicrophoneDevice::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::OculusMicrophoneDevice*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.Dispose
void Normal::Realtime::OculusMicrophoneDevice::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.Start
void Normal::Realtime::OculusMicrophoneDevice::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.Stop
void Normal::Realtime::OculusMicrophoneDevice::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.GetAudioData
bool Normal::Realtime::OculusMicrophoneDevice::GetAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::GetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.OculusMicrophoneDevice.Finalize
void Normal::Realtime::OculusMicrophoneDevice::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::OculusMicrophoneDevice::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
// Including type: Normal.Realtime.RealtimeAvatar/Normal.Realtime.LocalPlayer
#include "Normal/Realtime/RealtimeAvatar_LocalPlayer.hpp"
// Including type: Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType
#include "Normal/Realtime/RealtimeAvatar_DeviceType.hpp"
// Including type: Normal.Realtime.RealtimeAvatarModel
#include "Normal/Realtime/RealtimeAvatarModel.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Normal.Realtime.RealtimeAvatarManager
#include "Normal/Realtime/RealtimeAvatarManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> _nodeStates
::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* Normal::Realtime::RealtimeAvatar::_get__nodeStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::_get__nodeStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*>("Normal.Realtime", "RealtimeAvatar", "_nodeStates"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> _nodeStates
void Normal::Realtime::RealtimeAvatar::_set__nodeStates(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::_set__nodeStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatar", "_nodeStates", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatar/Normal.Realtime.LocalPlayer _localPlayer
[[deprecated]] ::Normal::Realtime::RealtimeAvatar::LocalPlayer*& Normal::Realtime::RealtimeAvatar::dyn__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::dyn__localPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatar::LocalPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _head
[[deprecated]] ::UnityEngine::Transform*& Normal::Realtime::RealtimeAvatar::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _leftHand
[[deprecated]] ::UnityEngine::Transform*& Normal::Realtime::RealtimeAvatar::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rightHand
[[deprecated]] ::UnityEngine::Transform*& Normal::Realtime::RealtimeAvatar::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarManager _realtimeAvatarManager
[[deprecated]] ::Normal::Realtime::RealtimeAvatarManager*& Normal::Realtime::RealtimeAvatar::dyn__realtimeAvatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::dyn__realtimeAvatarManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtimeAvatarManager"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.get_localPlayer
::Normal::Realtime::RealtimeAvatar::LocalPlayer* Normal::Realtime::RealtimeAvatar::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeAvatar::LocalPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.set_localPlayer
void Normal::Realtime::RealtimeAvatar::set_localPlayer(::Normal::Realtime::RealtimeAvatar::LocalPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::set_localPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.get_deviceType
::Normal::Realtime::RealtimeAvatar::DeviceType Normal::Realtime::RealtimeAvatar::get_deviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::get_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeAvatar::DeviceType, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.set_deviceType
void Normal::Realtime::RealtimeAvatar::set_deviceType(::Normal::Realtime::RealtimeAvatar::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::set_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.get_deviceModel
::StringW Normal::Realtime::RealtimeAvatar::get_deviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::get_deviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.set_deviceModel
void Normal::Realtime::RealtimeAvatar::set_deviceModel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::set_deviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.get_head
::UnityEngine::Transform* Normal::Realtime::RealtimeAvatar::get_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::get_head");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_head", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.get_leftHand
::UnityEngine::Transform* Normal::Realtime::RealtimeAvatar::get_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::get_leftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.get_rightHand
::UnityEngine::Transform* Normal::Realtime::RealtimeAvatar::get_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::get_rightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.Start
void Normal::Realtime::RealtimeAvatar::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.OnDestroy
void Normal::Realtime::RealtimeAvatar::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.FixedUpdate
void Normal::Realtime::RealtimeAvatar::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.Update
void Normal::Realtime::RealtimeAvatar::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.LateUpdate
void Normal::Realtime::RealtimeAvatar::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.OnRealtimeModelReplaced
void Normal::Realtime::RealtimeAvatar::OnRealtimeModelReplaced(::Normal::Realtime::RealtimeAvatarModel* previousModel, ::Normal::Realtime::RealtimeAvatarModel* currentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::OnRealtimeModelReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeAvatar*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousModel, currentModel);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.SetLocalPlayer
void Normal::Realtime::RealtimeAvatar::SetLocalPlayer(::Normal::Realtime::RealtimeAvatar::LocalPlayer* localPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::SetLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localPlayer);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.ActiveStateChanged
void Normal::Realtime::RealtimeAvatar::ActiveStateChanged(::Normal::Realtime::RealtimeAvatarModel* model, bool nodeIsActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::ActiveStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActiveStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(nodeIsActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, nodeIsActive);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.UpdateAvatarTransformsForLocalPlayer
void Normal::Realtime::RealtimeAvatar::UpdateAvatarTransformsForLocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::UpdateAvatarTransformsForLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarTransformsForLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar.UpdateTransformWithNodeState
void Normal::Realtime::RealtimeAvatar::UpdateTransformWithNodeState(::UnityEngine::Transform* transform, ::UnityEngine::XR::XRNodeState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::UpdateTransformWithNodeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeAvatar", "UpdateTransformWithNodeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, state);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatar..cctor
void Normal::Realtime::RealtimeAvatar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeAvatar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatar/Normal.Realtime.LocalPlayer
#include "Normal/Realtime/RealtimeAvatar_LocalPlayer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform root
[[deprecated]] ::UnityEngine::Transform*& Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform head
[[deprecated]] ::UnityEngine::Transform*& Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHand
[[deprecated]] ::UnityEngine::Transform*& Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHand
[[deprecated]] ::UnityEngine::Transform*& Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::LocalPlayer::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType
#include "Normal/Realtime/RealtimeAvatar_DeviceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType Unknown
::Normal::Realtime::RealtimeAvatar::DeviceType Normal::Realtime::RealtimeAvatar::DeviceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::DeviceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatar::DeviceType>("Normal.Realtime", "RealtimeAvatar/DeviceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType Unknown
void Normal::Realtime::RealtimeAvatar::DeviceType::_set_Unknown(::Normal::Realtime::RealtimeAvatar::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::DeviceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatar/DeviceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType OpenVR
::Normal::Realtime::RealtimeAvatar::DeviceType Normal::Realtime::RealtimeAvatar::DeviceType::_get_OpenVR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::DeviceType::_get_OpenVR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatar::DeviceType>("Normal.Realtime", "RealtimeAvatar/DeviceType", "OpenVR"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType OpenVR
void Normal::Realtime::RealtimeAvatar::DeviceType::_set_OpenVR(::Normal::Realtime::RealtimeAvatar::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::DeviceType::_set_OpenVR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatar/DeviceType", "OpenVR", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType Oculus
::Normal::Realtime::RealtimeAvatar::DeviceType Normal::Realtime::RealtimeAvatar::DeviceType::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::DeviceType::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatar::DeviceType>("Normal.Realtime", "RealtimeAvatar/DeviceType", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType Oculus
void Normal::Realtime::RealtimeAvatar::DeviceType::_set_Oculus(::Normal::Realtime::RealtimeAvatar::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::DeviceType::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatar/DeviceType", "Oculus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::RealtimeAvatar::DeviceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatar::DeviceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarManager
#include "Normal/Realtime/RealtimeAvatarManager.hpp"
// Including type: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.AvatarCreatedDestroyed
#include "Normal/Realtime/RealtimeAvatarManager_AvatarCreatedDestroyed.hpp"
// Including type: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.<>c__DisplayClass28_0
#include "Normal/Realtime/RealtimeAvatarManager_--c__DisplayClass28_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.RealtimeAvatar/Normal.Realtime.LocalPlayer
#include "Normal/Realtime/RealtimeAvatar_LocalPlayer.hpp"
// Including type: Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType
#include "Normal/Realtime/RealtimeAvatar_DeviceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localAvatarPrefab
[[deprecated]] ::UnityEngine::GameObject*& Normal::Realtime::RealtimeAvatarManager::dyn__localAvatarPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::dyn__localAvatarPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localAvatarPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatar/Normal.Realtime.LocalPlayer _localPlayer
[[deprecated]] ::Normal::Realtime::RealtimeAvatar::LocalPlayer*& Normal::Realtime::RealtimeAvatarManager::dyn__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::dyn__localPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatar::LocalPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatar <localAvatar>k__BackingField
[[deprecated]] ::Normal::Realtime::RealtimeAvatar*& Normal::Realtime::RealtimeAvatarManager::dyn_$localAvatar$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::dyn_$localAvatar$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localAvatar>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Normal.Realtime.RealtimeAvatar> <avatars>k__BackingField
[[deprecated]] ::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::RealtimeAvatar*>*& Normal::Realtime::RealtimeAvatarManager::dyn_$avatars$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::dyn_$avatars$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<avatars>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::RealtimeAvatar*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.AvatarCreatedDestroyed avatarCreated
[[deprecated]] ::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed*& Normal::Realtime::RealtimeAvatarManager::dyn_avatarCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::dyn_avatarCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarCreated"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.AvatarCreatedDestroyed avatarDestroyed
[[deprecated]] ::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed*& Normal::Realtime::RealtimeAvatarManager::dyn_avatarDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::dyn_avatarDestroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarDestroyed"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
[[deprecated]] ::Normal::Realtime::Realtime*& Normal::Realtime::RealtimeAvatarManager::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.get_localAvatarPrefab
::UnityEngine::GameObject* Normal::Realtime::RealtimeAvatarManager::get_localAvatarPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::get_localAvatarPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localAvatarPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.set_localAvatarPrefab
void Normal::Realtime::RealtimeAvatarManager::set_localAvatarPrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::set_localAvatarPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localAvatarPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.get_localAvatar
::Normal::Realtime::RealtimeAvatar* Normal::Realtime::RealtimeAvatarManager::get_localAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::get_localAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeAvatar*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.set_localAvatar
void Normal::Realtime::RealtimeAvatarManager::set_localAvatar(::Normal::Realtime::RealtimeAvatar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::set_localAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.get_avatars
::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::RealtimeAvatar*>* Normal::Realtime::RealtimeAvatarManager::get_avatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::get_avatars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::RealtimeAvatar*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.set_avatars
void Normal::Realtime::RealtimeAvatarManager::set_avatars(::System::Collections::Generic::Dictionary_2<int, ::Normal::Realtime::RealtimeAvatar*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::set_avatars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.add_avatarCreated
void Normal::Realtime::RealtimeAvatarManager::add_avatarCreated(::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::add_avatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_avatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.remove_avatarCreated
void Normal::Realtime::RealtimeAvatarManager::remove_avatarCreated(::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::remove_avatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_avatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.add_avatarDestroyed
void Normal::Realtime::RealtimeAvatarManager::add_avatarDestroyed(::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::add_avatarDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_avatarDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.remove_avatarDestroyed
void Normal::Realtime::RealtimeAvatarManager::remove_avatarDestroyed(::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::remove_avatarDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_avatarDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.Awake
void Normal::Realtime::RealtimeAvatarManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.OnEnable
void Normal::Realtime::RealtimeAvatarManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.OnDisable
void Normal::Realtime::RealtimeAvatarManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.OnDestroy
void Normal::Realtime::RealtimeAvatarManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.DidConnectToRoom
void Normal::Realtime::RealtimeAvatarManager::DidConnectToRoom(::Normal::Realtime::Realtime* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::DidConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.GetRealtimeAvatarDeviceTypeForLocalPlayer
::Normal::Realtime::RealtimeAvatar::DeviceType Normal::Realtime::RealtimeAvatarManager::GetRealtimeAvatarDeviceTypeForLocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::GetRealtimeAvatarDeviceTypeForLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeAvatarManager", "GetRealtimeAvatarDeviceTypeForLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeAvatar::DeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager._RegisterAvatar
void Normal::Realtime::RealtimeAvatarManager::_RegisterAvatar(int clientID, ::Normal::Realtime::RealtimeAvatar* avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::_RegisterAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_RegisterAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID, avatar);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager._UnregisterAvatar
void Normal::Realtime::RealtimeAvatarManager::_UnregisterAvatar(::Normal::Realtime::RealtimeAvatar* avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::_UnregisterAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_UnregisterAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatar);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.SetLocalAvatarPrefab
void Normal::Realtime::RealtimeAvatarManager::SetLocalAvatarPrefab(::UnityEngine::GameObject* localAvatarPrefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::SetLocalAvatarPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalAvatarPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localAvatarPrefab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localAvatarPrefab);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.CreateAvatarIfNeeded
void Normal::Realtime::RealtimeAvatarManager::CreateAvatarIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::CreateAvatarIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAvatarIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager.DestroyAvatarIfNeeded
void Normal::Realtime::RealtimeAvatarManager::DestroyAvatarIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::DestroyAvatarIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAvatarIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.AvatarCreatedDestroyed
#include "Normal/Realtime/RealtimeAvatarManager_AvatarCreatedDestroyed.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.AvatarCreatedDestroyed.Invoke
void Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed::Invoke(::Normal::Realtime::RealtimeAvatarManager* avatarManager, ::Normal::Realtime::RealtimeAvatar* avatar, bool isLocalAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarManager, avatar, isLocalAvatar);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.AvatarCreatedDestroyed.BeginInvoke
::System::IAsyncResult* Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed::BeginInvoke(::Normal::Realtime::RealtimeAvatarManager* avatarManager, ::Normal::Realtime::RealtimeAvatar* avatar, bool isLocalAvatar, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, avatarManager, avatar, isLocalAvatar, callback, object);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.AvatarCreatedDestroyed.EndInvoke
void Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeAvatarManager::AvatarCreatedDestroyed*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.<>c__DisplayClass28_0
#include "Normal/Realtime/RealtimeAvatarManager_--c__DisplayClass28_0.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeAvatar avatar
[[deprecated]] ::Normal::Realtime::RealtimeAvatar*& Normal::Realtime::RealtimeAvatarManager::$$c__DisplayClass28_0::dyn_avatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::$$c__DisplayClass28_0::dyn_avatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatar"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarManager/Normal.Realtime.<>c__DisplayClass28_0.<_UnregisterAvatar>b__0
bool Normal::Realtime::RealtimeAvatarManager::$$c__DisplayClass28_0::$_UnregisterAvatar$b__0(::System::Collections::Generic::KeyValuePair_2<int, ::Normal::Realtime::RealtimeAvatar*> keyValuePair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarManager::$$c__DisplayClass28_0::<_UnregisterAvatar>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<_UnregisterAvatar>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyValuePair)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keyValuePair);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarModel
#include "Normal/Realtime/RealtimeAvatarModel.hpp"
// Including type: Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyChangedHandler`1
#include "Normal/Realtime/RealtimeAvatarModel_PropertyChangedHandler_1.hpp"
// Including type: Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeAvatarModel_PropertyID.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatar/Normal.Realtime.DeviceType _deviceType
[[deprecated]] ::Normal::Realtime::RealtimeAvatar::DeviceType& Normal::Realtime::RealtimeAvatarModel::dyn__deviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__deviceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deviceType"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatar::DeviceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _deviceModel
[[deprecated]] ::StringW& Normal::Realtime::RealtimeAvatarModel::dyn__deviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__deviceModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deviceModel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _headActive
[[deprecated]] bool& Normal::Realtime::RealtimeAvatarModel::dyn__headActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__headActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leftHandActive
[[deprecated]] bool& Normal::Realtime::RealtimeAvatarModel::dyn__leftHandActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__leftHandActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rightHandActive
[[deprecated]] bool& Normal::Realtime::RealtimeAvatarModel::dyn__rightHandActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__rightHandActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyChangedHandler`1<System.Boolean> headActiveDidChange
[[deprecated]] ::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>*& Normal::Realtime::RealtimeAvatarModel::dyn_headActiveDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn_headActiveDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headActiveDidChange"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyChangedHandler`1<System.Boolean> leftHandActiveDidChange
[[deprecated]] ::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>*& Normal::Realtime::RealtimeAvatarModel::dyn_leftHandActiveDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn_leftHandActiveDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandActiveDidChange"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyChangedHandler`1<System.Boolean> rightHandActiveDidChange
[[deprecated]] ::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>*& Normal::Realtime::RealtimeAvatarModel::dyn_rightHandActiveDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn_rightHandActiveDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandActiveDidChange"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.UInt32> _deviceTypeProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<uint>*& Normal::Realtime::RealtimeAvatarModel::dyn__deviceTypeProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__deviceTypeProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deviceTypeProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.String> _deviceModelProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<::StringW>*& Normal::Realtime::RealtimeAvatarModel::dyn__deviceModelProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__deviceModelProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deviceModelProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Boolean> _headActiveProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<bool>*& Normal::Realtime::RealtimeAvatarModel::dyn__headActiveProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__headActiveProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headActiveProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Boolean> _leftHandActiveProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<bool>*& Normal::Realtime::RealtimeAvatarModel::dyn__leftHandActiveProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__leftHandActiveProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandActiveProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Boolean> _rightHandActiveProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<bool>*& Normal::Realtime::RealtimeAvatarModel::dyn__rightHandActiveProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::dyn__rightHandActiveProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandActiveProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.get_deviceType
::Normal::Realtime::RealtimeAvatar::DeviceType Normal::Realtime::RealtimeAvatarModel::get_deviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::get_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeAvatar::DeviceType, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.set_deviceType
void Normal::Realtime::RealtimeAvatarModel::set_deviceType(::Normal::Realtime::RealtimeAvatar::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::set_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.get_deviceModel
::StringW Normal::Realtime::RealtimeAvatarModel::get_deviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::get_deviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.set_deviceModel
void Normal::Realtime::RealtimeAvatarModel::set_deviceModel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::set_deviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.get_headActive
bool Normal::Realtime::RealtimeAvatarModel::get_headActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::get_headActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.set_headActive
void Normal::Realtime::RealtimeAvatarModel::set_headActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::set_headActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.get_leftHandActive
bool Normal::Realtime::RealtimeAvatarModel::get_leftHandActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::get_leftHandActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.set_leftHandActive
void Normal::Realtime::RealtimeAvatarModel::set_leftHandActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::set_leftHandActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.get_rightHandActive
bool Normal::Realtime::RealtimeAvatarModel::get_rightHandActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::get_rightHandActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.set_rightHandActive
void Normal::Realtime::RealtimeAvatarModel::set_rightHandActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::set_rightHandActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.add_headActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::add_headActiveDidChange(::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::add_headActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_headActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.remove_headActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::remove_headActiveDidChange(::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::remove_headActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_headActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.add_leftHandActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::add_leftHandActiveDidChange(::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::add_leftHandActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_leftHandActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.remove_leftHandActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::remove_leftHandActiveDidChange(::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::remove_leftHandActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_leftHandActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.add_rightHandActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::add_rightHandActiveDidChange(::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::add_rightHandActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_rightHandActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.remove_rightHandActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::remove_rightHandActiveDidChange(::Normal::Realtime::RealtimeAvatarModel::PropertyChangedHandler_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::remove_rightHandActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_rightHandActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.FireHeadActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::FireHeadActiveDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::FireHeadActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireHeadActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.FireLeftHandActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::FireLeftHandActiveDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::FireLeftHandActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireLeftHandActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.FireRightHandActiveDidChange
void Normal::Realtime::RealtimeAvatarModel::FireRightHandActiveDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::FireRightHandActiveDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireRightHandActiveDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.UpdateBackingFields
void Normal::Realtime::RealtimeAvatarModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.OnParentReplaced
void Normal::Realtime::RealtimeAvatarModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.WriteLength
int Normal::Realtime::RealtimeAvatarModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.Write
void Normal::Realtime::RealtimeAvatarModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarModel.Read
void Normal::Realtime::RealtimeAvatarModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeAvatarModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID DeviceType
::Normal::Realtime::RealtimeAvatarModel::PropertyID Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_DeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_DeviceType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarModel::PropertyID>("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "DeviceType"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID DeviceType
void Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_DeviceType(::Normal::Realtime::RealtimeAvatarModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_DeviceType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "DeviceType", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID DeviceModel
::Normal::Realtime::RealtimeAvatarModel::PropertyID Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_DeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_DeviceModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarModel::PropertyID>("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "DeviceModel"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID DeviceModel
void Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_DeviceModel(::Normal::Realtime::RealtimeAvatarModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_DeviceModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "DeviceModel", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID HeadActive
::Normal::Realtime::RealtimeAvatarModel::PropertyID Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_HeadActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_HeadActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarModel::PropertyID>("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "HeadActive"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID HeadActive
void Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_HeadActive(::Normal::Realtime::RealtimeAvatarModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_HeadActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "HeadActive", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID LeftHandActive
::Normal::Realtime::RealtimeAvatarModel::PropertyID Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_LeftHandActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_LeftHandActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarModel::PropertyID>("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "LeftHandActive"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID LeftHandActive
void Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_LeftHandActive(::Normal::Realtime::RealtimeAvatarModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_LeftHandActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "LeftHandActive", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID RightHandActive
::Normal::Realtime::RealtimeAvatarModel::PropertyID Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_RightHandActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_get_RightHandActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarModel::PropertyID>("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "RightHandActive"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatarModel/Normal.Realtime.PropertyID RightHandActive
void Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_RightHandActive(::Normal::Realtime::RealtimeAvatarModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::_set_RightHandActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatarModel/PropertyID", "RightHandActive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::RealtimeAvatarModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarVoice
#include "Normal/Realtime/RealtimeAvatarVoice.hpp"
// Including type: Normal.Realtime.RealtimeAvatarVoiceModel
#include "Normal/Realtime/RealtimeAvatarVoiceModel.hpp"
// Including type: Normal.Realtime.OculusMicrophoneDevice
#include "Normal/Realtime/OculusMicrophoneDevice.hpp"
// Including type: Normal.Realtime.Native.Microphone
#include "Normal/Realtime/Native/Microphone.hpp"
// Including type: Normal.Realtime.MicrophoneDevice
#include "Normal/Realtime/MicrophoneDevice.hpp"
// Including type: Normal.Realtime.AudioDeviceDataReader
#include "Normal/Realtime/AudioDeviceDataReader.hpp"
// Including type: Normal.Realtime.Native.AudioInputStream
#include "Normal/Realtime/Native/AudioInputStream.hpp"
// Including type: Normal.Realtime.Native.AudioPreprocessor
#include "Normal/Realtime/Native/AudioPreprocessor.hpp"
// Including type: Normal.Realtime.AudioPreprocessorPlaybackListener
#include "Normal/Realtime/AudioPreprocessorPlaybackListener.hpp"
// Including type: Normal.Realtime.AudioOutput
#include "Normal/Realtime/AudioOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <voiceVolume>k__BackingField
[[deprecated]] float& Normal::Realtime::RealtimeAvatarVoice::dyn_$voiceVolume$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn_$voiceVolume$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<voiceVolume>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mute
[[deprecated]] bool& Normal::Realtime::RealtimeAvatarVoice::dyn__mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__mute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.OculusMicrophoneDevice _oculusMicrophoneDevice
[[deprecated]] ::Normal::Realtime::OculusMicrophoneDevice*& Normal::Realtime::RealtimeAvatarVoice::dyn__oculusMicrophoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__oculusMicrophoneDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusMicrophoneDevice"))->offset;
  return *reinterpret_cast<::Normal::Realtime::OculusMicrophoneDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Microphone _nativeMicrophoneDevice
[[deprecated]] ::Normal::Realtime::Native::Microphone*& Normal::Realtime::RealtimeAvatarVoice::dyn__nativeMicrophoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__nativeMicrophoneDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeMicrophoneDevice"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Microphone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.MicrophoneDevice _unityMicrophoneDevice
[[deprecated]] ::Normal::Realtime::MicrophoneDevice*& Normal::Realtime::RealtimeAvatarVoice::dyn__unityMicrophoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__unityMicrophoneDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unityMicrophoneDevice"))->offset;
  return *reinterpret_cast<::Normal::Realtime::MicrophoneDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.AudioDeviceDataReader _unityMicrophoneDeviceDataReader
[[deprecated]] ::Normal::Realtime::AudioDeviceDataReader*& Normal::Realtime::RealtimeAvatarVoice::dyn__unityMicrophoneDeviceDataReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__unityMicrophoneDeviceDataReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unityMicrophoneDeviceDataReader"))->offset;
  return *reinterpret_cast<::Normal::Realtime::AudioDeviceDataReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _microphoneSampleRate
[[deprecated]] int& Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneSampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneSampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _microphoneChannels
[[deprecated]] int& Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _microphoneFrameSize
[[deprecated]] int& Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneFrameSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneFrameSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneFrameSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _microphoneFrameData
[[deprecated]] ::ArrayW<float>& Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneFrameData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneFrameData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneFrameData"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.AudioInputStream _microphoneStream
[[deprecated]] ::Normal::Realtime::Native::AudioInputStream*& Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::AudioInputStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.AudioPreprocessor _audioPreprocessor
[[deprecated]] ::Normal::Realtime::Native::AudioPreprocessor*& Normal::Realtime::RealtimeAvatarVoice::dyn__audioPreprocessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__audioPreprocessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioPreprocessor"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::AudioPreprocessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.AudioPreprocessorPlaybackListener _audioPreprocessorPlaybackListener
[[deprecated]] ::Normal::Realtime::AudioPreprocessorPlaybackListener*& Normal::Realtime::RealtimeAvatarVoice::dyn__audioPreprocessorPlaybackListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__audioPreprocessorPlaybackListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioPreprocessorPlaybackListener"))->offset;
  return *reinterpret_cast<::Normal::Realtime::AudioPreprocessorPlaybackListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _microphoneDbLevel
[[deprecated]] float& Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneDbLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__microphoneDbLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneDbLevel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.AudioOutput _audioOutput
[[deprecated]] ::Normal::Realtime::AudioOutput*& Normal::Realtime::RealtimeAvatarVoice::dyn__audioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__audioOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioOutput"))->offset;
  return *reinterpret_cast<::Normal::Realtime::AudioOutput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rebuildAudioStream
[[deprecated]] bool& Normal::Realtime::RealtimeAvatarVoice::dyn__rebuildAudioStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::dyn__rebuildAudioStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rebuildAudioStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.get_voiceVolume
float Normal::Realtime::RealtimeAvatarVoice::get_voiceVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::get_voiceVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_voiceVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.set_voiceVolume
void Normal::Realtime::RealtimeAvatarVoice::set_voiceVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::set_voiceVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_voiceVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.get_mute
bool Normal::Realtime::RealtimeAvatarVoice::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.set_mute
void Normal::Realtime::RealtimeAvatarVoice::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.get__hasMicrophone
bool Normal::Realtime::RealtimeAvatarVoice::get__hasMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::get__hasMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__hasMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.Update
void Normal::Realtime::RealtimeAvatarVoice::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.OnDestroy
void Normal::Realtime::RealtimeAvatarVoice::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.CalculateVoiceVolume
void Normal::Realtime::RealtimeAvatarVoice::CalculateVoiceVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::CalculateVoiceVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateVoiceVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.OnRealtimeModelReplaced
void Normal::Realtime::RealtimeAvatarVoice::OnRealtimeModelReplaced(::Normal::Realtime::RealtimeAvatarVoiceModel* previousModel, ::Normal::Realtime::RealtimeAvatarVoiceModel* currentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::OnRealtimeModelReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeAvatarVoice*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousModel, currentModel);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.ClientIDUpdated
void Normal::Realtime::RealtimeAvatarVoice::ClientIDUpdated(::Normal::Realtime::RealtimeAvatarVoiceModel* model, int clientID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::ClientIDUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientIDUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(clientID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, clientID);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.StreamIDUpdated
void Normal::Realtime::RealtimeAvatarVoice::StreamIDUpdated(::Normal::Realtime::RealtimeAvatarVoiceModel* model, int streamID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::StreamIDUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StreamIDUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(streamID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, streamID);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.ConnectAudioStream
void Normal::Realtime::RealtimeAvatarVoice::ConnectAudioStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::ConnectAudioStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectAudioStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.RequestMicrophonePermissionAndConnectLocalAudioStream
void Normal::Realtime::RealtimeAvatarVoice::RequestMicrophonePermissionAndConnectLocalAudioStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::RequestMicrophonePermissionAndConnectLocalAudioStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestMicrophonePermissionAndConnectLocalAudioStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.ConnectLocalAudioStream
void Normal::Realtime::RealtimeAvatarVoice::ConnectLocalAudioStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::ConnectLocalAudioStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectLocalAudioStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.ConnectRemoteAudioStream
void Normal::Realtime::RealtimeAvatarVoice::ConnectRemoteAudioStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::ConnectRemoteAudioStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectRemoteAudioStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.DisconnectAudioStream
void Normal::Realtime::RealtimeAvatarVoice::DisconnectAudioStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::DisconnectAudioStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectAudioStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.SendMicrophoneData
void Normal::Realtime::RealtimeAvatarVoice::SendMicrophoneData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::SendMicrophoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMicrophoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.GetMicrophoneAudioData
bool Normal::Realtime::RealtimeAvatarVoice::GetMicrophoneAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::GetMicrophoneAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicrophoneAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoice.SetMute
void Normal::Realtime::RealtimeAvatarVoice::SetMute(bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoice::SetMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarVoiceModel
#include "Normal/Realtime/RealtimeAvatarVoiceModel.hpp"
// Including type: Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyChangedHandler`1
#include "Normal/Realtime/RealtimeAvatarVoiceModel_PropertyChangedHandler_1.hpp"
// Including type: Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeAvatarVoiceModel_PropertyID.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _clientID
[[deprecated]] int& Normal::Realtime::RealtimeAvatarVoiceModel::dyn__clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::dyn__clientID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _streamID
[[deprecated]] int& Normal::Realtime::RealtimeAvatarVoiceModel::dyn__streamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::dyn__streamID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyChangedHandler`1<System.Int32> clientIDDidChange
[[deprecated]] ::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>*& Normal::Realtime::RealtimeAvatarVoiceModel::dyn_clientIDDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::dyn_clientIDDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientIDDidChange"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyChangedHandler`1<System.Int32> streamIDDidChange
[[deprecated]] ::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>*& Normal::Realtime::RealtimeAvatarVoiceModel::dyn_streamIDDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::dyn_streamIDDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "streamIDDidChange"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Int32> _clientIDProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<int>*& Normal::Realtime::RealtimeAvatarVoiceModel::dyn__clientIDProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::dyn__clientIDProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientIDProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Int32> _streamIDProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<int>*& Normal::Realtime::RealtimeAvatarVoiceModel::dyn__streamIDProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::dyn__streamIDProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamIDProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.get_clientID
int Normal::Realtime::RealtimeAvatarVoiceModel::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.set_clientID
void Normal::Realtime::RealtimeAvatarVoiceModel::set_clientID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::set_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.get_streamID
int Normal::Realtime::RealtimeAvatarVoiceModel::get_streamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::get_streamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_streamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.set_streamID
void Normal::Realtime::RealtimeAvatarVoiceModel::set_streamID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::set_streamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_streamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.add_clientIDDidChange
void Normal::Realtime::RealtimeAvatarVoiceModel::add_clientIDDidChange(::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::add_clientIDDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clientIDDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.remove_clientIDDidChange
void Normal::Realtime::RealtimeAvatarVoiceModel::remove_clientIDDidChange(::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::remove_clientIDDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clientIDDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.add_streamIDDidChange
void Normal::Realtime::RealtimeAvatarVoiceModel::add_streamIDDidChange(::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::add_streamIDDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_streamIDDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.remove_streamIDDidChange
void Normal::Realtime::RealtimeAvatarVoiceModel::remove_streamIDDidChange(::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyChangedHandler_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::remove_streamIDDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_streamIDDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.FireClientIDDidChange
void Normal::Realtime::RealtimeAvatarVoiceModel::FireClientIDDidChange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::FireClientIDDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireClientIDDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.FireStreamIDDidChange
void Normal::Realtime::RealtimeAvatarVoiceModel::FireStreamIDDidChange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::FireStreamIDDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireStreamIDDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.UpdateBackingFields
void Normal::Realtime::RealtimeAvatarVoiceModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.OnParentReplaced
void Normal::Realtime::RealtimeAvatarVoiceModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.WriteLength
int Normal::Realtime::RealtimeAvatarVoiceModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.Write
void Normal::Realtime::RealtimeAvatarVoiceModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceModel.Read
void Normal::Realtime::RealtimeAvatarVoiceModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeAvatarVoiceModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyID ClientID
::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_get_ClientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_get_ClientID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID>("Normal.Realtime", "RealtimeAvatarVoiceModel/PropertyID", "ClientID"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyID ClientID
void Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_set_ClientID(::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_set_ClientID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatarVoiceModel/PropertyID", "ClientID", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyID StreamID
::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_get_StreamID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_get_StreamID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID>("Normal.Realtime", "RealtimeAvatarVoiceModel/PropertyID", "StreamID"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeAvatarVoiceModel/Normal.Realtime.PropertyID StreamID
void Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_set_StreamID(::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::_set_StreamID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeAvatarVoiceModel/PropertyID", "StreamID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeAvatarVoiceScale
#include "Normal/Realtime/RealtimeAvatarVoiceScale.hpp"
// Including type: Normal.Realtime.RealtimeAvatarVoice
#include "Normal/Realtime/RealtimeAvatarVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarVoice _voice
[[deprecated]] ::Normal::Realtime::RealtimeAvatarVoice*& Normal::Realtime::RealtimeAvatarVoiceScale::dyn__voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceScale::dyn__voice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voice"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceScale.Awake
void Normal::Realtime::RealtimeAvatarVoiceScale::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceScale::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeAvatarVoiceScale.Update
void Normal::Realtime::RealtimeAvatarVoiceScale::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeAvatarVoiceScale::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RealtimeModelAttribute
#include "GlobalNamespace/RealtimeModelAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean createMetaModel
[[deprecated]] bool& GlobalNamespace::RealtimeModelAttribute::dyn_createMetaModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RealtimeModelAttribute::dyn_createMetaModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createMetaModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RealtimePropertyAttribute
#include "GlobalNamespace/RealtimePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 propertyID
[[deprecated]] uint& GlobalNamespace::RealtimePropertyAttribute::dyn_propertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RealtimePropertyAttribute::dyn_propertyID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean reliable
[[deprecated]] bool& GlobalNamespace::RealtimePropertyAttribute::dyn_reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RealtimePropertyAttribute::dyn_reliable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean createDidChangeEvent
[[deprecated]] bool& GlobalNamespace::RealtimePropertyAttribute::dyn_createDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RealtimePropertyAttribute::dyn_createDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createDidChangeEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RealtimeCallbackAttribute
#include "GlobalNamespace/RealtimeCallbackAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.RealtimeModelEvent event
[[deprecated]] ::Normal::Realtime::RealtimeModelEvent& GlobalNamespace::RealtimeCallbackAttribute::dyn_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RealtimeCallbackAttribute::dyn_event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "event"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModelEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.NormcoreAppSettings
#include "Normal/NormcoreAppSettings.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DEFAULT_MATCHER_URL
::StringW Normal::NormcoreAppSettings::_get_DEFAULT_MATCHER_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreAppSettings::_get_DEFAULT_MATCHER_URL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal", "NormcoreAppSettings", "DEFAULT_MATCHER_URL"));
}
// Autogenerated static field setter
// Set static field: static public System.String DEFAULT_MATCHER_URL
void Normal::NormcoreAppSettings::_set_DEFAULT_MATCHER_URL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreAppSettings::_set_DEFAULT_MATCHER_URL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal", "NormcoreAppSettings", "DEFAULT_MATCHER_URL", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _normcoreAppKey
[[deprecated]] ::StringW& Normal::NormcoreAppSettings::dyn__normcoreAppKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreAppSettings::dyn__normcoreAppKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normcoreAppKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _matcherURL
[[deprecated]] ::StringW& Normal::NormcoreAppSettings::dyn__matcherURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreAppSettings::dyn__matcherURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matcherURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.NormcoreAppSettings.get_normcoreAppKey
::StringW Normal::NormcoreAppSettings::get_normcoreAppKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreAppSettings::get_normcoreAppKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normcoreAppKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.NormcoreAppSettings.get_matcherURL
::StringW Normal::NormcoreAppSettings::get_matcherURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreAppSettings::get_matcherURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matcherURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.NormcoreAppSettings.CreateInstance
::Normal::NormcoreAppSettings* Normal::NormcoreAppSettings::CreateInstance(::StringW normcoreAppKey, ::StringW matcherURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreAppSettings::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal", "NormcoreAppSettings", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normcoreAppKey), ::il2cpp_utils::ExtractType(matcherURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::NormcoreAppSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, normcoreAppKey, matcherURL);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.NormcoreProjectSettings
#include "Normal/NormcoreProjectSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Normal.NormcoreProjectSettings __instance
::Normal::NormcoreProjectSettings* Normal::NormcoreProjectSettings::_get___instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::_get___instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::NormcoreProjectSettings*>("Normal", "NormcoreProjectSettings", "__instance"));
}
// Autogenerated static field setter
// Set static field: static private Normal.NormcoreProjectSettings __instance
void Normal::NormcoreProjectSettings::_set___instance(::Normal::NormcoreProjectSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::_set___instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal", "NormcoreProjectSettings", "__instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Utility.NormcoreLogLevel _logLevel
[[deprecated]] ::Normal::Utility::NormcoreLogLevel& Normal::NormcoreProjectSettings::dyn__logLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::dyn__logLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logLevel"))->offset;
  return *reinterpret_cast<::Normal::Utility::NormcoreLogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.NormcoreProjectSettings.get_logLevel
::Normal::Utility::NormcoreLogLevel Normal::NormcoreProjectSettings::get_logLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::get_logLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal", "NormcoreProjectSettings", "get_logLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Utility::NormcoreLogLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.NormcoreProjectSettings.set_logLevel
void Normal::NormcoreProjectSettings::set_logLevel(::Normal::Utility::NormcoreLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::set_logLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal", "NormcoreProjectSettings", "set_logLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.NormcoreProjectSettings.GetInstance
::Normal::NormcoreProjectSettings* Normal::NormcoreProjectSettings::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal", "NormcoreProjectSettings", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::NormcoreProjectSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.NormcoreProjectSettings.LoadInstance
::Normal::NormcoreProjectSettings* Normal::NormcoreProjectSettings::LoadInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::LoadInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal", "NormcoreProjectSettings", "LoadInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::NormcoreProjectSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.NormcoreProjectSettings.CreateInstance
::Normal::NormcoreProjectSettings* Normal::NormcoreProjectSettings::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::NormcoreProjectSettings::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal", "NormcoreProjectSettings", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::NormcoreProjectSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.NormcoreLogLevel
#include "Normal/Utility/NormcoreLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Utility.NormcoreLogLevel Debug
::Normal::Utility::NormcoreLogLevel Normal::Utility::NormcoreLogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormcoreLogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Utility::NormcoreLogLevel>("Normal.Utility", "NormcoreLogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Utility.NormcoreLogLevel Debug
void Normal::Utility::NormcoreLogLevel::_set_Debug(::Normal::Utility::NormcoreLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormcoreLogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Utility", "NormcoreLogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Utility.NormcoreLogLevel Error
::Normal::Utility::NormcoreLogLevel Normal::Utility::NormcoreLogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormcoreLogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Utility::NormcoreLogLevel>("Normal.Utility", "NormcoreLogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Utility.NormcoreLogLevel Error
void Normal::Utility::NormcoreLogLevel::_set_Error(::Normal::Utility::NormcoreLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormcoreLogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Utility", "NormcoreLogLevel", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Utility::NormcoreLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormcoreLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Utility.NormalLog
#include "Normal/Utility/NormalLog.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Utility.NormalLog.Trace
void Normal::Utility::NormalLog::Trace(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Normal.Utility.NormalLog.Trace
void Normal::Utility::NormalLog::Trace(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: Normal.Utility.NormalLog.Debug
void Normal::Utility::NormalLog::Debug(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Normal.Utility.NormalLog.Debug
void Normal::Utility::NormalLog::Debug(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: Normal.Utility.NormalLog.Info
void Normal::Utility::NormalLog::Info(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Normal.Utility.NormalLog.Info
void Normal::Utility::NormalLog::Info(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: Normal.Utility.NormalLog.Warning
void Normal::Utility::NormalLog::Warning(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Warning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Warning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Normal.Utility.NormalLog.Warning
void Normal::Utility::NormalLog::Warning(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Warning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Warning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: Normal.Utility.NormalLog.Error
void Normal::Utility::NormalLog::Error(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Normal.Utility.NormalLog.Error
void Normal::Utility::NormalLog::Error(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: Normal.Utility.NormalLog.Exception
void Normal::Utility::NormalLog::Exception(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Normal.Utility.NormalLog.Exception
void Normal::Utility::NormalLog::Exception(::System::Exception* exception, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::NormalLog::Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "NormalLog", "Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.SceneDebug
#include "Normal/Utility/SceneDebug.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Utility.SceneDebug.DrawPoint
void Normal::Utility::SceneDebug::DrawPoint(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, float size, ::UnityEngine::Color color, float duration, bool depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::SceneDebug::DrawPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "SceneDebug", "DrawPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, rot, size, color, duration, depth);
}
// Autogenerated method: Normal.Utility.SceneDebug.DrawPoint
void Normal::Utility::SceneDebug::DrawPoint(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::SceneDebug::DrawPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "SceneDebug", "DrawPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, rot, size);
}
// Autogenerated method: Normal.Utility.SceneDebug.DrawCube
void Normal::Utility::SceneDebug::DrawCube(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, float size, ::UnityEngine::Color color, float duration, bool depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::SceneDebug::DrawCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "SceneDebug", "DrawCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, rot, size, color, duration, depth);
}
// Autogenerated method: Normal.Utility.SceneDebug.DrawCube
void Normal::Utility::SceneDebug::DrawCube(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::SceneDebug::DrawCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "SceneDebug", "DrawCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, rot, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.TaskCoroutine
#include "Normal/Utility/TaskCoroutine.hpp"
// Including type: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0
#include "Normal/Utility/TaskCoroutine_-Wait-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Utility.TaskCoroutine.Wait
::System::Collections::IEnumerator* Normal::Utility::TaskCoroutine::Wait(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "TaskCoroutine", "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0
#include "Normal/Utility/TaskCoroutine_-Wait-d__0.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task task
[[deprecated]] ::System::Threading::Tasks::Task*& Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::dyn_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Utility::TaskCoroutine::$Wait$d__0::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Utility::TaskCoroutine::$Wait$d__0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Utility::TaskCoroutine::$Wait$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Utility::TaskCoroutine::$Wait$d__0*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.IDisposable.Dispose
void Normal::Utility::TaskCoroutine::$Wait$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Utility::TaskCoroutine::$Wait$d__0*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.MoveNext
bool Normal::Utility::TaskCoroutine::$Wait$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Utility::TaskCoroutine::$Wait$d__0*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Utility.TaskCoroutine/Normal.Utility.<Wait>d__0.System.Collections.IEnumerator.Reset
void Normal::Utility::TaskCoroutine::$Wait$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::TaskCoroutine::$Wait$d__0::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Utility::TaskCoroutine::$Wait$d__0*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.StaticFunctions
#include "Normal/Utility/StaticFunctions.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Utility.StaticFunctions.SetLayerRecursively
void Normal::Utility::StaticFunctions::SetLayerRecursively(::UnityEngine::GameObject* gameObject, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::SetLayerRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "SetLayerRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject, layer);
}
// Autogenerated method: Normal.Utility.StaticFunctions.CalculateAverageDbForAudioBuffer
float Normal::Utility::StaticFunctions::CalculateAverageDbForAudioBuffer(::ArrayW<float> audioBuffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::CalculateAverageDbForAudioBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "CalculateAverageDbForAudioBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioBuffer, offset);
}
// Autogenerated method: Normal.Utility.StaticFunctions.LinearToDb
float Normal::Utility::StaticFunctions::LinearToDb(float linear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::LinearToDb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "LinearToDb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linear)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, linear);
}
// Autogenerated method: Normal.Utility.StaticFunctions.SwingTwistDecomposition
void Normal::Utility::StaticFunctions::SwingTwistDecomposition(::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Quaternion> swing, ByRef<::UnityEngine::Quaternion> twist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::SwingTwistDecomposition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "SwingTwistDecomposition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation, direction, byref(swing), byref(twist));
}
// Autogenerated method: Normal.Utility.StaticFunctions.NormalizeQuaternion
::UnityEngine::Vector4 Normal::Utility::StaticFunctions::NormalizeQuaternion(::UnityEngine::Vector4 quaternion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::NormalizeQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "NormalizeQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quaternion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, quaternion);
}
// Autogenerated method: Normal.Utility.StaticFunctions.StabilizeLengthOfQuaternion
::UnityEngine::Vector4 Normal::Utility::StaticFunctions::StabilizeLengthOfQuaternion(::UnityEngine::Vector4 q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::StabilizeLengthOfQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "StabilizeLengthOfQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: Normal.Utility.StaticFunctions.LerpClamped
double Normal::Utility::StaticFunctions::LerpClamped(double a, double b, double t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::StaticFunctions::LerpClamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Utility", "StaticFunctions", "LerpClamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.Extensions
#include "Normal/Utility/Extensions.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Utility.ExecutionOrder
#include "Normal/Utility/ExecutionOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
[[deprecated]] int& Normal::Utility::ExecutionOrder::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Utility::ExecutionOrder::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IConfigurableComponent
#include "Normal/Realtime/IConfigurableComponent.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IConfigurableComponent.CreateModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::IConfigurableComponent::CreateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponent::CreateModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponent.SetModel
void Normal::Realtime::IConfigurableComponent::SetModel(::Normal::Realtime::RealtimeModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponent::SetModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.IConfigurableComponent.SetView
void Normal::Realtime::IConfigurableComponent::SetView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfigurableComponent::SetView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfigurableComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimeComponent
#include "Normal/Realtime/IRealtimeComponent.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::IRealtimeComponent::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_realtimeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_realtime
::Normal::Realtime::Realtime* Normal::Realtime::IRealtimeComponent::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_realtime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_room
::Normal::Realtime::Room* Normal::Realtime::IRealtimeComponent::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_room");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_ownerIDSelf
int Normal::Realtime::IRealtimeComponent::get_ownerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_ownerIDSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_ownerIDInHierarchy
int Normal::Realtime::IRealtimeComponent::get_ownerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_ownerIDInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isUnownedSelf
bool Normal::Realtime::IRealtimeComponent::get_isUnownedSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isUnownedSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isUnownedInHierarchy
bool Normal::Realtime::IRealtimeComponent::get_isUnownedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isUnownedInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedLocallySelf
bool Normal::Realtime::IRealtimeComponent::get_isOwnedLocallySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedLocallySelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedLocallyInHierarchy
bool Normal::Realtime::IRealtimeComponent::get_isOwnedLocallyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedLocallyInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedRemotelySelf
bool Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelySelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.get_isOwnedRemotelyInHierarchy
bool Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::get_isOwnedRemotelyInHierarchy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.RequestOwnership
void Normal::Realtime::IRealtimeComponent::RequestOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::RequestOwnership");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.SetOwnership
void Normal::Realtime::IRealtimeComponent::SetOwnership(int clientID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::SetOwnership");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientID);
}
// Autogenerated method: Normal.Realtime.IRealtimeComponent.ClearOwnership
void Normal::Realtime::IRealtimeComponent::ClearOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeComponent::ClearOwnership");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeComponent
#include "Normal/Realtime/RealtimeComponent.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeView <realtimeView>k__BackingField
[[deprecated]] ::Normal::Realtime::RealtimeView*& Normal::Realtime::RealtimeComponent::dyn_$realtimeView$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn_$realtimeView$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<realtimeView>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo _createModelMethod
[[deprecated]] ::System::Reflection::MethodInfo*& Normal::Realtime::RealtimeComponent::dyn__createModelMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__createModelMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createModelMethod"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isCreateModelMethodCached
[[deprecated]] bool& Normal::Realtime::RealtimeComponent::dyn__isCreateModelMethodCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__isCreateModelMethodCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCreateModelMethodCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.PropertyInfo _modelProperty
[[deprecated]] ::System::Reflection::PropertyInfo*& Normal::Realtime::RealtimeComponent::dyn__modelProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__modelProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modelProperty"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isModelPropertyCached
[[deprecated]] bool& Normal::Realtime::RealtimeComponent::dyn__isModelPropertyCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::dyn__isModelPropertyCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isModelPropertyCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_realtimeView
::Normal::Realtime::RealtimeView* Normal::Realtime::RealtimeComponent::get_realtimeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeView*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.set_realtimeView
void Normal::Realtime::RealtimeComponent::set_realtimeView(::Normal::Realtime::RealtimeView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::set_realtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_realtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_realtime
::Normal::Realtime::Realtime* Normal::Realtime::RealtimeComponent::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_realtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_room
::Normal::Realtime::Room* Normal::Realtime::RealtimeComponent::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_cachedCreateModelMethod
::System::Reflection::MethodInfo* Normal::Realtime::RealtimeComponent::get_cachedCreateModelMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_cachedCreateModelMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedCreateModelMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.get_cachedModelProperty
::System::Reflection::PropertyInfo* Normal::Realtime::RealtimeComponent::get_cachedModelProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::get_cachedModelProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedModelProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.Normal.Realtime.IConfigurableComponent.CreateModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::RealtimeComponent::Normal_Realtime_IConfigurableComponent_CreateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::Normal.Realtime.IConfigurableComponent.CreateModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeComponent*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.CreateModelFromCustomMethod
::Il2CppObject* Normal::Realtime::RealtimeComponent::CreateModelFromCustomMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::CreateModelFromCustomMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModelFromCustomMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.CreateModelFromDefaultConstructor
::Il2CppObject* Normal::Realtime::RealtimeComponent::CreateModelFromDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::CreateModelFromDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModelFromDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.Normal.Realtime.IConfigurableComponent.SetModel
void Normal::Realtime::RealtimeComponent::Normal_Realtime_IConfigurableComponent_SetModel(::Normal::Realtime::RealtimeModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::Normal.Realtime.IConfigurableComponent.SetModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeComponent*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeComponent.Normal.Realtime.IConfigurableComponent.SetView
void Normal::Realtime::RealtimeComponent::Normal_Realtime_IConfigurableComponent_SetView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeComponent::Normal.Realtime.IConfigurableComponent.SetView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeComponent*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26
#include "Normal/Realtime/RealtimeTransform_-FixedUpdateEnumerator-d__26.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Normal.Realtime.IRealtimeTransformStrategy
#include "Normal/Realtime/IRealtimeTransformStrategy.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interpolate
[[deprecated]] bool& Normal::Realtime::RealtimeTransform::dyn__interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__interpolate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpolate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncPosition
[[deprecated]] bool& Normal::Realtime::RealtimeTransform::dyn__syncPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncRotation
[[deprecated]] bool& Normal::Realtime::RealtimeTransform::dyn__syncRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncScale
[[deprecated]] bool& Normal::Realtime::RealtimeTransform::dyn__syncScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncVelocity
[[deprecated]] bool& Normal::Realtime::RealtimeTransform::dyn__syncVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__syncVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _maintainOwnershipWhileSleeping
[[deprecated]] bool& Normal::Realtime::RealtimeTransform::dyn__maintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__maintainOwnershipWhileSleeping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maintainOwnershipWhileSleeping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.IRealtimeTransformStrategy _strategy
[[deprecated]] ::Normal::Realtime::IRealtimeTransformStrategy*& Normal::Realtime::RealtimeTransform::dyn__strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::dyn__strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strategy"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IRealtimeTransformStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingPosition
bool Normal::Realtime::RealtimeTransform::get_isSyncingPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingRotation
bool Normal::Realtime::RealtimeTransform::get_isSyncingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingScale
bool Normal::Realtime::RealtimeTransform::get_isSyncingScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingVelocity
bool Normal::Realtime::RealtimeTransform::get_isSyncingVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isSyncingAngularVelocity
bool Normal::Realtime::RealtimeTransform::get_isSyncingAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isSyncingAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncingAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_maintainOwnershipWhileSleeping
bool Normal::Realtime::RealtimeTransform::get_maintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.set_maintainOwnershipWhileSleeping
void Normal::Realtime::RealtimeTransform::set_maintainOwnershipWhileSleeping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::set_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isPhysicsOwnershipAvailable
bool Normal::Realtime::RealtimeTransform::get_isPhysicsOwnershipAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isPhysicsOwnershipAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPhysicsOwnershipAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransform::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::get_isInterpolationWarmedUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInterpolationWarmedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnEnable
void Normal::Realtime::RealtimeTransform::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.Update
void Normal::Realtime::RealtimeTransform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.FixedUpdateEnumerator
::System::Collections::IEnumerator* Normal::Realtime::RealtimeTransform::FixedUpdateEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::FixedUpdateEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdateEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnCollisionEnter
void Normal::Realtime::RealtimeTransform::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnCollisionStay
void Normal::Realtime::RealtimeTransform::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnCollisionExit
void Normal::Realtime::RealtimeTransform::OnCollisionExit(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnDestroy
void Normal::Realtime::RealtimeTransform::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnRealtimeModelReplaced
void Normal::Realtime::RealtimeTransform::OnRealtimeModelReplaced(::Normal::Realtime::RealtimeTransformModel* previousModel, ::Normal::Realtime::RealtimeTransformModel* currentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnRealtimeModelReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransform*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousModel, currentModel);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SubscribeStrategyEvents
void Normal::Realtime::RealtimeTransform::SubscribeStrategyEvents(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SubscribeStrategyEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubscribeStrategyEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.UnsubscribeStrategyEvents
void Normal::Realtime::RealtimeTransform::UnsubscribeStrategyEvents(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::UnsubscribeStrategyEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsubscribeStrategyEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnModelWillWrite
void Normal::Realtime::RealtimeTransform::OnModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnModelWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnModelWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.OnModelDidRead
void Normal::Realtime::RealtimeTransform::OnModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::OnModelDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnModelDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.GetOrCreateStrategy
::Normal::Realtime::IRealtimeTransformStrategy* Normal::Realtime::RealtimeTransform::GetOrCreateStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::GetOrCreateStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IRealtimeTransformStrategy*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetTransformValues
void Normal::Realtime::RealtimeTransform::SetTransformValues(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetTransformValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransformValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, scale);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetTransformFromModel
void Normal::Realtime::RealtimeTransform::SetTransformFromModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetTransformFromModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransformFromModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetModelValues
void Normal::Realtime::RealtimeTransform::SetModelValues(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetModelValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, scale);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform.SetModelFromTransform
void Normal::Realtime::RealtimeTransform::SetModelFromTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::SetModelFromTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelFromTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26
#include "Normal/Realtime/RealtimeTransform_-FixedUpdateEnumerator-d__26.hpp"
// Including type: UnityEngine.WaitForFixedUpdate
#include "UnityEngine/WaitForFixedUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeTransform <>4__this
[[deprecated]] ::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForFixedUpdate <wait>5__2
[[deprecated]] ::UnityEngine::WaitForFixedUpdate*& Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$wait$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::dyn_$wait$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wait>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForFixedUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.IDisposable.Dispose
void Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.MoveNext
bool Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransform/Normal.Realtime.<FixedUpdateEnumerator>d__26.System.Collections.IEnumerator.Reset
void Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransform::$FixedUpdateEnumerator$d__26*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel
#include "Normal/Realtime/RealtimeTransformModel.hpp"
// Including type: Normal.Realtime.UnreliableProperty`1
#include "Normal/Realtime/UnreliableProperty_1.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformWriteHandler.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformReadHandler.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeTransformModel_PropertyID.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_POSITION
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_POSITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_POSITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_POSITION"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_POSITION
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_POSITION(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_POSITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_POSITION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_ROTATION
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ROTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ROTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ROTATION"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_ROTATION
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ROTATION(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ROTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ROTATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_SCALE
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_SCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_SCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_SCALE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_SCALE
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_SCALE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_SCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_SCALE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_VELOCITY
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_VELOCITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_VELOCITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_VELOCITY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_VELOCITY
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_VELOCITY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_VELOCITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_VELOCITY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON_ANGULAR_VELOCITY
float Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ANGULAR_VELOCITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_get_EPSILON_ANGULAR_VELOCITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ANGULAR_VELOCITY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON_ANGULAR_VELOCITY
void Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ANGULAR_VELOCITY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::_set_EPSILON_ANGULAR_VELOCITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel", "EPSILON_ANGULAR_VELOCITY", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
[[deprecated]] ::UnityEngine::Quaternion& Normal::Realtime::RealtimeTransformModel::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _scale
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _velocity
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _angularVelocity
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformModel::dyn__angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__angularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState _physicsState
[[deprecated]] ::Normal::Realtime::RealtimeTransformModel::PhysicsState& Normal::Realtime::RealtimeTransformModel::dyn__physicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsState"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::PhysicsState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _physicsBodyTimeOffset
[[deprecated]] float& Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsBodyTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _physicsStateTimeOffset
[[deprecated]] float& Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler onWillWrite
[[deprecated]] ::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler*& Normal::Realtime::RealtimeTransformModel::dyn_onWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn_onWillWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onWillWrite"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler onDidRead
[[deprecated]] ::Normal::Realtime::RealtimeTransformModel::TransformReadHandler*& Normal::Realtime::RealtimeTransformModel::dyn_onDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn_onDidRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDidRead"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::TransformReadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <timestamp>k__BackingField
[[deprecated]] double& Normal::Realtime::RealtimeTransformModel::dyn_$timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn_$timestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _positionProperty
[[deprecated]] ::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__positionProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__positionProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Quaternion> _rotationProperty
[[deprecated]] ::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Quaternion>*& Normal::Realtime::RealtimeTransformModel::dyn__rotationProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__rotationProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _scaleProperty
[[deprecated]] ::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__scaleProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__scaleProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scaleProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _velocityProperty
[[deprecated]] ::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__velocityProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__velocityProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<UnityEngine.Vector3> _angularVelocityProperty
[[deprecated]] ::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>*& Normal::Realtime::RealtimeTransformModel::dyn__angularVelocityProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__angularVelocityProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocityProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.UInt32> _physicsStateProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<uint>*& Normal::Realtime::RealtimeTransformModel::dyn__physicsStateProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsStateProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<System.Single> _physicsBodyTimeOffsetProperty
[[deprecated]] ::Normal::Realtime::UnreliableProperty_1<float>*& Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffsetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsBodyTimeOffsetProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsBodyTimeOffsetProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<System.Single> _physicsStateTimeOffsetProperty
[[deprecated]] ::Normal::Realtime::ReliableProperty_1<float>*& Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffsetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__physicsStateTimeOffsetProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateTimeOffsetProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet _propertyChangeSet
[[deprecated]] ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*& Normal::Realtime::RealtimeTransformModel::dyn__propertyChangeSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::dyn__propertyChangeSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyChangeSet"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_useGravity
bool Normal::Realtime::RealtimeTransformModel::get_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_useGravity
void Normal::Realtime::RealtimeTransformModel::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_isKinematic
bool Normal::Realtime::RealtimeTransformModel::get_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_isKinematic
void Normal::Realtime::RealtimeTransformModel::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_isSleeping
bool Normal::Realtime::RealtimeTransformModel::get_isSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_isSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_isSleeping
void Normal::Realtime::RealtimeTransformModel::set_isSleeping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_isSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_maintainOwnershipWhileSleeping
bool Normal::Realtime::RealtimeTransformModel::get_maintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_maintainOwnershipWhileSleeping
void Normal::Realtime::RealtimeTransformModel::set_maintainOwnershipWhileSleeping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_maintainOwnershipWhileSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maintainOwnershipWhileSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_timestamp
double Normal::Realtime::RealtimeTransformModel::get_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_timestamp
void Normal::Realtime::RealtimeTransformModel::set_timestamp(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_hasTransformChanges
bool Normal::Realtime::RealtimeTransformModel::get_hasTransformChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_hasTransformChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasTransformChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_hasPhysicsBodyChanges
bool Normal::Realtime::RealtimeTransformModel::get_hasPhysicsBodyChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_hasPhysicsBodyChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPhysicsBodyChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_hasPhysicsStateChanges
bool Normal::Realtime::RealtimeTransformModel::get_hasPhysicsStateChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_hasPhysicsStateChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPhysicsStateChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_position
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_position
void Normal::Realtime::RealtimeTransformModel::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_rotation
::UnityEngine::Quaternion Normal::Realtime::RealtimeTransformModel::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_rotation
void Normal::Realtime::RealtimeTransformModel::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_scale
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_scale
void Normal::Realtime::RealtimeTransformModel::set_scale(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_velocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_velocity
void Normal::Realtime::RealtimeTransformModel::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_angularVelocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformModel::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_angularVelocity
void Normal::Realtime::RealtimeTransformModel::set_angularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_physicsBodyTimeOffset
float Normal::Realtime::RealtimeTransformModel::get_physicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_physicsBodyTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsBodyTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_physicsBodyTimeOffset
void Normal::Realtime::RealtimeTransformModel::set_physicsBodyTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_physicsBodyTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsBodyTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_physicsState
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::get_physicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_physicsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeTransformModel::PhysicsState, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_physicsState
void Normal::Realtime::RealtimeTransformModel::set_physicsState(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_physicsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.get_physicsStateTimeOffset
float Normal::Realtime::RealtimeTransformModel::get_physicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::get_physicsStateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsStateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.set_physicsStateTimeOffset
void Normal::Realtime::RealtimeTransformModel::set_physicsStateTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::set_physicsStateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicsStateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.add_onWillWrite
void Normal::Realtime::RealtimeTransformModel::add_onWillWrite(::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::add_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.remove_onWillWrite
void Normal::Realtime::RealtimeTransformModel::remove_onWillWrite(::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::remove_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.add_onDidRead
void Normal::Realtime::RealtimeTransformModel::add_onDidRead(::Normal::Realtime::RealtimeTransformModel::TransformReadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::add_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.remove_onDidRead
void Normal::Realtime::RealtimeTransformModel::remove_onDidRead(::Normal::Realtime::RealtimeTransformModel::TransformReadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::remove_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsVectorNaN
bool Normal::Realtime::RealtimeTransformModel::IsVectorNaN(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsVectorNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsVectorNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsVectorEqual
bool Normal::Realtime::RealtimeTransformModel::IsVectorEqual(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsVectorEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsVectorEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsQuaternionNaN
bool Normal::Realtime::RealtimeTransformModel::IsQuaternionNaN(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsQuaternionNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsQuaternionNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.IsQuaternionEqual
bool Normal::Realtime::RealtimeTransformModel::IsQuaternionEqual(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::IsQuaternionEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformModel", "IsQuaternionEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafePosition
void Normal::Realtime::RealtimeTransformModel::SetSafePosition(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeRotation
void Normal::Realtime::RealtimeTransformModel::SetSafeRotation(::UnityEngine::Quaternion r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeScale
void Normal::Realtime::RealtimeTransformModel::SetSafeScale(::UnityEngine::Vector3 s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeVelocity
void Normal::Realtime::RealtimeTransformModel::SetSafeVelocity(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetSafeAngularVelocity
void Normal::Realtime::RealtimeTransformModel::SetSafeAngularVelocity(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetSafeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSafeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.GetPhysicsFlag
bool Normal::Realtime::RealtimeTransformModel::GetPhysicsFlag(::Normal::Realtime::RealtimeTransformModel::PhysicsState flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::GetPhysicsFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPhysicsFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flag);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.SetPhysicsFlag
void Normal::Realtime::RealtimeTransformModel::SetPhysicsFlag(::Normal::Realtime::RealtimeTransformModel::PhysicsState flag, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::SetPhysicsFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag, value);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnWillWrite
void Normal::Realtime::RealtimeTransformModel::OnWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnDidReadProperties
void Normal::Realtime::RealtimeTransformModel::OnDidReadProperties(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnDidReadProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidReadProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnDidReadPropertiesWrapper
void Normal::Realtime::RealtimeTransformModel::OnDidReadPropertiesWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnDidReadPropertiesWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidReadPropertiesWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.UpdateBackingFields
void Normal::Realtime::RealtimeTransformModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.OnParentReplaced
void Normal::Realtime::RealtimeTransformModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.WriteLength
int Normal::Realtime::RealtimeTransformModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.Write
void Normal::Realtime::RealtimeTransformModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel.Read
void Normal::Realtime::RealtimeTransformModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState
#include "Normal/Realtime/RealtimeTransformModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState Default
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState Default
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_Default(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState ShouldExtrapolate
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_ShouldExtrapolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_ShouldExtrapolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "ShouldExtrapolate"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState ShouldExtrapolate
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_ShouldExtrapolate(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_ShouldExtrapolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "ShouldExtrapolate", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState UseGravity
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_UseGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_UseGravity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "UseGravity"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState UseGravity
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_UseGravity(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_UseGravity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "UseGravity", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsKinematic
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsKinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsKinematic"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsKinematic
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsKinematic(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsKinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsKinematic", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsSleeping
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_IsSleeping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsSleeping"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState IsSleeping
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsSleeping(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_IsSleeping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "IsSleeping", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState MaintainOwnershipWhileSleeping
::Normal::Realtime::RealtimeTransformModel::PhysicsState Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_MaintainOwnershipWhileSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_get_MaintainOwnershipWhileSleeping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PhysicsState>("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "MaintainOwnershipWhileSleeping"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PhysicsState MaintainOwnershipWhileSleeping
void Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_MaintainOwnershipWhileSleeping(::Normal::Realtime::RealtimeTransformModel::PhysicsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::_set_MaintainOwnershipWhileSleeping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PhysicsState", "MaintainOwnershipWhileSleeping", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::RealtimeTransformModel::PhysicsState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PhysicsState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformWriteHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler.Invoke
void Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::Invoke(::Normal::Realtime::RealtimeTransformModel* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler.BeginInvoke
::System::IAsyncResult* Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::BeginInvoke(::Normal::Realtime::RealtimeTransformModel* sender, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, callback, object);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformWriteHandler.EndInvoke
void Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformModel::TransformWriteHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler
#include "Normal/Realtime/RealtimeTransformModel_TransformReadHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler.Invoke
void Normal::Realtime::RealtimeTransformModel::TransformReadHandler::Invoke(::Normal::Realtime::RealtimeTransformModel* sender, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformReadHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformModel::TransformReadHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler.BeginInvoke
::System::IAsyncResult* Normal::Realtime::RealtimeTransformModel::TransformReadHandler::BeginInvoke(::Normal::Realtime::RealtimeTransformModel* sender, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformReadHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformModel::TransformReadHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, changes, callback, object);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.TransformReadHandler.EndInvoke
void Normal::Realtime::RealtimeTransformModel::TransformReadHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::TransformReadHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformModel::TransformReadHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID
#include "Normal/Realtime/RealtimeTransformModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Position
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Position"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Position
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Position(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Rotation
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Rotation
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Rotation(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Scale
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Scale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Scale"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Scale
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Scale(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Scale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Scale", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Velocity
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID Velocity
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Velocity(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID AngularVelocity
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID AngularVelocity
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_AngularVelocity(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsState
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsState"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsState
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsState(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsState", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsBodyTimeOffset
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsBodyTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsBodyTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsBodyTimeOffset
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsBodyTimeOffset(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsBodyTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsBodyTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsStateTimeOffset
::Normal::Realtime::RealtimeTransformModel::PropertyID Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_get_PhysicsStateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeTransformModel::PropertyID>("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsStateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyID PhysicsStateTimeOffset
void Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsStateTimeOffset(::Normal::Realtime::RealtimeTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::_set_PhysicsStateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeTransformModel/PropertyID", "PhysicsStateTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::RealtimeTransformModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_position
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_rotation
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_scale
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_velocity
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_angularVelocity
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_physicsState
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_physicsBodyTimeOffset
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsBodyTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsBodyTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsBodyTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet.get_physicsStateTimeOffset
bool Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsStateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsStateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicsStateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.InterpolationDelay
#include "Normal/Realtime/InterpolationDelay.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single DEFAULT_DELAY
float Normal::Realtime::InterpolationDelay::_get_DEFAULT_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_get_DEFAULT_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "InterpolationDelay", "DEFAULT_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DEFAULT_DELAY
void Normal::Realtime::InterpolationDelay::_set_DEFAULT_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_set_DEFAULT_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "InterpolationDelay", "DEFAULT_DELAY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAXIMUM_DELAY
float Normal::Realtime::InterpolationDelay::_get_MAXIMUM_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_get_MAXIMUM_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Normal.Realtime", "InterpolationDelay", "MAXIMUM_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAXIMUM_DELAY
void Normal::Realtime::InterpolationDelay::_set_MAXIMUM_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::_set_MAXIMUM_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "InterpolationDelay", "MAXIMUM_DELAY", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <delay>k__BackingField
[[deprecated]] float& Normal::Realtime::InterpolationDelay::dyn_$delay$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn_$delay$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<delay>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <basis>k__BackingField
[[deprecated]] double& Normal::Realtime::InterpolationDelay::dyn_$basis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn_$basis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<basis>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated]] bool& Normal::Realtime::InterpolationDelay::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _delayIncrement
[[deprecated]] float& Normal::Realtime::InterpolationDelay::dyn__delayIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__delayIncrement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayIncrement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _delayDecrement
[[deprecated]] float& Normal::Realtime::InterpolationDelay::dyn__delayDecrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__delayDecrement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayDecrement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _penaltyCounter
[[deprecated]] int& Normal::Realtime::InterpolationDelay::dyn__penaltyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__penaltyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_penaltyCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _correctCounter
[[deprecated]] int& Normal::Realtime::InterpolationDelay::dyn__correctCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::dyn__correctCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_correctCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.get_delay
float Normal::Realtime::InterpolationDelay::get_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::get_delay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.set_delay
void Normal::Realtime::InterpolationDelay::set_delay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::set_delay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.get_basis
double Normal::Realtime::InterpolationDelay::get_basis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::get_basis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_basis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.set_basis
void Normal::Realtime::InterpolationDelay::set_basis(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::set_basis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_basis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.Reset
void Normal::Realtime::InterpolationDelay::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.InterpolationDelay.Adjust
void Normal::Realtime::InterpolationDelay::Adjust(double sent, double arrived, double sendrate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::InterpolationDelay::Adjust");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adjust", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sent), ::il2cpp_utils::ExtractType(arrived), ::il2cpp_utils::ExtractType(sendrate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sent, arrived, sendrate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RigidbodyPhysicsBodyFrame
#include "Normal/Realtime/RigidbodyPhysicsBodyFrame.hpp"
// Including type: Normal.Realtime.TimelineEntry`1
#include "Normal/Realtime/TimelineEntry_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 position
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rotation
[[deprecated]] ::UnityEngine::Quaternion& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 scale
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 velocity
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 angularVelocity
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::dyn_angularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsBodyFrame..ctor
// ABORTED elsewhere.  Normal::Realtime::RigidbodyPhysicsBodyFrame::RigidbodyPhysicsBodyFrame(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angularVelocity)
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsBodyFrame.Interpolate
::Normal::Realtime::RigidbodyPhysicsBodyFrame Normal::Realtime::RigidbodyPhysicsBodyFrame::Interpolate(::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>* a, ::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>* b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RigidbodyPhysicsBodyFrame", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RigidbodyPhysicsBodyFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsBodyFrame.Extrapolate
::Normal::Realtime::RigidbodyPhysicsBodyFrame Normal::Realtime::RigidbodyPhysicsBodyFrame::Extrapolate(::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>* from, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsBodyFrame::Extrapolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RigidbodyPhysicsBodyFrame", "Extrapolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RigidbodyPhysicsBodyFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RigidbodyPhysicsStateFrame
#include "Normal/Realtime/RigidbodyPhysicsStateFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean useGravity
[[deprecated]] bool& Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_useGravity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isKinematic
[[deprecated]] bool& Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isKinematic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKinematic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isSleeping
[[deprecated]] bool& Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RigidbodyPhysicsStateFrame::dyn_isSleeping");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSleeping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RigidbodyPhysicsStateFrame..ctor
// ABORTED elsewhere.  Normal::Realtime::RigidbodyPhysicsStateFrame::RigidbodyPhysicsStateFrame(bool useGravity, bool isKinematic, bool isSleeping)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.StandardTransformFrame
#include "Normal/Realtime/StandardTransformFrame.hpp"
// Including type: Normal.Realtime.TimelineEntry`1
#include "Normal/Realtime/TimelineEntry_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 position
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::StandardTransformFrame::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rotation
[[deprecated]] ::UnityEngine::Quaternion& Normal::Realtime::StandardTransformFrame::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 scale
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::StandardTransformFrame::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.StandardTransformFrame..ctor
// ABORTED elsewhere.  Normal::Realtime::StandardTransformFrame::StandardTransformFrame(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale)
// Autogenerated method: Normal.Realtime.StandardTransformFrame.Interpolate
::Normal::Realtime::StandardTransformFrame Normal::Realtime::StandardTransformFrame::Interpolate(::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::StandardTransformFrame>* a, ::Normal::Realtime::TimelineEntry_1<::Normal::Realtime::StandardTransformFrame>* b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::StandardTransformFrame::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "StandardTransformFrame", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::StandardTransformFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimeTransformStrategy
#include "Normal/Realtime/IRealtimeTransformStrategy.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.get_isInterpolationWarmedUp
bool Normal::Realtime::IRealtimeTransformStrategy::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeTransformStrategy*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.Reset
void Normal::Realtime::IRealtimeTransformStrategy::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeTransformStrategy*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.Update
void Normal::Realtime::IRealtimeTransformStrategy::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeTransformStrategy*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.OnRemoteModelDidRead
void Normal::Realtime::IRealtimeTransformStrategy::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeTransformStrategy*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.IRealtimeTransformStrategy.OnLocalModelWillWrite
void Normal::Realtime::IRealtimeTransformStrategy::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimeTransformStrategy::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimeTransformStrategy*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformInterpolation
#include "Normal/Realtime/RealtimeTransformInterpolation.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: Normal.Realtime.Timeline`1
#include "Normal/Realtime/Timeline_1.hpp"
// Including type: Normal.Realtime.InterpolationDelay
#include "Normal/Realtime/InterpolationDelay.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransform _component
[[deprecated]] ::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransformInterpolation::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Timeline`1<Normal.Realtime.StandardTransformFrame> _timeline
[[deprecated]] ::Normal::Realtime::Timeline_1<::Normal::Realtime::StandardTransformFrame>*& Normal::Realtime::RealtimeTransformInterpolation::dyn__timeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::dyn__timeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeline"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Timeline_1<::Normal::Realtime::StandardTransformFrame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.InterpolationDelay _delay
[[deprecated]] ::Normal::Realtime::InterpolationDelay*& Normal::Realtime::RealtimeTransformInterpolation::dyn__delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::dyn__delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delay"))->offset;
  return *reinterpret_cast<::Normal::Realtime::InterpolationDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.get_roomTime
double Normal::Realtime::RealtimeTransformInterpolation::get_roomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::get_roomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransformInterpolation::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformInterpolation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.Reset
void Normal::Realtime::RealtimeTransformInterpolation::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformInterpolation*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.Update
void Normal::Realtime::RealtimeTransformInterpolation::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformInterpolation*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.OnLocalModelWillWrite
void Normal::Realtime::RealtimeTransformInterpolation::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformInterpolation*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.OnRemoteModelDidRead
void Normal::Realtime::RealtimeTransformInterpolation::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformInterpolation*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.RemoteUpdate
void Normal::Realtime::RealtimeTransformInterpolation::RemoteUpdate(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::RemoteUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.ResetWithLocalModel
void Normal::Realtime::RealtimeTransformInterpolation::ResetWithLocalModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::ResetWithLocalModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithLocalModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.ResetWithRemoteModel
void Normal::Realtime::RealtimeTransformInterpolation::ResetWithRemoteModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::ResetWithRemoteModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithRemoteModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.AddTimelineFrame
void Normal::Realtime::RealtimeTransformInterpolation::AddTimelineFrame(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::AddTimelineFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTimelineFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformInterpolation.IsInterpolationBodyChanged
bool Normal::Realtime::RealtimeTransformInterpolation::IsInterpolationBodyChanged(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformInterpolation::IsInterpolationBodyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformInterpolation", "IsInterpolationBodyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, changes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformRigidbody
#include "Normal/Realtime/RealtimeTransformRigidbody.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Normal.Realtime.Timeline`1
#include "Normal/Realtime/Timeline_1.hpp"
// Including type: Normal.Realtime.InterpolationDelay
#include "Normal/Realtime/InterpolationDelay.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransform _component
[[deprecated]] ::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransformRigidbody::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rigidbody _rigidbody
[[deprecated]] ::UnityEngine::Rigidbody*& Normal::Realtime::RealtimeTransformRigidbody::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Timeline`1<Normal.Realtime.RigidbodyPhysicsBodyFrame> _physicsBodyTimeline
[[deprecated]] ::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>*& Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsBodyTimeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsBodyTimeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsBodyTimeline"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsBodyFrame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Timeline`1<Normal.Realtime.RigidbodyPhysicsStateFrame> _physicsStateTimeline
[[deprecated]] ::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsStateFrame>*& Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsStateTimeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__physicsStateTimeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsStateTimeline"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Timeline_1<::Normal::Realtime::RigidbodyPhysicsStateFrame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.InterpolationDelay _delay
[[deprecated]] ::Normal::Realtime::InterpolationDelay*& Normal::Realtime::RealtimeTransformRigidbody::dyn__delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delay"))->offset;
  return *reinterpret_cast<::Normal::Realtime::InterpolationDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _fixedRoomTime
[[deprecated]] double& Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixedRoomTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fixedRoomTimeInitialized
[[deprecated]] bool& Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__fixedRoomTimeInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixedRoomTimeInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _velocityPrevWrite
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformRigidbody::dyn__velocityPrevWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__velocityPrevWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityPrevWrite"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _angularVelocityPrevWrite
[[deprecated]] ::UnityEngine::Vector3& Normal::Realtime::RealtimeTransformRigidbody::dyn__angularVelocityPrevWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::dyn__angularVelocityPrevWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocityPrevWrite"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.get_roomTime
double Normal::Realtime::RealtimeTransformRigidbody::get_roomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::get_roomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransformRigidbody::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformRigidbody*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ResetFixedRoomTime
void Normal::Realtime::RealtimeTransformRigidbody::ResetFixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ResetFixedRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFixedRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.InitializeFixedRoomTime
void Normal::Realtime::RealtimeTransformRigidbody::InitializeFixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::InitializeFixedRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFixedRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.IncrementFixedRoomTime
void Normal::Realtime::RealtimeTransformRigidbody::IncrementFixedRoomTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::IncrementFixedRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementFixedRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.CorrectFixedRoomTimeDrift
void Normal::Realtime::RealtimeTransformRigidbody::CorrectFixedRoomTimeDrift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::CorrectFixedRoomTimeDrift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CorrectFixedRoomTimeDrift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ReconstructFixedTimestamp
double Normal::Realtime::RealtimeTransformRigidbody::ReconstructFixedTimestamp(double packetRoomTime, float fixedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ReconstructFixedTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "ReconstructFixedTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetRoomTime), ::il2cpp_utils::ExtractType(fixedTimeOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packetRoomTime, fixedTimeOffset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.Reset
void Normal::Realtime::RealtimeTransformRigidbody::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformRigidbody*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.Update
void Normal::Realtime::RealtimeTransformRigidbody::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformRigidbody*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.FixedUpdate
void Normal::Realtime::RealtimeTransformRigidbody::FixedUpdate(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnLocalModelWillWrite
void Normal::Realtime::RealtimeTransformRigidbody::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformRigidbody*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnRemoteModelDidRead
void Normal::Realtime::RealtimeTransformRigidbody::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformRigidbody*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ResetWithLocalModel
void Normal::Realtime::RealtimeTransformRigidbody::ResetWithLocalModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ResetWithLocalModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithLocalModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ResetWithRemoteModel
void Normal::Realtime::RealtimeTransformRigidbody::ResetWithRemoteModel(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ResetWithRemoteModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWithRemoteModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.RemoteFixedUpdate
void Normal::Realtime::RealtimeTransformRigidbody::RemoteFixedUpdate(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::RemoteFixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteFixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ClearTimelines
void Normal::Realtime::RealtimeTransformRigidbody::ClearTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ClearTimelines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTimelines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.IsPhysicsBodyChanged
bool Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsBodyChanged(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsBodyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "IsPhysicsBodyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.IsPhysicsStateChanged
bool Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsStateChanged(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::IsPhysicsStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "IsPhysicsStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, changes);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.SetPhysicsBodyValues
void Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsBodyValues(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsBodyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsBodyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, scale, velocity, angularVelocity);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.SetPhysicsStateValues
void Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsStateValues(bool useGravity, bool isKinematic, bool isSleeping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::SetPhysicsStateValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsStateValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useGravity), ::il2cpp_utils::ExtractType(isKinematic), ::il2cpp_utils::ExtractType(isSleeping)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useGravity, isKinematic, isSleeping);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ClearOwnershipIfSleeping
void Normal::Realtime::RealtimeTransformRigidbody::ClearOwnershipIfSleeping(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ClearOwnershipIfSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOwnershipIfSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.AddPhysicsBodyFrame
void Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsBodyFrame(::Normal::Realtime::RealtimeTransformModel* model, double timestamp, bool useModelVelocity, bool useModelAngularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsBodyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPhysicsBodyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(useModelVelocity), ::il2cpp_utils::ExtractType(useModelAngularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, timestamp, useModelVelocity, useModelAngularVelocity);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.AddPhysicsStateFrame
void Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsStateFrame(::Normal::Realtime::RealtimeTransformModel* model, double timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::AddPhysicsStateFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPhysicsStateFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, timestamp);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.SetModelFromRigidbody
void Normal::Realtime::RealtimeTransformRigidbody::SetModelFromRigidbody(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::SetModelFromRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelFromRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ShouldSendVelocity
bool Normal::Realtime::RealtimeTransformRigidbody::ShouldSendVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ShouldSendVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSendVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.ShouldSendAngularVelocity
bool Normal::Realtime::RealtimeTransformRigidbody::ShouldSendAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::ShouldSendAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSendAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnCollisionEnter
void Normal::Realtime::RealtimeTransformRigidbody::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnCollisionExit
void Normal::Realtime::RealtimeTransformRigidbody::OnCollisionExit(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.OnCollisionStay
void Normal::Realtime::RealtimeTransformRigidbody::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.TakeOverCollidingRigidbodyIfOwnedByWorld
void Normal::Realtime::RealtimeTransformRigidbody::TakeOverCollidingRigidbodyIfOwnedByWorld(::UnityEngine::Rigidbody* otherRigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::TakeOverCollidingRigidbodyIfOwnedByWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakeOverCollidingRigidbodyIfOwnedByWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherRigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherRigidbody);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.DeriveVelocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformRigidbody::DeriveVelocity(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::DeriveVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "DeriveVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, dt);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformRigidbody.DeriveAngularVelocity
::UnityEngine::Vector3 Normal::Realtime::RealtimeTransformRigidbody::DeriveAngularVelocity(::UnityEngine::Quaternion start, ::UnityEngine::Quaternion end, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformRigidbody::DeriveAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimeTransformRigidbody", "DeriveAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, dt);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeTransformSnapping
#include "Normal/Realtime/RealtimeTransformSnapping.hpp"
// Including type: Normal.Realtime.RealtimeTransform
#include "Normal/Realtime/RealtimeTransform.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/RealtimeTransformModel_PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.RealtimeTransform _component
[[deprecated]] ::Normal::Realtime::RealtimeTransform*& Normal::Realtime::RealtimeTransformSnapping::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.get_isInterpolationWarmedUp
bool Normal::Realtime::RealtimeTransformSnapping::get_isInterpolationWarmedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::get_isInterpolationWarmedUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformSnapping*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.Reset
void Normal::Realtime::RealtimeTransformSnapping::Reset(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformSnapping*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.Update
void Normal::Realtime::RealtimeTransformSnapping::Update(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformSnapping*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.OnLocalModelWillWrite
void Normal::Realtime::RealtimeTransformSnapping::OnLocalModelWillWrite(::Normal::Realtime::RealtimeTransformModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::OnLocalModelWillWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformSnapping*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.RealtimeTransformSnapping.OnRemoteModelDidRead
void Normal::Realtime::RealtimeTransformSnapping::OnRemoteModelDidRead(::Normal::Realtime::RealtimeTransformModel* model, ::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformSnapping::OnRemoteModelDidRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeTransformSnapping*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, changes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.CollectionUtilities
#include "Normal/Realtime/CollectionUtilities.hpp"
// Including type: Normal.Realtime.Serialization.IModel
#include "Normal/Realtime/Serialization/IModel.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.CollectionUtilities.SetParentOnIModel
void Normal::Realtime::CollectionUtilities::SetParentOnIModel(::Normal::Realtime::Serialization::IModel* child, ::Normal::Realtime::RealtimeModel* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::CollectionUtilities::SetParentOnIModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "CollectionUtilities", "SetParentOnIModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, child, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.PhysXEmulation
#include "Normal/Realtime/PhysXEmulation.hpp"
// Including type: UnityEngine.RigidbodyConstraints
#include "UnityEngine/RigidbodyConstraints.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.PhysXEmulation.SimulatePhysX
float Normal::Realtime::PhysXEmulation::SimulatePhysX(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity, bool useGravity, ::UnityEngine::Vector3 gravity, float linearDamping, float angularDamping, float maxLinearVelocity, float maxAngularVelocity, ::UnityEngine::RigidbodyConstraints constraints, float deltaTime, float timeStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PhysXEmulation::SimulatePhysX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "PhysXEmulation", "SimulatePhysX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity), ::il2cpp_utils::ExtractType(useGravity), ::il2cpp_utils::ExtractType(gravity), ::il2cpp_utils::ExtractType(linearDamping), ::il2cpp_utils::ExtractType(angularDamping), ::il2cpp_utils::ExtractType(maxLinearVelocity), ::il2cpp_utils::ExtractType(maxAngularVelocity), ::il2cpp_utils::ExtractType(constraints), ::il2cpp_utils::ExtractType(deltaTime), ::il2cpp_utils::ExtractType(timeStep)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(position), byref(rotation), byref(linearVelocity), byref(angularVelocity), useGravity, gravity, linearDamping, angularDamping, maxLinearVelocity, maxAngularVelocity, constraints, deltaTime, timeStep);
}
// Autogenerated method: Normal.Realtime.PhysXEmulation.SimulatePhysXTick
void Normal::Realtime::PhysXEmulation::SimulatePhysXTick(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity, bool useGravity, ::UnityEngine::Vector3 gravity, float linearDamping, float angularDamping, float maxLinearVelocity, float maxAngularVelocity, ::UnityEngine::RigidbodyConstraints constraints, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PhysXEmulation::SimulatePhysXTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "PhysXEmulation", "SimulatePhysXTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity), ::il2cpp_utils::ExtractType(useGravity), ::il2cpp_utils::ExtractType(gravity), ::il2cpp_utils::ExtractType(linearDamping), ::il2cpp_utils::ExtractType(angularDamping), ::il2cpp_utils::ExtractType(maxLinearVelocity), ::il2cpp_utils::ExtractType(maxAngularVelocity), ::il2cpp_utils::ExtractType(constraints), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(position), byref(rotation), byref(linearVelocity), byref(angularVelocity), useGravity, gravity, linearDamping, angularDamping, maxLinearVelocity, maxAngularVelocity, constraints, deltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimePrefabLoadDelegate
#include "Normal/Realtime/IRealtimePrefabLoadDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimePrefabMetadata
#include "Normal/Realtime/RealtimePrefabMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimePrefabLoadDelegate.LoadRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::IRealtimePrefabLoadDelegate::LoadRealtimePrefab(::Normal::Realtime::RealtimePrefabMetadata prefabMetadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimePrefabLoadDelegate::LoadRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimePrefabLoadDelegate*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabMetadata);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IRealtimePrefabInstantiateDelegate
#include "Normal/Realtime/IRealtimePrefabInstantiateDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IRealtimePrefabInstantiateDelegate.InstantiateRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::IRealtimePrefabInstantiateDelegate::InstantiateRealtimePrefab(::UnityEngine::GameObject* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimePrefabInstantiateDelegate::InstantiateRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimePrefabInstantiateDelegate*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Normal.Realtime.IRealtimePrefabInstantiateDelegate.DestroyRealtimePrefab
void Normal::Realtime::IRealtimePrefabInstantiateDelegate::DestroyRealtimePrefab(::UnityEngine::GameObject* prefabInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IRealtimePrefabInstantiateDelegate::DestroyRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IRealtimePrefabInstantiateDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabInstance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimePrefabExtensions
#include "Normal/Realtime/RealtimePrefabExtensions.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.IRealtimePrefabLoadDelegate
#include "Normal/Realtime/IRealtimePrefabLoadDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.RealtimePrefabExtensions.LoadRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::RealtimePrefabExtensions::LoadRealtimePrefab(::Normal::Realtime::IRealtimePrefabLoadDelegate* prefabDelegate, ::StringW prefabName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimePrefabExtensions::LoadRealtimePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "RealtimePrefabExtensions", "LoadRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabDelegate), ::il2cpp_utils::ExtractType(prefabName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabDelegate, prefabName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.DefaultRealtimePrefabDelegate
#include "Normal/Realtime/DefaultRealtimePrefabDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimePrefabMetadata
#include "Normal/Realtime/RealtimePrefabMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.DefaultRealtimePrefabDelegate.LoadRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::DefaultRealtimePrefabDelegate::LoadRealtimePrefab(::Normal::Realtime::RealtimePrefabMetadata prefabMetadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::DefaultRealtimePrefabDelegate::LoadRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::DefaultRealtimePrefabDelegate*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabMetadata);
}
// Autogenerated method: Normal.Realtime.DefaultRealtimePrefabDelegate.InstantiateRealtimePrefab
::UnityEngine::GameObject* Normal::Realtime::DefaultRealtimePrefabDelegate::InstantiateRealtimePrefab(::UnityEngine::GameObject* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::DefaultRealtimePrefabDelegate::InstantiateRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::DefaultRealtimePrefabDelegate*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Normal.Realtime.DefaultRealtimePrefabDelegate.DestroyRealtimePrefab
void Normal::Realtime::DefaultRealtimePrefabDelegate::DestroyRealtimePrefab(::UnityEngine::GameObject* prefabInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::DefaultRealtimePrefabDelegate::DestroyRealtimePrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::DefaultRealtimePrefabDelegate*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabInstance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.IConfirmedProperty
#include "Normal/Realtime/IConfirmedProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.IConfirmedProperty.Confirm
void Normal::Realtime::IConfirmedProperty::Confirm(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfirmedProperty::Confirm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfirmedProperty*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated method: Normal.Realtime.IConfirmedProperty.UnsubscribeCallback
void Normal::Realtime::IConfirmedProperty::UnsubscribeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::IConfirmedProperty::UnsubscribeCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::IConfirmedProperty*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeWireTypeAttribute
#include "Normal/Realtime/RealtimeWireTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType type
[[deprecated]] ::Normal::Realtime::Serialization::Serialization::WireType& Normal::Realtime::RealtimeWireTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeWireTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::Serialization::WireType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean[] _changeset
[[deprecated]] ::ArrayW<bool>& Normal::Realtime::PropertyChangeSet::dyn__changeset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::dyn__changeset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeset"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <anyPropertiesChanged>k__BackingField
[[deprecated]] bool& Normal::Realtime::PropertyChangeSet::dyn_$anyPropertiesChanged$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::dyn_$anyPropertiesChanged$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anyPropertiesChanged>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.get_anyPropertiesChanged
bool Normal::Realtime::PropertyChangeSet::get_anyPropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::get_anyPropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anyPropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.set_anyPropertiesChanged
void Normal::Realtime::PropertyChangeSet::set_anyPropertiesChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::set_anyPropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anyPropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.get_Item
bool Normal::Realtime::PropertyChangeSet::get_Item(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.Clear
void Normal::Realtime::PropertyChangeSet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.PropertyChangeSet.SetPropertyChanged
void Normal::Realtime::PropertyChangeSet::SetPropertyChanged(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::PropertyChangeSet::SetPropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isFreshModel>k__BackingField
[[deprecated]] bool& Normal::Realtime::RealtimeModel::dyn_$isFreshModel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn_$isFreshModel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isFreshModel>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.MetaModel _metaModel
[[deprecated]] ::Normal::Realtime::Serialization::MetaModel*& Normal::Realtime::RealtimeModel::dyn__metaModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__metaModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metaModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::MetaModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel _parent
[[deprecated]] ::Normal::Realtime::RealtimeModel*& Normal::Realtime::RealtimeModel::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel[] _children
[[deprecated]] ::ArrayW<::Normal::Realtime::RealtimeModel*>& Normal::Realtime::RealtimeModel::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::ArrayW<::Normal::Realtime::RealtimeModel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room _room
[[deprecated]] ::Normal::Realtime::Room*& Normal::Realtime::RealtimeModel::dyn__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_room"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Normal.Realtime.RealtimeModelEvent,System.Action> _callbacks
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::Normal::Realtime::RealtimeModelEvent, ::System::Action*>*& Normal::Realtime::RealtimeModel::dyn__callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Normal::Realtime::RealtimeModelEvent, ::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.StreamContext _cachedReliableContext
[[deprecated]] ::Normal::Realtime::Serialization::StreamContext& Normal::Realtime::RealtimeModel::dyn__cachedReliableContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedReliableContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedReliableContext"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::StreamContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cachedReliableLength
[[deprecated]] int& Normal::Realtime::RealtimeModel::dyn__cachedReliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedReliableLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedReliableLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.StreamContext _cachedUnreliableContext
[[deprecated]] ::Normal::Realtime::Serialization::StreamContext& Normal::Realtime::RealtimeModel::dyn__cachedUnreliableContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedUnreliableContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedUnreliableContext"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::StreamContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cachedUnreliableLength
[[deprecated]] int& Normal::Realtime::RealtimeModel::dyn__cachedUnreliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::dyn__cachedUnreliableLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedUnreliableLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isFreshModel
bool Normal::Realtime::RealtimeModel::get_isFreshModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isFreshModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFreshModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_isFreshModel
void Normal::Realtime::RealtimeModel::set_isFreshModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_isFreshModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isFreshModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_hasMetaModel
bool Normal::Realtime::RealtimeModel::get_hasMetaModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_hasMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_preventOwnershipTakeover
bool Normal::Realtime::RealtimeModel::get_preventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_preventOwnershipTakeover
void Normal::Realtime::RealtimeModel::set_preventOwnershipTakeover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_preventOwnershipTakeover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preventOwnershipTakeover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_destroyWhenOwnerOrLastClientLeaves
bool Normal::Realtime::RealtimeModel::get_destroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_destroyWhenOwnerOrLastClientLeaves
void Normal::Realtime::RealtimeModel::set_destroyWhenOwnerOrLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_destroyWhenOwnerOrLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerOrLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isPersistent
bool Normal::Realtime::RealtimeModel::get_isPersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isPersistent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPersistent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_destroyWhenLastClientLeaves
bool Normal::Realtime::RealtimeModel::get_destroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_destroyWhenLastClientLeaves
void Normal::Realtime::RealtimeModel::set_destroyWhenLastClientLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_destroyWhenLastClientLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenLastClientLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_destroyWhenOwnerLeaves
bool Normal::Realtime::RealtimeModel::get_destroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.set_destroyWhenOwnerLeaves
void Normal::Realtime::RealtimeModel::set_destroyWhenOwnerLeaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::set_destroyWhenOwnerLeaves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyWhenOwnerLeaves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_parent
::Normal::Realtime::RealtimeModel* Normal::Realtime::RealtimeModel::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_room
::Normal::Realtime::Room* Normal::Realtime::RealtimeModel::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isRoomConnected
bool Normal::Realtime::RealtimeModel::get_isRoomConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isRoomConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRoomConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_ownerID
int Normal::Realtime::RealtimeModel::get_ownerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_ownerIDSelf
int Normal::Realtime::RealtimeModel::get_ownerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_ownerIDSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_ownerIDInHierarchy
int Normal::Realtime::RealtimeModel::get_ownerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_ownerIDInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerIDInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isUnownedSelf
bool Normal::Realtime::RealtimeModel::get_isUnownedSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isUnownedSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isUnownedInHierarchy
bool Normal::Realtime::RealtimeModel::get_isUnownedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isUnownedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnownedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedRemotelySelf
bool Normal::Realtime::RealtimeModel::get_isOwnedRemotelySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedRemotelySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedRemotelyInHierarchy
bool Normal::Realtime::RealtimeModel::get_isOwnedRemotelyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedRemotelyInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedRemotelyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedLocallySelf
bool Normal::Realtime::RealtimeModel::get_isOwnedLocallySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedLocallySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isOwnedLocallyInHierarchy
bool Normal::Realtime::RealtimeModel::get_isOwnedLocallyInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isOwnedLocallyInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOwnedLocallyInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isCachedLengthDirty
bool Normal::Realtime::RealtimeModel::get_isCachedLengthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isCachedLengthDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCachedLengthDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isReliableLengthDirty
bool Normal::Realtime::RealtimeModel::get_isReliableLengthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isReliableLengthDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReliableLengthDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.get_isUnreliableLengthDirty
bool Normal::Realtime::RealtimeModel::get_isUnreliableLengthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::get_isUnreliableLengthDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUnreliableLengthDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetMetaModel
void Normal::Realtime::RealtimeModel::SetMetaModel(::Normal::Realtime::Serialization::MetaModel* metaModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metaModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, metaModel);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.GetLifetimeFlag
bool Normal::Realtime::RealtimeModel::GetLifetimeFlag(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::GetLifetimeFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLifetimeFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flag);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetLifetimeFlag
void Normal::Realtime::RealtimeModel::SetLifetimeFlag(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags flag, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetLifetimeFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLifetimeFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag, value);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.WriteMetaModel
void Normal::Realtime::RealtimeModel::WriteMetaModel(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::WriteMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.ReadMetaModel
void Normal::Realtime::RealtimeModel::ReadMetaModel(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::ReadMetaModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMetaModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.MetaModelWriteLength
int Normal::Realtime::RealtimeModel::MetaModelWriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::MetaModelWriteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MetaModelWriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetParent
void Normal::Realtime::RealtimeModel::SetParent(::Normal::Realtime::RealtimeModel* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetChildren
void Normal::Realtime::RealtimeModel::SetChildren(::System::Collections::Generic::IEnumerable_1<::Normal::Realtime::RealtimeModel*>* children) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(children)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, children);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnParentReplaced
void Normal::Realtime::RealtimeModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetRoom
void Normal::Realtime::RealtimeModel::SetRoom(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.AttachAllCallbacks
void Normal::Realtime::RealtimeModel::AttachAllCallbacks(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::AttachAllCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachAllCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.DetachAllCallbacks
void Normal::Realtime::RealtimeModel::DetachAllCallbacks(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::DetachAllCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachAllCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.AttachModelEvent
void Normal::Realtime::RealtimeModel::AttachModelEvent(::Normal::Realtime::Room* room, ::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::AttachModelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachModelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.DetachModelEvent
void Normal::Realtime::RealtimeModel::DetachModelEvent(::Normal::Realtime::Room* room, ::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::DetachModelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachModelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SubscribeEventCallback
void Normal::Realtime::RealtimeModel::SubscribeEventCallback(::Normal::Realtime::RealtimeModelEvent event, ::System::Action* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SubscribeEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubscribeEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event), ::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, event, handler);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.UnsubscribeEventCallback
void Normal::Realtime::RealtimeModel::UnsubscribeEventCallback(::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::UnsubscribeEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsubscribeEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnWillWrite
void Normal::Realtime::RealtimeModel::OnWillWrite(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnDidWrite
void Normal::Realtime::RealtimeModel::OnDidWrite(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnWillRead
void Normal::Realtime::RealtimeModel::OnWillRead(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnDidRead
void Normal::Realtime::RealtimeModel::OnDidRead(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.OnDidReadProperties
void Normal::Realtime::RealtimeModel::OnDidReadProperties(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::OnDidReadProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidReadProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SafeInvokeCallback
void Normal::Realtime::RealtimeModel::SafeInvokeCallback(::Normal::Realtime::RealtimeModelEvent event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SafeInvokeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeInvokeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, event);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.GetOwnerIDSelf
int Normal::Realtime::RealtimeModel::GetOwnerIDSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::GetOwnerIDSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnerIDSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.GetOwnerIDInHierarchy
int Normal::Realtime::RealtimeModel::GetOwnerIDInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::GetOwnerIDInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnerIDInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.RequestOwnership
void Normal::Realtime::RealtimeModel::RequestOwnership(int ownerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ownerID);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.RequestOwnership
void Normal::Realtime::RealtimeModel::RequestOwnership(bool sendRedundantUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendRedundantUpdates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendRedundantUpdates);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.SetOwnership
void Normal::Realtime::RealtimeModel::SetOwnership(int ownerID, bool sendRedundantUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::SetOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerID), ::il2cpp_utils::ExtractType(sendRedundantUpdates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ownerID, sendRedundantUpdates);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.ClearOwnership
void Normal::Realtime::RealtimeModel::ClearOwnership(bool sendRedundantUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::ClearOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendRedundantUpdates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendRedundantUpdates);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateCachedLength
void Normal::Realtime::RealtimeModel::InvalidateCachedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateCachedLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateCachedLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateReliableLength
void Normal::Realtime::RealtimeModel::InvalidateReliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateReliableLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateReliableLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateUnreliableLength
void Normal::Realtime::RealtimeModel::InvalidateUnreliableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateUnreliableLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateUnreliableLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.InvalidateContextLength
void Normal::Realtime::RealtimeModel::InvalidateContextLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::InvalidateContextLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateContextLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Normal.Realtime.Serialization.IStreamWriter.WriteLength
int Normal::Realtime::RealtimeModel::Normal_Realtime_Serialization_IStreamWriter_WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Normal.Realtime.Serialization.IStreamWriter.WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.WriteLength
int Normal::Realtime::RealtimeModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Normal.Realtime.Serialization.IStreamWriter.Write
void Normal::Realtime::RealtimeModel::Normal_Realtime_Serialization_IStreamWriter_Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Normal.Realtime.Serialization.IStreamWriter.Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Write
void Normal::Realtime::RealtimeModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Normal.Realtime.Serialization.IStreamReader.Read
void Normal::Realtime::RealtimeModel::Normal_Realtime_Serialization_IStreamReader_Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Normal.Realtime.Serialization.IStreamReader.Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.RealtimeModel.Read
void Normal::Realtime::RealtimeModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModel::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::RealtimeModel*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.RealtimeModelEvent
#include "Normal/Realtime/RealtimeModelEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnWillWrite
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnWillWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnWillWrite"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnWillWrite
void Normal::Realtime::RealtimeModelEvent::_set_OnWillWrite(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnWillWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnWillWrite", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidWrite
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnDidWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnDidWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnDidWrite"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidWrite
void Normal::Realtime::RealtimeModelEvent::_set_OnDidWrite(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnDidWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnDidWrite", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnWillRead
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnWillRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnWillRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnWillRead"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnWillRead
void Normal::Realtime::RealtimeModelEvent::_set_OnWillRead(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnWillRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnWillRead", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidRead
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnDidRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnDidRead"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidRead
void Normal::Realtime::RealtimeModelEvent::_set_OnDidRead(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnDidRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnDidRead", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.RealtimeModelEvent OnDidReadProperties
::Normal::Realtime::RealtimeModelEvent Normal::Realtime::RealtimeModelEvent::_get_OnDidReadProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_get_OnDidReadProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeModelEvent>("Normal.Realtime", "RealtimeModelEvent", "OnDidReadProperties"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.RealtimeModelEvent OnDidReadProperties
void Normal::Realtime::RealtimeModelEvent::_set_OnDidReadProperties(::Normal::Realtime::RealtimeModelEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::_set_OnDidReadProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "RealtimeModelEvent", "OnDidReadProperties", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Normal::Realtime::RealtimeModelEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeModelEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent
#include "Normal/Realtime/Realtime_RealtimeEvent.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0
#include "Normal/Realtime/Realtime_--c__DisplayClass81_0.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_1
#include "Normal/Realtime/Realtime_--c__DisplayClass81_1.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84
#include "Normal/Realtime/Realtime_-ConnectSceneViewsToDatastoreTimeout-d__84.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass85_0
#include "Normal/Realtime/Realtime_--c__DisplayClass85_0.hpp"
// Including type: Normal.NormcoreAppSettings
#include "Normal/NormcoreAppSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Normal.Realtime.Serialization.IModel
#include "Normal/Realtime/Serialization/IModel.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Normal.Realtime.Datastore
#include "Normal/Realtime/Datastore.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionState
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<Normal.Realtime.Realtime> __instances
::System::Collections::Generic::HashSet_1<::Normal::Realtime::Realtime*>* Normal::Realtime::Realtime::_get___instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_get___instances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::Normal::Realtime::Realtime*>*>("Normal.Realtime", "Realtime", "__instances"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<Normal.Realtime.Realtime> __instances
void Normal::Realtime::Realtime::_set___instances(::System::Collections::Generic::HashSet_1<::Normal::Realtime::Realtime*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_set___instances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime", "__instances", value));
}
// Autogenerated static field getter
// Get static field: static private System.String UNSUPPORTED_INSTANTIATE_MESSAGE
::StringW Normal::Realtime::Realtime::_get_UNSUPPORTED_INSTANTIATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_get_UNSUPPORTED_INSTANTIATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal.Realtime", "Realtime", "UNSUPPORTED_INSTANTIATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.String UNSUPPORTED_INSTANTIATE_MESSAGE
void Normal::Realtime::Realtime::_set_UNSUPPORTED_INSTANTIATE_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_set_UNSUPPORTED_INSTANTIATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime", "UNSUPPORTED_INSTANTIATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.String UNSUPPORTED_DESTROY_MESSAGE
::StringW Normal::Realtime::Realtime::_get_UNSUPPORTED_DESTROY_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_get_UNSUPPORTED_DESTROY_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal.Realtime", "Realtime", "UNSUPPORTED_DESTROY_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.String UNSUPPORTED_DESTROY_MESSAGE
void Normal::Realtime::Realtime::_set_UNSUPPORTED_DESTROY_MESSAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::_set_UNSUPPORTED_DESTROY_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime", "UNSUPPORTED_DESTROY_MESSAGE", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent didConnectToRoom
[[deprecated]] ::Normal::Realtime::Realtime::RealtimeEvent*& Normal::Realtime::Realtime::dyn_didConnectToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn_didConnectToRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didConnectToRoom"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime::RealtimeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent didDisconnectFromRoom
[[deprecated]] ::Normal::Realtime::Realtime::RealtimeEvent*& Normal::Realtime::Realtime::dyn_didDisconnectFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn_didDisconnectFromRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDisconnectFromRoom"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime::RealtimeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _obsoleteAppKey
[[deprecated]] ::StringW& Normal::Realtime::Realtime::dyn__obsoleteAppKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__obsoleteAppKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obsoleteAppKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.NormcoreAppSettings _normcoreAppSettings
[[deprecated]] ::Normal::NormcoreAppSettings*& Normal::Realtime::Realtime::dyn__normcoreAppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__normcoreAppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normcoreAppSettings"))->offset;
  return *reinterpret_cast<::Normal::NormcoreAppSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _roomToJoinOnStart
[[deprecated]] ::StringW& Normal::Realtime::Realtime::dyn__roomToJoinOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__roomToJoinOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomToJoinOnStart"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _joinRoomOnStart
[[deprecated]] bool& Normal::Realtime::Realtime::dyn__joinRoomOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__joinRoomOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinRoomOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room _room
[[deprecated]] ::Normal::Realtime::Room*& Normal::Realtime::Realtime::dyn__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_room"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> _sceneViews
[[deprecated]] ::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::dyn__sceneViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__sceneViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViews"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneViewsConnected
[[deprecated]] bool& Normal::Realtime::Realtime::dyn__sceneViewsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__sceneViewsConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewsConnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> _prefabViews
[[deprecated]] ::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::dyn__prefabViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__prefabViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabViews"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _lastPrefabInstantiated
[[deprecated]] ::UnityEngine::GameObject*& Normal::Realtime::Realtime::dyn__lastPrefabInstantiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__lastPrefabInstantiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPrefabInstantiated"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _connectSceneViewsTimeoutRoutine
[[deprecated]] ::UnityEngine::Coroutine*& Normal::Realtime::Realtime::dyn__connectSceneViewsTimeoutRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::dyn__connectSceneViewsTimeoutRoutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectSceneViewsTimeoutRoutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime.get_instances
::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::Realtime*>* Normal::Realtime::Realtime::get_instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_instances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "get_instances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyCollection_1<::Normal::Realtime::Realtime*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_roomToJoinOnStart
::StringW Normal::Realtime::Realtime::get_roomToJoinOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_roomToJoinOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomToJoinOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_joinRoomOnStart
bool Normal::Realtime::Realtime::get_joinRoomOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_joinRoomOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_joinRoomOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_normcoreAppSettings
::Normal::NormcoreAppSettings* Normal::Realtime::Realtime::get_normcoreAppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_normcoreAppSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normcoreAppSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::NormcoreAppSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.set_normcoreAppSettings
void Normal::Realtime::Realtime::set_normcoreAppSettings(::Normal::NormcoreAppSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::set_normcoreAppSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normcoreAppSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.get_room
::Normal::Realtime::Room* Normal::Realtime::Realtime::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.set_room
void Normal::Realtime::Realtime::set_room(::Normal::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::set_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.get_connecting
bool Normal::Realtime::Realtime::get_connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_connecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_connected
bool Normal::Realtime::Realtime::get_connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_disconnected
bool Normal::Realtime::Realtime::get_disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_disconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.get_clientID
int Normal::Realtime::Realtime::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.add_didConnectToRoom
void Normal::Realtime::Realtime::add_didConnectToRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::add_didConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.remove_didConnectToRoom
void Normal::Realtime::Realtime::remove_didConnectToRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::remove_didConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.add_didDisconnectFromRoom
void Normal::Realtime::Realtime::add_didDisconnectFromRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::add_didDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.remove_didDisconnectFromRoom
void Normal::Realtime::Realtime::remove_didDisconnectFromRoom(::Normal::Realtime::Realtime::RealtimeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::remove_didDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::System::Nullable_1<::Normal::Realtime::Realtime::InstantiateOptions> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, options);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::System::Nullable_1<::Normal::Realtime::Realtime::InstantiateOptions> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, options);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::Normal::Realtime::Realtime* useInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(useInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, useInstance);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, bool ownedByClient, bool preventOwnershipTakeover, bool destroyWhenOwnerOrLastClientLeaves, ::Normal::Realtime::Realtime* useInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(ownedByClient), ::il2cpp_utils::ExtractType(preventOwnershipTakeover), ::il2cpp_utils::ExtractType(destroyWhenOwnerOrLastClientLeaves), ::il2cpp_utils::ExtractType(useInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, ownedByClient, preventOwnershipTakeover, destroyWhenOwnerOrLastClientLeaves, useInstance);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool ownedByClient, bool preventOwnershipTakeover, bool destroyWhenOwnerOrLastClientLeaves, ::Normal::Realtime::Realtime* useInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(ownedByClient), ::il2cpp_utils::ExtractType(preventOwnershipTakeover), ::il2cpp_utils::ExtractType(destroyWhenOwnerOrLastClientLeaves), ::il2cpp_utils::ExtractType(useInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, ownedByClient, preventOwnershipTakeover, destroyWhenOwnerOrLastClientLeaves, useInstance);
}
// Autogenerated method: Normal.Realtime.Realtime.FindRealtimeInstance
::Normal::Realtime::Realtime* Normal::Realtime::Realtime::FindRealtimeInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::FindRealtimeInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "FindRealtimeInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Realtime*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.RepositionRealtimePrefab
void Normal::Realtime::Realtime::RepositionRealtimePrefab(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RepositionRealtimePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "RepositionRealtimePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject, position, rotation);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation, parent);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::GameObject* Normal::Realtime::Realtime::Instantiate(::UnityEngine::GameObject* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyObject
void Normal::Realtime::Realtime::DestroyObject(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyObject
void Normal::Realtime::Realtime::DestroyObject(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.Realtime.Awake
void Normal::Realtime::Realtime::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Start
void Normal::Realtime::Realtime::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.OnDestroy
void Normal::Realtime::Realtime::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.OnApplicationQuit
void Normal::Realtime::Realtime::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Update
void Normal::Realtime::Realtime::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.FireDidConnectToRoom
void Normal::Realtime::Realtime::FireDidConnectToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::FireDidConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireDidConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.FireDidDisconnectFromRoom
void Normal::Realtime::Realtime::FireDidDisconnectFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::FireDidDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireDidDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Connect
void Normal::Realtime::Realtime::Connect(::StringW roomName, ::Normal::Realtime::Serialization::IModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, roomModel);
}
// Autogenerated method: Normal.Realtime.Realtime.Connect
void Normal::Realtime::Realtime::Connect(::StringW roomName, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, roomModel);
}
// Autogenerated method: Normal.Realtime.Realtime.Disconnect
void Normal::Realtime::Realtime::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.RoomConnectionStateChanged
void Normal::Realtime::Realtime::RoomConnectionStateChanged(::Normal::Realtime::Room* room, ::Normal::Realtime::Room::ConnectionState previousConnectionState, ::Normal::Realtime::Room::ConnectionState connectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RoomConnectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomConnectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(previousConnectionState), ::il2cpp_utils::ExtractType(connectionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, previousConnectionState, connectionState);
}
// Autogenerated method: Normal.Realtime.Realtime.SetRoom
void Normal::Realtime::Realtime::SetRoom(::Normal::Realtime::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::SetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Normal.Realtime.Realtime.RegisterSceneRealtimeView
void Normal::Realtime::Realtime::RegisterSceneRealtimeView(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RegisterSceneRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSceneRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.Realtime.UnregisterSceneRealtimeView
void Normal::Realtime::Realtime::UnregisterSceneRealtimeView(::Normal::Realtime::RealtimeView* view, bool isViewDestroyed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::UnregisterSceneRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSceneRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(isViewDestroyed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view, isViewDestroyed);
}
// Autogenerated method: Normal.Realtime.Realtime.ConnectSceneViewsToDatastore
void Normal::Realtime::Realtime::ConnectSceneViewsToDatastore(::System::Action* didConnectSceneViewsToDatastore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ConnectSceneViewsToDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneViewsToDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(didConnectSceneViewsToDatastore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, didConnectSceneViewsToDatastore);
}
// Autogenerated method: Normal.Realtime.Realtime.StartConnectSceneViewsTimeout
void Normal::Realtime::Realtime::StartConnectSceneViewsTimeout(::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>* viewsThatAreConnectingToTheDatastore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::StartConnectSceneViewsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartConnectSceneViewsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewsThatAreConnectingToTheDatastore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewsThatAreConnectingToTheDatastore);
}
// Autogenerated method: Normal.Realtime.Realtime.StopConnectSceneViewsTimeout
void Normal::Realtime::Realtime::StopConnectSceneViewsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::StopConnectSceneViewsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopConnectSceneViewsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.ConnectSceneViewsToDatastoreTimeout
::System::Collections::IEnumerator* Normal::Realtime::Realtime::ConnectSceneViewsToDatastoreTimeout(::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>* viewsThatAreConnectingToTheDatastore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ConnectSceneViewsToDatastoreTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneViewsToDatastoreTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewsThatAreConnectingToTheDatastore)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, viewsThatAreConnectingToTheDatastore);
}
// Autogenerated method: Normal.Realtime.Realtime.ConnectSceneViewToDatastore
void Normal::Realtime::Realtime::ConnectSceneViewToDatastore(::Normal::Realtime::RealtimeView* view, ::System::Action_1<bool>* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ConnectSceneViewToDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneViewToDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view, completionHandler);
}
// Autogenerated method: Normal.Realtime.Realtime.DisconnectSceneViewsFromDatastore
void Normal::Realtime::Realtime::DisconnectSceneViewsFromDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DisconnectSceneViewsFromDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectSceneViewsFromDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.ReplaceSceneViewModelWithFreshModel
void Normal::Realtime::Realtime::ReplaceSceneViewModelWithFreshModel(::Normal::Realtime::RealtimeView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::ReplaceSceneViewModelWithFreshModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceSceneViewModelWithFreshModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: Normal.Realtime.Realtime.InstantiateInternal
::UnityEngine::GameObject* Normal::Realtime::Realtime::InstantiateInternal(::StringW prefabName, bool ownedByClient, bool preventOwnershipTakeover, bool destroyWhenOwnerOrLastClientLeaves, bool destroyWhenOwnerLeaves, bool destroyWhenLastClientLeaves) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(ownedByClient), ::il2cpp_utils::ExtractType(preventOwnershipTakeover), ::il2cpp_utils::ExtractType(destroyWhenOwnerOrLastClientLeaves), ::il2cpp_utils::ExtractType(destroyWhenOwnerLeaves), ::il2cpp_utils::ExtractType(destroyWhenLastClientLeaves)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabName, ownedByClient, preventOwnershipTakeover, destroyWhenOwnerOrLastClientLeaves, destroyWhenOwnerLeaves, destroyWhenLastClientLeaves);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyRealtimeView
void Normal::Realtime::Realtime::DestroyRealtimeView(::Normal::Realtime::RealtimeView* realtimeView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyRealtimeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyRealtimeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtimeView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtimeView);
}
// Autogenerated method: Normal.Realtime.Realtime.PrefabRealtimeViewModelAdded
void Normal::Realtime::Realtime::PrefabRealtimeViewModelAdded(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::PrefabRealtimeViewModelAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabRealtimeViewModelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Realtime.PrefabRealtimeViewModelRemoved
void Normal::Realtime::Realtime::PrefabRealtimeViewModelRemoved(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::PrefabRealtimeViewModelRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabRealtimeViewModelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datastore), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Realtime.CreatePrefabRealtimeViewsForDatastore
void Normal::Realtime::Realtime::CreatePrefabRealtimeViewsForDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::CreatePrefabRealtimeViewsForDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePrefabRealtimeViewsForDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyAllPrefabRealtimeViews
void Normal::Realtime::Realtime::DestroyAllPrefabRealtimeViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyAllPrefabRealtimeViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAllPrefabRealtimeViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.CreatePrefabForRealtimeViewModel
::UnityEngine::GameObject* Normal::Realtime::Realtime::CreatePrefabForRealtimeViewModel(::Normal::Realtime::RealtimeViewModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::CreatePrefabForRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePrefabForRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.Realtime.<RoomConnectionStateChanged>b__77_0
void Normal::Realtime::Realtime::$RoomConnectionStateChanged$b__77_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::<RoomConnectionStateChanged>b__77_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RoomConnectionStateChanged>b__77_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.<SetRoom>b__78_0
void Normal::Realtime::Realtime::$SetRoom$b__78_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::<SetRoom>b__78_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetRoom>b__78_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime..cctor
void Normal::Realtime::Realtime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation);
}
// Autogenerated method: Normal.Realtime.Realtime.Instantiate
::UnityEngine::Object* Normal::Realtime::Realtime::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent, instantiateInWorldSpace);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.Realtime.Destroy
void Normal::Realtime::Realtime::Destroy(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyImmediate
void Normal::Realtime::Realtime::DestroyImmediate(::UnityEngine::Object* obj, bool allowDestroyingAssets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(allowDestroyingAssets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, allowDestroyingAssets);
}
// Autogenerated method: Normal.Realtime.Realtime.DestroyImmediate
void Normal::Realtime::Realtime::DestroyImmediate(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions
#include "Normal/Realtime/Realtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions defaults
::Normal::Realtime::Realtime::InstantiateOptions Normal::Realtime::Realtime::InstantiateOptions::_get_defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::_get_defaults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Realtime::InstantiateOptions>("Normal.Realtime", "Realtime/InstantiateOptions", "defaults"));
}
// Autogenerated static field setter
// Set static field: static public readonly Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions defaults
void Normal::Realtime::Realtime::InstantiateOptions::_set_defaults(::Normal::Realtime::Realtime::InstantiateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::_set_defaults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Realtime/InstantiateOptions", "defaults", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> ownedByClient
[[deprecated]] ::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_ownedByClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_ownedByClient");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownedByClient"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> preventOwnershipTakeover
[[deprecated]] ::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_preventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_preventOwnershipTakeover");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preventOwnershipTakeover"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> destroyWhenOwnerLeaves
[[deprecated]] ::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenOwnerLeaves");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyWhenOwnerLeaves"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> destroyWhenLastClientLeaves
[[deprecated]] ::System::Nullable_1<bool>& Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_destroyWhenLastClientLeaves");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyWhenLastClientLeaves"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime useInstance
[[deprecated]] ::Normal::Realtime::Realtime*& Normal::Realtime::Realtime::InstantiateOptions::dyn_useInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::dyn_useInstance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useInstance"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.InstantiateOptions..cctor
void Normal::Realtime::Realtime::InstantiateOptions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::InstantiateOptions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime", "Realtime/InstantiateOptions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent
#include "Normal/Realtime/Realtime_RealtimeEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent.Invoke
void Normal::Realtime::Realtime::RealtimeEvent::Invoke(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RealtimeEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::RealtimeEvent*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Realtime::RealtimeEvent::BeginInvoke(::Normal::Realtime::Realtime* realtime, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RealtimeEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::RealtimeEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, realtime, callback, object);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.RealtimeEvent.EndInvoke
void Normal::Realtime::Realtime::RealtimeEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::RealtimeEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::RealtimeEvent*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0
#include "Normal/Realtime/Realtime_--c__DisplayClass81_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime <>4__this
[[deprecated]] ::Normal::Realtime::Realtime*& Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action didConnectSceneViewsToDatastore
[[deprecated]] ::System::Action*& Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_didConnectSceneViewsToDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_didConnectSceneViewsToDatastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didConnectSceneViewsToDatastore"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> viewsThatAreConnectingToTheDatastore
[[deprecated]] ::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_viewsThatAreConnectingToTheDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_0::dyn_viewsThatAreConnectingToTheDatastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewsThatAreConnectingToTheDatastore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_1
#include "Normal/Realtime/Realtime_--c__DisplayClass81_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0
#include "Normal/Realtime/Realtime_--c__DisplayClass81_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView view
[[deprecated]] ::Normal::Realtime::RealtimeView*& Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_view");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "view"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_0 CS$<>8__locals1
[[deprecated]] ::Normal::Realtime::Realtime::$$c__DisplayClass81_0*& Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime::$$c__DisplayClass81_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass81_1.<ConnectSceneViewsToDatastore>b__0
void Normal::Realtime::Realtime::$$c__DisplayClass81_1::$ConnectSceneViewsToDatastore$b__0(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass81_1::<ConnectSceneViewsToDatastore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectSceneViewsToDatastore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84
#include "Normal/Realtime/Realtime_-ConnectSceneViewsToDatastoreTimeout-d__84.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Normal.Realtime.RealtimeView> viewsThatAreConnectingToTheDatastore
[[deprecated]] ::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>*& Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_viewsThatAreConnectingToTheDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::dyn_viewsThatAreConnectingToTheDatastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewsThatAreConnectingToTheDatastore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::RealtimeView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.Collections.IEnumerator.get_Current
::Il2CppObject* Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.IDisposable.Dispose
void Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.MoveNext
bool Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<ConnectSceneViewsToDatastoreTimeout>d__84.System.Collections.IEnumerator.Reset
void Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Realtime::$ConnectSceneViewsToDatastoreTimeout$d__84*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass85_0
#include "Normal/Realtime/Realtime_--c__DisplayClass85_0.hpp"
// Including type: Normal.Realtime.RealtimeView
#include "Normal/Realtime/RealtimeView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeView view
[[deprecated]] ::Normal::Realtime::RealtimeView*& Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_view");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "view"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> completionHandler
[[deprecated]] ::System::Action_1<bool>*& Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass85_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Realtime/Normal.Realtime.<>c__DisplayClass85_0.<ConnectSceneViewToDatastore>b__0
void Normal::Realtime::Realtime::$$c__DisplayClass85_0::$ConnectSceneViewToDatastore$b__0(bool success, ::Normal::Realtime::RealtimeViewModel* viewModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Realtime::$$c__DisplayClass85_0::<ConnectSceneViewToDatastore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectSceneViewToDatastore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(viewModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, viewModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Datastore
#include "Normal/Realtime/Datastore.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded
#include "Normal/Realtime/Datastore_PrefabViewModelAdded.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved
#include "Normal/Realtime/Datastore_PrefabViewModelRemoved.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.Properties
#include "Normal/Realtime/Datastore_Properties.hpp"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.<>c__DisplayClass22_0
#include "Normal/Realtime/Datastore_--c__DisplayClass22_0.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.Serialization.StreamEventDispatcher
#include "Normal/Realtime/Serialization/StreamEventDispatcher.hpp"
// Including type: Normal.Realtime.Serialization.InflightUpdateNotifier
#include "Normal/Realtime/Serialization/InflightUpdateNotifier.hpp"
// Including type: Normal.Realtime.Collections.StringKeyDictionary`1
#include "Normal/Realtime/Collections/StringKeyDictionary_1.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: Normal.Realtime.Serialization.RealtimeSet`1
#include "Normal/Realtime/Serialization/RealtimeSet_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteBuffer
#include "Normal/Realtime/Serialization/WriteBuffer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel _roomModel
[[deprecated]] ::Normal::Realtime::RealtimeModel*& Normal::Realtime::Datastore::dyn__roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__roomModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Serialization.StreamEventDispatcher _dispatcher
[[deprecated]] ::Normal::Realtime::Serialization::StreamEventDispatcher*& Normal::Realtime::Datastore::dyn__dispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__dispatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dispatcher"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::StreamEventDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Normal.Realtime.Serialization.InflightUpdateNotifier _inflightUpdateNotifier
[[deprecated]] ::Normal::Realtime::Serialization::InflightUpdateNotifier*& Normal::Realtime::Datastore::dyn__inflightUpdateNotifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__inflightUpdateNotifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inflightUpdateNotifier"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::InflightUpdateNotifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Collections.StringKeyDictionary`1<Normal.Realtime.RealtimeViewModel> _sceneViewModels
[[deprecated]] ::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>*& Normal::Realtime::Datastore::dyn__sceneViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__sceneViewModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneViewModels"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.RealtimeSet`1<Normal.Realtime.RealtimeViewModel> _prefabViewModels
[[deprecated]] ::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>*& Normal::Realtime::Datastore::dyn__prefabViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__prefabViewModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabViewModels"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded prefabRealtimeViewModelAdded
[[deprecated]] ::Normal::Realtime::Datastore::PrefabViewModelAdded*& Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabRealtimeViewModelAdded"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore::PrefabViewModelAdded**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved prefabRealtimeViewModelRemoved
[[deprecated]] ::Normal::Realtime::Datastore::PrefabViewModelRemoved*& Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn_prefabRealtimeViewModelRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabRealtimeViewModelRemoved"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore::PrefabViewModelRemoved**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.WriteBuffer _writeBuffer
[[deprecated]] ::Normal::Realtime::Serialization::WriteBuffer*& Normal::Realtime::Datastore::dyn__writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeBuffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::WriteBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.WriteStream _writeStream
[[deprecated]] ::Normal::Realtime::Serialization::WriteStream*& Normal::Realtime::Datastore::dyn__writeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__writeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::WriteStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _readBuffer
[[deprecated]] ::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::Datastore::dyn__readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readBuffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadStream _readStream
[[deprecated]] ::Normal::Realtime::Serialization::ReadStream*& Normal::Realtime::Datastore::dyn__readStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::dyn__readStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readStream"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Datastore.get_roomModel
::Normal::Realtime::RealtimeModel* Normal::Realtime::Datastore::get_roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_roomModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_roomModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeModel*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.get_sceneViewModels
::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>* Normal::Realtime::Datastore::get_sceneViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_sceneViewModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneViewModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Collections::StringKeyDictionary_1<::Normal::Realtime::RealtimeViewModel*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.get_prefabViewModels
::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>* Normal::Realtime::Datastore::get_prefabViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_prefabViewModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabViewModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.get_writeBuffer
::Normal::Realtime::Serialization::WriteBuffer* Normal::Realtime::Datastore::get_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::get_writeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_writeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::WriteBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.add_prefabRealtimeViewModelAdded
void Normal::Realtime::Datastore::add_prefabRealtimeViewModelAdded(::Normal::Realtime::Datastore::PrefabViewModelAdded* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::add_prefabRealtimeViewModelAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_prefabRealtimeViewModelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.remove_prefabRealtimeViewModelAdded
void Normal::Realtime::Datastore::remove_prefabRealtimeViewModelAdded(::Normal::Realtime::Datastore::PrefabViewModelAdded* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::remove_prefabRealtimeViewModelAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_prefabRealtimeViewModelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.add_prefabRealtimeViewModelRemoved
void Normal::Realtime::Datastore::add_prefabRealtimeViewModelRemoved(::Normal::Realtime::Datastore::PrefabViewModelRemoved* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::add_prefabRealtimeViewModelRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_prefabRealtimeViewModelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.remove_prefabRealtimeViewModelRemoved
void Normal::Realtime::Datastore::remove_prefabRealtimeViewModelRemoved(::Normal::Realtime::Datastore::PrefabViewModelRemoved* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::remove_prefabRealtimeViewModelRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_prefabRealtimeViewModelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Datastore.Reset
void Normal::Realtime::Datastore::Reset(::Normal::Realtime::Room* room, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, roomModel);
}
// Autogenerated method: Normal.Realtime.Datastore.GetSceneRealtimeViewModelForUUID
::Normal::Realtime::RealtimeViewModel* Normal::Realtime::Datastore::GetSceneRealtimeViewModelForUUID(::ArrayW<uint8_t> sceneViewUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::GetSceneRealtimeViewModelForUUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneRealtimeViewModelForUUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneViewUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeViewModel*, false>(this, ___internal__method, sceneViewUUID);
}
// Autogenerated method: Normal.Realtime.Datastore.ConnectSceneRealtimeViewModel
void Normal::Realtime::Datastore::ConnectSceneRealtimeViewModel(::StringW sceneViewUUID, ::Normal::Realtime::RealtimeViewModel* sceneViewViewModel, ::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::ConnectSceneRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectSceneRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneViewUUID), ::il2cpp_utils::ExtractType(sceneViewViewModel), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneViewUUID, sceneViewViewModel, completionHandler);
}
// Autogenerated method: Normal.Realtime.Datastore.TryInsertSceneViewModelIntoDatastore
void Normal::Realtime::Datastore::TryInsertSceneViewModelIntoDatastore(::StringW sceneViewUUID, ::Normal::Realtime::RealtimeViewModel* sceneViewViewModel, ::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>* completionHandler, int previousAttempts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::TryInsertSceneViewModelIntoDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryInsertSceneViewModelIntoDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneViewUUID), ::il2cpp_utils::ExtractType(sceneViewViewModel), ::il2cpp_utils::ExtractType(completionHandler), ::il2cpp_utils::ExtractType(previousAttempts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneViewUUID, sceneViewViewModel, completionHandler, previousAttempts);
}
// Autogenerated method: Normal.Realtime.Datastore.AddPrefabRealtimeViewModel
void Normal::Realtime::Datastore::AddPrefabRealtimeViewModel(::Normal::Realtime::RealtimeViewModel* prefabViewModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::AddPrefabRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrefabRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabViewModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabViewModel);
}
// Autogenerated method: Normal.Realtime.Datastore.RemovePrefabRealtimeViewModel
bool Normal::Realtime::Datastore::RemovePrefabRealtimeViewModel(::Normal::Realtime::RealtimeViewModel* model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::RemovePrefabRealtimeViewModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePrefabRealtimeViewModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, model);
}
// Autogenerated method: Normal.Realtime.Datastore.PrefabViewModelAddedToSet
void Normal::Realtime::Datastore::PrefabViewModelAddedToSet(::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>* set, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAddedToSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabViewModelAddedToSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, set, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore.PrefabViewModelRemovedFromSet
void Normal::Realtime::Datastore::PrefabViewModelRemovedFromSet(::Normal::Realtime::Serialization::RealtimeSet_1<::Normal::Realtime::RealtimeViewModel*>* set, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemovedFromSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabViewModelRemovedFromSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, set, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore.SetUpSerialization
void Normal::Realtime::Datastore::SetUpSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::SetUpSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUpSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Datastore.Deserialize
void Normal::Realtime::Datastore::Deserialize(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Normal.Realtime.Datastore.SerializeDeltaUpdates
void Normal::Realtime::Datastore::SerializeDeltaUpdates(bool reliable, uint updateID, double roomTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::SerializeDeltaUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDeltaUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(roomTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reliable, updateID, roomTime);
}
// Autogenerated method: Normal.Realtime.Datastore.DeserializeDeltaUpdates
uint Normal::Realtime::Datastore::DeserializeDeltaUpdates(::ArrayW<uint8_t> buffer, bool reliable, bool updateIsFromUs, double currentRoomTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::DeserializeDeltaUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDeltaUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(updateIsFromUs), ::il2cpp_utils::ExtractType(currentRoomTime)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, buffer, reliable, updateIsFromUs, currentRoomTime);
}
// Autogenerated method: Normal.Realtime.Datastore.WriteLength
int Normal::Realtime::Datastore::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::WriteLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.Datastore.Write
void Normal::Realtime::Datastore::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.Datastore.Read
void Normal::Realtime::Datastore::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded
#include "Normal/Realtime/Datastore_PrefabViewModelAdded.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded.Invoke
void Normal::Realtime::Datastore::PrefabViewModelAdded::Invoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAdded::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore::PrefabViewModelAdded*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Datastore::PrefabViewModelAdded::BeginInvoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAdded::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore::PrefabViewModelAdded*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, datastore, model, remote, callback, object);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelAdded.EndInvoke
void Normal::Realtime::Datastore::PrefabViewModelAdded::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelAdded::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore::PrefabViewModelAdded*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved
#include "Normal/Realtime/Datastore_PrefabViewModelRemoved.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved.Invoke
void Normal::Realtime::Datastore::PrefabViewModelRemoved::Invoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemoved::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore::PrefabViewModelRemoved*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datastore, model, remote);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Datastore::PrefabViewModelRemoved::BeginInvoke(::Normal::Realtime::Datastore* datastore, ::Normal::Realtime::RealtimeViewModel* model, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemoved::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore::PrefabViewModelRemoved*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, datastore, model, remote, callback, object);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.PrefabViewModelRemoved.EndInvoke
void Normal::Realtime::Datastore::PrefabViewModelRemoved::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::PrefabViewModelRemoved::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Datastore::PrefabViewModelRemoved*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Datastore/Normal.Realtime.Properties
#include "Normal/Realtime/Datastore_Properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties SceneRealtimeViewModels
::Normal::Realtime::Datastore::Properties Normal::Realtime::Datastore::Properties::_get_SceneRealtimeViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_get_SceneRealtimeViewModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Datastore::Properties>("Normal.Realtime", "Datastore/Properties", "SceneRealtimeViewModels"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties SceneRealtimeViewModels
void Normal::Realtime::Datastore::Properties::_set_SceneRealtimeViewModels(::Normal::Realtime::Datastore::Properties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_set_SceneRealtimeViewModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Datastore/Properties", "SceneRealtimeViewModels", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties RoomModel
::Normal::Realtime::Datastore::Properties Normal::Realtime::Datastore::Properties::_get_RoomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_get_RoomModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Datastore::Properties>("Normal.Realtime", "Datastore/Properties", "RoomModel"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties RoomModel
void Normal::Realtime::Datastore::Properties::_set_RoomModel(::Normal::Realtime::Datastore::Properties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_set_RoomModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Datastore/Properties", "RoomModel", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties PrefabRealtimeViewModels
::Normal::Realtime::Datastore::Properties Normal::Realtime::Datastore::Properties::_get_PrefabRealtimeViewModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_get_PrefabRealtimeViewModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Datastore::Properties>("Normal.Realtime", "Datastore/Properties", "PrefabRealtimeViewModels"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Datastore/Normal.Realtime.Properties PrefabRealtimeViewModels
void Normal::Realtime::Datastore::Properties::_set_PrefabRealtimeViewModels(::Normal::Realtime::Datastore::Properties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::_set_PrefabRealtimeViewModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime", "Datastore/Properties", "PrefabRealtimeViewModels", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& Normal::Realtime::Datastore::Properties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::Properties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Datastore/Normal.Realtime.<>c__DisplayClass22_0
#include "Normal/Realtime/Datastore_--c__DisplayClass22_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Normal.Realtime.RealtimeViewModel
#include "Normal/Realtime/RealtimeViewModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Boolean,Normal.Realtime.RealtimeViewModel> completionHandler
[[deprecated]] ::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>*& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::Normal::Realtime::RealtimeViewModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeViewModel sceneViewViewModel
[[deprecated]] ::Normal::Realtime::RealtimeViewModel*& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewViewModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewViewModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewViewModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeViewModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Datastore <>4__this
[[deprecated]] ::Normal::Realtime::Datastore*& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sceneViewUUID
[[deprecated]] ::StringW& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewUUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_sceneViewUUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewUUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 previousAttempts
[[deprecated]] int& Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_previousAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::dyn_previousAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Datastore/Normal.Realtime.<>c__DisplayClass22_0.<TryInsertSceneViewModelIntoDatastore>b__0
void Normal::Realtime::Datastore::$$c__DisplayClass22_0::$TryInsertSceneViewModelIntoDatastore$b__0(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Datastore::$$c__DisplayClass22_0::<TryInsertSceneViewModelIntoDatastore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryInsertSceneViewModelIntoDatastore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged
#include "Normal/Realtime/Room_ConnectionStateChanged.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived
#include "Normal/Realtime/Room_RPCMessageReceived.hpp"
// Including type: Normal.Realtime.Native.Client
#include "Normal/Realtime/Native/Client.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.RoomEventHandler
#include "Normal/Realtime/Room_RoomEventHandler.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.<>c__DisplayClass87_0
#include "Normal/Realtime/Room_--c__DisplayClass87_0.hpp"
// Including type: Normal.Realtime.Room/Normal.Realtime.<ConnectToServer_Coroutine>d__87
#include "Normal/Realtime/Room_-ConnectToServer_Coroutine-d__87.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Normal.Realtime.Datastore
#include "Normal/Realtime/Datastore.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: Normal.Realtime.SessionCapture
#include "Normal/Realtime/SessionCapture.hpp"
// Including type: Normal.Realtime.IRealtimePrefabLoadDelegate
#include "Normal/Realtime/IRealtimePrefabLoadDelegate.hpp"
// Including type: Normal.Realtime.IRealtimePrefabInstantiateDelegate
#include "Normal/Realtime/IRealtimePrefabInstantiateDelegate.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
// Including type: Normal.Realtime.Native.AudioInputStream
#include "Normal/Realtime/Native/AudioInputStream.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: Normal.Realtime.Native.NetworkInfo
#include "Normal/Realtime/Native/NetworkInfo.hpp"
// Including type: Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext
#include "Normal/Realtime/CoroutineRunner_CoroutineContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.ConnectionStateChanged connectionStateChanged
[[deprecated]] ::Normal::Realtime::Room::ConnectionStateChanged*& Normal::Realtime::Room::dyn_connectionStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_connectionStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionStateChanged"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::ConnectionStateChanged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RPCMessageReceived rpcMessageReceived
[[deprecated]] ::Normal::Realtime::Room::RPCMessageReceived*& Normal::Realtime::Room::dyn_rpcMessageReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_rpcMessageReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rpcMessageReceived"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RPCMessageReceived**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated]] ::StringW& Normal::Realtime::Room::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _time
[[deprecated]] double& Normal::Realtime::Room::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.ConnectionState _connectionState
[[deprecated]] ::Normal::Realtime::Room::ConnectionState& Normal::Realtime::Room::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double <datastoreFrameDuration>k__BackingField
[[deprecated]] double& Normal::Realtime::Room::dyn_$datastoreFrameDuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$datastoreFrameDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<datastoreFrameDuration>k__BackingField"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _debugLogging
[[deprecated]] bool& Normal::Realtime::Room::dyn__debugLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__debugLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debugLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Native.Client _client
[[deprecated]] ::Normal::Realtime::Native::Client*& Normal::Realtime::Room::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Native::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner _coroutineRunner
[[deprecated]] ::Normal::Realtime::CoroutineRunner*& Normal::Realtime::Room::dyn__coroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__coroutineRunner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineRunner"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.CoroutineRunner/Normal.Realtime.CoroutineContext _activeConnectToServerCoroutine
[[deprecated]] ::Normal::Realtime::CoroutineRunner::CoroutineContext*& Normal::Realtime::Room::dyn__activeConnectToServerCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__activeConnectToServerCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeConnectToServerCoroutine"))->offset;
  return *reinterpret_cast<::Normal::Realtime::CoroutineRunner::CoroutineContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Component <realtime>k__BackingField
[[deprecated]] ::UnityEngine::Component*& Normal::Realtime::Room::dyn_$realtime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$realtime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<realtime>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Datastore _datastore
[[deprecated]] ::Normal::Realtime::Datastore*& Normal::Realtime::Room::dyn__datastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__datastore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_datastore"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Datastore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _deltaTime
[[deprecated]] double& Normal::Realtime::Room::dyn__deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deltaTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _nextUpdateID
[[deprecated]] uint& Normal::Realtime::Room::dyn__nextUpdateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__nextUpdateID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextUpdateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeModel _roomModel
[[deprecated]] ::Normal::Realtime::RealtimeModel*& Normal::Realtime::Room::dyn__roomModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__roomModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomModel"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.SessionCapture _sessionCapture
[[deprecated]] ::Normal::Realtime::SessionCapture*& Normal::Realtime::Room::dyn__sessionCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn__sessionCapture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionCapture"))->offset;
  return *reinterpret_cast<::Normal::Realtime::SessionCapture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onWillWrite
[[deprecated]] ::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onWillWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onWillWrite"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onWillRead
[[deprecated]] ::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onWillRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onWillRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onWillRead"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onDidWrite
[[deprecated]] ::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onDidWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onDidWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDidWrite"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Room/Normal.Realtime.RoomEventHandler onDidRead
[[deprecated]] ::Normal::Realtime::Room::RoomEventHandler*& Normal::Realtime::Room::dyn_onDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_onDidRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDidRead"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Room::RoomEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.IRealtimePrefabLoadDelegate <prefabLoadDelegate>k__BackingField
[[deprecated]] ::Normal::Realtime::IRealtimePrefabLoadDelegate*& Normal::Realtime::Room::dyn_$prefabLoadDelegate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$prefabLoadDelegate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<prefabLoadDelegate>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IRealtimePrefabLoadDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.IRealtimePrefabInstantiateDelegate <prefabInstantiateDelegate>k__BackingField
[[deprecated]] ::Normal::Realtime::IRealtimePrefabInstantiateDelegate*& Normal::Realtime::Room::dyn_$prefabInstantiateDelegate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::dyn_$prefabInstantiateDelegate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<prefabInstantiateDelegate>k__BackingField"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IRealtimePrefabInstantiateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Room.get_name
::StringW Normal::Realtime::Room::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_clientID
int Normal::Realtime::Room::get_clientID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_clientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_time
double Normal::Realtime::Room::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_connectionState
::Normal::Realtime::Room::ConnectionState Normal::Realtime::Room::get_connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Room::ConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_connecting
bool Normal::Realtime::Room::get_connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_connecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_connected
bool Normal::Realtime::Room::get_connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_disconnected
bool Normal::Realtime::Room::get_disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_disconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_datastoreFrameDuration
double Normal::Realtime::Room::get_datastoreFrameDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_datastoreFrameDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_datastoreFrameDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_datastoreFrameDuration
void Normal::Realtime::Room::set_datastoreFrameDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_datastoreFrameDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_datastoreFrameDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_debugLogging
bool Normal::Realtime::Room::get_debugLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_debugLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debugLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_debugLogging
void Normal::Realtime::Room::set_debugLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_debugLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_debugLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_realtime
::UnityEngine::Component* Normal::Realtime::Room::get_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_realtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_realtime
void Normal::Realtime::Room::set_realtime(::UnityEngine::Component* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_realtime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_realtime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_datastore
::Normal::Realtime::Datastore* Normal::Realtime::Room::get_datastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_datastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_datastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Datastore*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_sessionCaptureRecord
bool Normal::Realtime::Room::get_sessionCaptureRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_sessionCaptureRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sessionCaptureRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_sessionCapturePlayback
bool Normal::Realtime::Room::get_sessionCapturePlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_sessionCapturePlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sessionCapturePlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.get_prefabLoadDelegate
::Normal::Realtime::IRealtimePrefabLoadDelegate* Normal::Realtime::Room::get_prefabLoadDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_prefabLoadDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabLoadDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IRealtimePrefabLoadDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_prefabLoadDelegate
void Normal::Realtime::Room::set_prefabLoadDelegate(::Normal::Realtime::IRealtimePrefabLoadDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_prefabLoadDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabLoadDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.get_prefabInstantiateDelegate
::Normal::Realtime::IRealtimePrefabInstantiateDelegate* Normal::Realtime::Room::get_prefabInstantiateDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::get_prefabInstantiateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabInstantiateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::IRealtimePrefabInstantiateDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.set_prefabInstantiateDelegate
void Normal::Realtime::Room::set_prefabInstantiateDelegate(::Normal::Realtime::IRealtimePrefabInstantiateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::set_prefabInstantiateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabInstantiateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_connectionStateChanged
void Normal::Realtime::Room::add_connectionStateChanged(::Normal::Realtime::Room::ConnectionStateChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_connectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_connectionStateChanged
void Normal::Realtime::Room::remove_connectionStateChanged(::Normal::Realtime::Room::ConnectionStateChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_connectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_rpcMessageReceived
void Normal::Realtime::Room::add_rpcMessageReceived(::Normal::Realtime::Room::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_rpcMessageReceived
void Normal::Realtime::Room::remove_rpcMessageReceived(::Normal::Realtime::Room::RPCMessageReceived* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_rpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_rpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onWillWrite
void Normal::Realtime::Room::add_onWillWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onWillWrite
void Normal::Realtime::Room::remove_onWillWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onWillRead
void Normal::Realtime::Room::add_onWillRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onWillRead
void Normal::Realtime::Room::remove_onWillRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onDidWrite
void Normal::Realtime::Room::add_onDidWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onDidWrite
void Normal::Realtime::Room::remove_onDidWrite(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.add_onDidRead
void Normal::Realtime::Room::add_onDidRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::add_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.remove_onDidRead
void Normal::Realtime::Room::remove_onDidRead(::Normal::Realtime::Room::RoomEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::remove_onDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Room.Dispose
void Normal::Realtime::Room::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Normal::Realtime::Room*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.Dispose
void Normal::Realtime::Room::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Room.Connect
void Normal::Realtime::Room::Connect(::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, appKey, matcherURL, roomModel);
}
// Autogenerated method: Normal.Realtime.Room.Connect
void Normal::Realtime::Room::Connect(::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel, ::Normal::Realtime::IRealtimePrefabLoadDelegate* prefabLoadDelegate, ::Normal::Realtime::IRealtimePrefabInstantiateDelegate* prefabInstantiateDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel), ::il2cpp_utils::ExtractType(prefabLoadDelegate), ::il2cpp_utils::ExtractType(prefabInstantiateDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, appKey, matcherURL, roomModel, prefabLoadDelegate, prefabInstantiateDelegate);
}
// Autogenerated method: Normal.Realtime.Room.Disconnect
void Normal::Realtime::Room::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.CreateCoroutineRunner
void Normal::Realtime::Room::CreateCoroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::CreateCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.DestroyCoroutineRunner
void Normal::Realtime::Room::DestroyCoroutineRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::DestroyCoroutineRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyCoroutineRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SetConnectionState
void Normal::Realtime::Room::SetConnectionState(::Normal::Realtime::Room::ConnectionState connectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SetConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionState);
}
// Autogenerated method: Normal.Realtime.Room.CreateClient
void Normal::Realtime::Room::CreateClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::CreateClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.DestroyClient
void Normal::Realtime::Room::DestroyClient(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::DestroyClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Room.ConnectToServer
void Normal::Realtime::Room::ConnectToServer(::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, appKey, matcherURL, roomModel);
}
// Autogenerated method: Normal.Realtime.Room.ConnectToServer_Coroutine
::System::Collections::IEnumerator* Normal::Realtime::Room::ConnectToServer_Coroutine(::Normal::Realtime::CoroutineRunner::CoroutineContext* coroutineContext, ::StringW roomName, ::StringW appKey, ::StringW matcherURL, ::Normal::Realtime::RealtimeModel* roomModel, ::ArrayW<::Normal::Realtime::Native::Region> preferredRegions, ::Normal::Realtime::Native::Matcher* matcher, ::ArrayW<::Normal::Realtime::Native::Cluster> clusterPingResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ConnectToServer_Coroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer_Coroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineContext), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(matcherURL), ::il2cpp_utils::ExtractType(roomModel), ::il2cpp_utils::ExtractType(preferredRegions), ::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(clusterPingResults)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, coroutineContext, roomName, appKey, matcherURL, roomModel, preferredRegions, matcher, clusterPingResults);
}
// Autogenerated method: Normal.Realtime.Room.Disconnect
void Normal::Realtime::Room::Disconnect(bool error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: Normal.Realtime.Room.Tick
void Normal::Realtime::Room::Tick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.RoomTick
void Normal::Realtime::Room::RoomTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::RoomTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.ClientTick
void Normal::Realtime::Room::ClientTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ClientTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.ClientConnectToRoom
void Normal::Realtime::Room::ClientConnectToRoom(::StringW serverAnswer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ClientConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverAnswer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverAnswer);
}
// Autogenerated method: Normal.Realtime.Room.PersistenceTick
void Normal::Realtime::Room::PersistenceTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::PersistenceTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PersistenceTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.ReceivedPersistenceMessage
void Normal::Realtime::Room::ReceivedPersistenceMessage(::Normal::Realtime::Native::Client* client, int sender, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ReceivedPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, sender, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnWillWrite
void Normal::Realtime::Room::SafeDispatchOnWillWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnWillWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnWillWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnWillRead
void Normal::Realtime::Room::SafeDispatchOnWillRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnWillRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnWillRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnDidWrite
void Normal::Realtime::Room::SafeDispatchOnDidWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnDidWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnDidWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SafeDispatchOnDidRead
void Normal::Realtime::Room::SafeDispatchOnDidRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SafeDispatchOnDidRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchOnDidRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.StartSessonCapturePlayback
void Normal::Realtime::Room::StartSessonCapturePlayback(::Normal::Realtime::RealtimeModel* roomModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::StartSessonCapturePlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSessonCapturePlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomModel);
}
// Autogenerated method: Normal.Realtime.Room.StopSessionCapturePlayback
void Normal::Realtime::Room::StopSessionCapturePlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::StopSessionCapturePlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSessionCapturePlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.SessionCapturePlaybackTick
void Normal::Realtime::Room::SessionCapturePlaybackTick(double deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SessionCapturePlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SessionCapturePlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Normal.Realtime.Room.SendRPCMessage
bool Normal::Realtime::Room::SendRPCMessage(::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room.SendRPCMessage
bool Normal::Realtime::Room::SendRPCMessage(::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::SendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Room.ReceivedRPCMessage
void Normal::Realtime::Room::ReceivedRPCMessage(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::ReceivedRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Room.CreateAudioInputStream
::Normal::Realtime::Native::AudioInputStream* Normal::Realtime::Room::CreateAudioInputStream(bool voice, int sampleRate, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::CreateAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voice), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioInputStream*, false>(this, ___internal__method, voice, sampleRate, channels);
}
// Autogenerated method: Normal.Realtime.Room.GetAudioOutputStream
::Normal::Realtime::Native::AudioOutputStream* Normal::Realtime::Room::GetAudioOutputStream(int clientID, int streamID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::GetAudioOutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioOutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientID), ::il2cpp_utils::ExtractType(streamID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::AudioOutputStream*, false>(this, ___internal__method, clientID, streamID);
}
// Autogenerated method: Normal.Realtime.Room.GetNetworkStatistics
::Normal::Realtime::Native::NetworkInfo Normal::Realtime::Room::GetNetworkStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::GetNetworkStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::NetworkInfo, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Room.Finalize
void Normal::Realtime::Room::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Room::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
