// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.RealtimeTransformModel
#include "Normal/Realtime/RealtimeTransformModel.hpp"
// Including type: Normal.Realtime.PropertyChangeSet
#include "Normal/Realtime/PropertyChangeSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*, "Normal.Realtime", "RealtimeTransformModel/PropertyChangeSet");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
  // [TokenAttribute] Offset: FFFFFFFF
  class RealtimeTransformModel::PropertyChangeSet : public ::Normal::Realtime::PropertyChangeSet {
    public:
    // public System.Boolean get_position()
    // Offset: 0x8BECA0
    bool get_position();
    // public System.Boolean get_rotation()
    // Offset: 0x8BECE0
    bool get_rotation();
    // public System.Boolean get_scale()
    // Offset: 0x8BED20
    bool get_scale();
    // public System.Boolean get_velocity()
    // Offset: 0x8BED60
    bool get_velocity();
    // public System.Boolean get_angularVelocity()
    // Offset: 0x8BEBA0
    bool get_angularVelocity();
    // public System.Boolean get_physicsState()
    // Offset: 0x8BEC60
    bool get_physicsState();
    // public System.Boolean get_physicsBodyTimeOffset()
    // Offset: 0x8BEBE0
    bool get_physicsBodyTimeOffset();
    // public System.Boolean get_physicsStateTimeOffset()
    // Offset: 0x8BEC20
    bool get_physicsStateTimeOffset();
    // public System.Void .ctor()
    // Offset: 0x8BEA90
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RealtimeTransformModel::PropertyChangeSet* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RealtimeTransformModel::PropertyChangeSet*, creationType>()));
    }
  }; // Normal.Realtime.RealtimeTransformModel/Normal.Realtime.PropertyChangeSet
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_rotation
// Il2CppName: get_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_rotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_scale
// Il2CppName: get_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_scale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_velocity
// Il2CppName: get_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_velocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_angularVelocity
// Il2CppName: get_angularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_angularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_angularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsState
// Il2CppName: get_physicsState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_physicsState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsBodyTimeOffset
// Il2CppName: get_physicsBodyTimeOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsBodyTimeOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_physicsBodyTimeOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsStateTimeOffset
// Il2CppName: get_physicsStateTimeOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::*)()>(&Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::get_physicsStateTimeOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::RealtimeTransformModel::PropertyChangeSet*), "get_physicsStateTimeOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::RealtimeTransformModel::PropertyChangeSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
