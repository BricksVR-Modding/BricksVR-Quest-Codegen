// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeModel
  class RealtimeModel;
  // Forward declaring type: RealtimeView
  class RealtimeView;
}
// Completed forward declares
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Forward declaring type: IConfigurableComponent
  class IConfigurableComponent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::IConfigurableComponent);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::IConfigurableComponent*, "Normal.Realtime", "IConfigurableComponent");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.IConfigurableComponent
  // [TokenAttribute] Offset: FFFFFFFF
  class IConfigurableComponent {
    public:
    // public Normal.Realtime.RealtimeModel CreateModel()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Normal::Realtime::RealtimeModel* CreateModel();
    // public System.Void SetModel(Normal.Realtime.RealtimeModel model)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetModel(::Normal::Realtime::RealtimeModel* model);
    // public System.Void SetView(Normal.Realtime.RealtimeView view)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetView(::Normal::Realtime::RealtimeView* view);
  }; // Normal.Realtime.IConfigurableComponent
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::IConfigurableComponent::CreateModel
// Il2CppName: CreateModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Normal::Realtime::RealtimeModel* (Normal::Realtime::IConfigurableComponent::*)()>(&Normal::Realtime::IConfigurableComponent::CreateModel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IConfigurableComponent*), "CreateModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IConfigurableComponent::SetModel
// Il2CppName: SetModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IConfigurableComponent::*)(::Normal::Realtime::RealtimeModel*)>(&Normal::Realtime::IConfigurableComponent::SetModel)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeModel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IConfigurableComponent*), "SetModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::IConfigurableComponent::SetView
// Il2CppName: SetView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::IConfigurableComponent::*)(::Normal::Realtime::RealtimeView*)>(&Normal::Realtime::IConfigurableComponent::SetView)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::IConfigurableComponent*), "SetView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
