// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BrickDestroyer
  class BrickDestroyer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BrickDestroyer);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BrickDestroyer*, "", "BrickDestroyer");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: BrickDestroyer
  // [TokenAttribute] Offset: FFFFFFFF
  class BrickDestroyer : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::BrickDestroyer::$DelayedDestroyIEnum$d__4
    class $DelayedDestroyIEnum$d__4;
    // Get static field: static private BrickDestroyer _instance
    static ::GlobalNamespace::BrickDestroyer* _get__instance();
    // Set static field: static private BrickDestroyer _instance
    static void _set__instance(::GlobalNamespace::BrickDestroyer* value);
    // static public BrickDestroyer GetInstance()
    // Offset: 0x6ED7D0
    static ::GlobalNamespace::BrickDestroyer* GetInstance();
    // private System.Void Awake()
    // Offset: 0x6ED690
    void Awake();
    // public System.Void DelayedDestroy(UnityEngine.GameObject obj)
    // Offset: 0x6ED750
    void DelayedDestroy(::UnityEngine::GameObject* obj);
    // private System.Collections.IEnumerator DelayedDestroyIEnum(UnityEngine.GameObject obj)
    // Offset: 0x6ED6E0
    ::System::Collections::IEnumerator* DelayedDestroyIEnum(::UnityEngine::GameObject* obj);
    // public System.Void .ctor()
    // Offset: 0x1DDE30
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BrickDestroyer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrickDestroyer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BrickDestroyer*, creationType>()));
    }
  }; // BrickDestroyer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BrickDestroyer::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::BrickDestroyer* (*)()>(&GlobalNamespace::BrickDestroyer::GetInstance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickDestroyer*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickDestroyer::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BrickDestroyer::*)()>(&GlobalNamespace::BrickDestroyer::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickDestroyer*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickDestroyer::DelayedDestroy
// Il2CppName: DelayedDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BrickDestroyer::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::BrickDestroyer::DelayedDestroy)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickDestroyer*), "DelayedDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickDestroyer::DelayedDestroyIEnum
// Il2CppName: DelayedDestroyIEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::BrickDestroyer::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::BrickDestroyer::DelayedDestroyIEnum)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickDestroyer*), "DelayedDestroyIEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickDestroyer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
