// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Steamworks.SteamClientClass`1
#include "Steamworks/SteamClientClass_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Steamworks
namespace Steamworks {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: SteamParties
  class SteamParties;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Steamworks::SteamParties);
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::SteamParties*, "Steamworks", "SteamParties");
// Type namespace: Steamworks
namespace Steamworks {
  // WARNING Size may be invalid!
  // Autogenerated type: Steamworks.SteamParties
  // [TokenAttribute] Offset: FFFFFFFF
  class SteamParties : public ::Steamworks::SteamClientClass_1<::Steamworks::SteamParties*> {
    public:
    // Nested type: ::Steamworks::SteamParties::$$c
    class $$c;
    // [DebuggerBrowsableAttribute] Offset: 0x71E968
    // Get static field: static private System.Action OnBeaconLocationsUpdated
    static ::System::Action* _get_OnBeaconLocationsUpdated();
    // Set static field: static private System.Action OnBeaconLocationsUpdated
    static void _set_OnBeaconLocationsUpdated(::System::Action* value);
    // [DebuggerBrowsableAttribute] Offset: 0x71E9A4
    // Get static field: static private System.Action OnActiveBeaconsUpdated
    static ::System::Action* _get_OnActiveBeaconsUpdated();
    // Set static field: static private System.Action OnActiveBeaconsUpdated
    static void _set_OnActiveBeaconsUpdated(::System::Action* value);
    // System.Void InstallEvents(System.Boolean server)
    // Offset: 0xE3D91C
    void InstallEvents(bool server);
    // public System.Void .ctor()
    // Offset: 0xE3DAE8
    // Implemented from: Steamworks.SteamClientClass`1
    // Base method: System.Void SteamClientClass_1::.ctor()
    // Base method: System.Void SteamClass::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SteamParties* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamParties::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SteamParties*, creationType>()));
    }
    // override System.Void InitializeInterface(System.Boolean server)
    // Offset: 0xE3D888
    // Implemented from: Steamworks.SteamClientClass`1
    // Base method: System.Void SteamClientClass_1::InitializeInterface(System.Boolean server)
    void InitializeInterface(bool server);
  }; // Steamworks.SteamParties
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Steamworks::SteamParties::InstallEvents
// Il2CppName: InstallEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamParties::*)(bool)>(&Steamworks::SteamParties::InstallEvents)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamParties*), "InstallEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamParties::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Steamworks::SteamParties::InitializeInterface
// Il2CppName: InitializeInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamParties::*)(bool)>(&Steamworks::SteamParties::InitializeInterface)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamParties*), "InitializeInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server});
  }
};
