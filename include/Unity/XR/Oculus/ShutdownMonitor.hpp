// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: Unity.XR.Oculus
namespace Unity::XR::Oculus {
  // Forward declaring type: ShutdownMonitor
  class ShutdownMonitor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::XR::Oculus::ShutdownMonitor);
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::Oculus::ShutdownMonitor*, "Unity.XR.Oculus", "ShutdownMonitor");
// Type namespace: Unity.XR.Oculus
namespace Unity::XR::Oculus {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Unity.XR.Oculus.ShutdownMonitor
  // [TokenAttribute] Offset: FFFFFFFF
  class ShutdownMonitor : public ::Il2CppObject {
    public:
    // static System.Void Initialize()
    // Offset: 0x1030204
    static void Initialize();
    // static System.Void Deinitialize()
    // Offset: 0x1030394
    static void Deinitialize();
  }; // Unity.XR.Oculus.ShutdownMonitor
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::XR::Oculus::ShutdownMonitor::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::XR::Oculus::ShutdownMonitor::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::ShutdownMonitor*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::ShutdownMonitor::Deinitialize
// Il2CppName: Deinitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Unity::XR::Oculus::ShutdownMonitor::Deinitialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::ShutdownMonitor*), "Deinitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
