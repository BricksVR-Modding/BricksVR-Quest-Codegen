// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BrickRenderQueueSorter
  class BrickRenderQueueSorter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BrickRenderQueueSorter);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BrickRenderQueueSorter*, "", "BrickRenderQueueSorter");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BrickRenderQueueSorter
  // [TokenAttribute] Offset: FFFFFFFF
  class BrickRenderQueueSorter : public ::Il2CppObject {
    public:
    // Get static field: static private System.Int32 nextRenderQueue
    static int _get_nextRenderQueue();
    // Set static field: static private System.Int32 nextRenderQueue
    static void _set_nextRenderQueue(int value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Material> _meshToMatMap
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::UnityEngine::Material*>* _get__meshToMatMap();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Material> _meshToMatMap
    static void _set__meshToMatMap(::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::UnityEngine::Material*>* value);
    // static private System.Void .cctor()
    // Offset: 0x10D98F8
    static void _cctor();
    // static public UnityEngine.Material SortedMaterialFromMesh(UnityEngine.Mesh mesh, UnityEngine.Material sharedMaterial)
    // Offset: 0x10CC694
    static ::UnityEngine::Material* SortedMaterialFromMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Material* sharedMaterial);
    // static private UnityEngine.Material GenerateMaterialForMesh(UnityEngine.Mesh mesh, UnityEngine.Material sharedMaterial)
    // Offset: 0x10D980C
    static ::UnityEngine::Material* GenerateMaterialForMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Material* sharedMaterial);
  }; // BrickRenderQueueSorter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BrickRenderQueueSorter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::BrickRenderQueueSorter::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickRenderQueueSorter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickRenderQueueSorter::SortedMaterialFromMesh
// Il2CppName: SortedMaterialFromMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)(::UnityEngine::Mesh*, ::UnityEngine::Material*)>(&GlobalNamespace::BrickRenderQueueSorter::SortedMaterialFromMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* sharedMaterial = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickRenderQueueSorter*), "SortedMaterialFromMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, sharedMaterial});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BrickRenderQueueSorter::GenerateMaterialForMesh
// Il2CppName: GenerateMaterialForMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)(::UnityEngine::Mesh*, ::UnityEngine::Material*)>(&GlobalNamespace::BrickRenderQueueSorter::GenerateMaterialForMesh)> {
  static const MethodInfo* get() {
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* sharedMaterial = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BrickRenderQueueSorter*), "GenerateMaterialForMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mesh, sharedMaterial});
  }
};
