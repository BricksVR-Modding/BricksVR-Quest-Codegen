// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: RoomOwnershipSync
  class RoomOwnershipSync;
}
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeAvatarManager
  class RealtimeAvatarManager;
  // Forward declaring type: RealtimeAvatar
  class RealtimeAvatar;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PlayerMenuManager
  class PlayerMenuManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PlayerMenuManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PlayerMenuManager*, "", "PlayerMenuManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: PlayerMenuManager
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerMenuManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::PlayerMenuManager::$$c
    class $$c;
    public:
    // public Normal.Realtime.RealtimeAvatarManager avatarManager
    // Size: 0x8
    // Offset: 0x18
    ::Normal::Realtime::RealtimeAvatarManager* avatarManager;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::RealtimeAvatarManager*) == 0x8);
    // public UnityEngine.GameObject playerEntryPrefab
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* playerEntryPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public RoomOwnershipSync ownershipSync
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::RoomOwnershipSync* ownershipSync;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::RoomOwnershipSync*) == 0x8);
    // public System.Collections.Generic.List`1<Normal.Realtime.RealtimeAvatar> users
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeAvatar*>* users;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeAvatar*>*) == 0x8);
    // public UnityEngine.GameObject listParent
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* listParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Transform _listParentTransform
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Transform* listParentTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public Normal.Realtime.RealtimeAvatarManager avatarManager
    [[deprecated]] ::Normal::Realtime::RealtimeAvatarManager*& dyn_avatarManager();
    // Get instance field reference: public UnityEngine.GameObject playerEntryPrefab
    [[deprecated]] ::UnityEngine::GameObject*& dyn_playerEntryPrefab();
    // Get instance field reference: public RoomOwnershipSync ownershipSync
    [[deprecated]] ::GlobalNamespace::RoomOwnershipSync*& dyn_ownershipSync();
    // Get instance field reference: public System.Collections.Generic.List`1<Normal.Realtime.RealtimeAvatar> users
    [[deprecated]] ::System::Collections::Generic::List_1<::Normal::Realtime::RealtimeAvatar*>*& dyn_users();
    // Get instance field reference: public UnityEngine.GameObject listParent
    [[deprecated]] ::UnityEngine::GameObject*& dyn_listParent();
    // Get instance field reference: private UnityEngine.Transform _listParentTransform
    [[deprecated]] ::UnityEngine::Transform*& dyn__listParentTransform();
    // private System.Void Awake()
    // Offset: 0x67AE40
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x67AF40
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x67AE80
    void OnDisable();
    // private System.Void RefreshPlayerList()
    // Offset: 0x67B2F0
    void RefreshPlayerList();
    // private System.Void RepopulateUserList()
    // Offset: 0x67B450
    void RepopulateUserList();
    // private System.Void RebuildUI()
    // Offset: 0x67B010
    void RebuildUI();
    // private System.Void UserJoined(Normal.Realtime.RealtimeAvatarManager _, Normal.Realtime.RealtimeAvatar avatar, System.Boolean isLocalAvatar)
    // Offset: 0x67B5A0
    void UserJoined(::Normal::Realtime::RealtimeAvatarManager* _, ::Normal::Realtime::RealtimeAvatar* avatar, bool isLocalAvatar);
    // private System.Void UserQuit(Normal.Realtime.RealtimeAvatarManager _, Normal.Realtime.RealtimeAvatar avatar, System.Boolean isLocalAvatar)
    // Offset: 0x67B5A0
    void UserQuit(::Normal::Realtime::RealtimeAvatarManager* _, ::Normal::Realtime::RealtimeAvatar* avatar, bool isLocalAvatar);
    // public System.Void .ctor()
    // Offset: 0x67B5B0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerMenuManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMenuManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerMenuManager*, creationType>()));
    }
  }; // PlayerMenuManager
  #pragma pack(pop)
  static check_size<sizeof(PlayerMenuManager), 64 + sizeof(::UnityEngine::Transform*)> __GlobalNamespace_PlayerMenuManagerSizeCheck;
  static_assert(sizeof(PlayerMenuManager) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)()>(&GlobalNamespace::PlayerMenuManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)()>(&GlobalNamespace::PlayerMenuManager::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)()>(&GlobalNamespace::PlayerMenuManager::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::RefreshPlayerList
// Il2CppName: RefreshPlayerList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)()>(&GlobalNamespace::PlayerMenuManager::RefreshPlayerList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "RefreshPlayerList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::RepopulateUserList
// Il2CppName: RepopulateUserList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)()>(&GlobalNamespace::PlayerMenuManager::RepopulateUserList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "RepopulateUserList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::RebuildUI
// Il2CppName: RebuildUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)()>(&GlobalNamespace::PlayerMenuManager::RebuildUI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "RebuildUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::UserJoined
// Il2CppName: UserJoined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)(::Normal::Realtime::RealtimeAvatarManager*, ::Normal::Realtime::RealtimeAvatar*, bool)>(&GlobalNamespace::PlayerMenuManager::UserJoined)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeAvatarManager")->byval_arg;
    static auto* avatar = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeAvatar")->byval_arg;
    static auto* isLocalAvatar = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "UserJoined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_, avatar, isLocalAvatar});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::UserQuit
// Il2CppName: UserQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerMenuManager::*)(::Normal::Realtime::RealtimeAvatarManager*, ::Normal::Realtime::RealtimeAvatar*, bool)>(&GlobalNamespace::PlayerMenuManager::UserQuit)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeAvatarManager")->byval_arg;
    static auto* avatar = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeAvatar")->byval_arg;
    static auto* isLocalAvatar = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerMenuManager*), "UserQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_, avatar, isLocalAvatar});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlayerMenuManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
