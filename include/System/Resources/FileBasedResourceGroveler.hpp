// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Resources.IResourceGroveler
#include "System/Resources/IResourceGroveler.hpp"
// Including type: System.Resources.ResourceManager
#include "System/Resources/ResourceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Resources
namespace System::Resources {
  // Forward declaring type: ResourceSet
  class ResourceSet;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: StackCrawlMark
  struct StackCrawlMark;
}
// Completed forward declares
// Type namespace: System.Resources
namespace System::Resources {
  // Forward declaring type: FileBasedResourceGroveler
  class FileBasedResourceGroveler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Resources::FileBasedResourceGroveler);
DEFINE_IL2CPP_ARG_TYPE(::System::Resources::FileBasedResourceGroveler*, "System.Resources", "FileBasedResourceGroveler");
// Type namespace: System.Resources
namespace System::Resources {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Resources.FileBasedResourceGroveler
  // [TokenAttribute] Offset: FFFFFFFF
  class FileBasedResourceGroveler : public ::Il2CppObject/*, public ::System::Resources::IResourceGroveler*/ {
    public:
    public:
    // private System.Resources.ResourceManager/System.Resources.ResourceManagerMediator _mediator
    // Size: 0x8
    // Offset: 0x10
    ::System::Resources::ResourceManager::ResourceManagerMediator* mediator;
    // Field size check
    static_assert(sizeof(::System::Resources::ResourceManager::ResourceManagerMediator*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Resources::IResourceGroveler
    operator ::System::Resources::IResourceGroveler() noexcept {
      return *reinterpret_cast<::System::Resources::IResourceGroveler*>(this);
    }
    // Creating conversion operator: operator ::System::Resources::ResourceManager::ResourceManagerMediator*
    constexpr operator ::System::Resources::ResourceManager::ResourceManagerMediator*() const noexcept {
      return mediator;
    }
    // Get instance field reference: private System.Resources.ResourceManager/System.Resources.ResourceManagerMediator _mediator
    [[deprecated]] ::System::Resources::ResourceManager::ResourceManagerMediator*& dyn__mediator();
    // public System.Void .ctor(System.Resources.ResourceManager/System.Resources.ResourceManagerMediator mediator)
    // Offset: 0x2CC970
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FileBasedResourceGroveler* New_ctor(::System::Resources::ResourceManager::ResourceManagerMediator* mediator) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Resources::FileBasedResourceGroveler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FileBasedResourceGroveler*, creationType>(mediator)));
    }
    // public System.Resources.ResourceSet GrovelForResourceSet(System.Globalization.CultureInfo culture, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet> localResourceSets, System.Boolean tryParents, System.Boolean createIfNotExists, ref System.Threading.StackCrawlMark stackMark)
    // Offset: 0x49FAC0
    ::System::Resources::ResourceSet* GrovelForResourceSet(::System::Globalization::CultureInfo* culture, ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Resources::ResourceSet*>* localResourceSets, bool tryParents, bool createIfNotExists, ByRef<::System::Threading::StackCrawlMark> stackMark);
    // private System.String FindResourceFile(System.Globalization.CultureInfo culture, System.String fileName)
    // Offset: 0x49FA00
    ::StringW FindResourceFile(::System::Globalization::CultureInfo* culture, ::StringW fileName);
    // private System.Resources.ResourceSet CreateResourceSet(System.String file)
    // Offset: 0x49F690
    ::System::Resources::ResourceSet* CreateResourceSet(::StringW file);
  }; // System.Resources.FileBasedResourceGroveler
  #pragma pack(pop)
  static check_size<sizeof(FileBasedResourceGroveler), 16 + sizeof(::System::Resources::ResourceManager::ResourceManagerMediator*)> __System_Resources_FileBasedResourceGrovelerSizeCheck;
  static_assert(sizeof(FileBasedResourceGroveler) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Resources::FileBasedResourceGroveler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Resources::FileBasedResourceGroveler::GrovelForResourceSet
// Il2CppName: GrovelForResourceSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Resources::ResourceSet* (System::Resources::FileBasedResourceGroveler::*)(::System::Globalization::CultureInfo*, ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Resources::ResourceSet*>*, bool, bool, ByRef<::System::Threading::StackCrawlMark>)>(&System::Resources::FileBasedResourceGroveler::GrovelForResourceSet)> {
  static const MethodInfo* get() {
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    static auto* localResourceSets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System.Resources", "ResourceSet")})->byval_arg;
    static auto* tryParents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* createIfNotExists = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* stackMark = &::il2cpp_utils::GetClassFromName("System.Threading", "StackCrawlMark")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Resources::FileBasedResourceGroveler*), "GrovelForResourceSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{culture, localResourceSets, tryParents, createIfNotExists, stackMark});
  }
};
// Writing MetadataGetter for method: System::Resources::FileBasedResourceGroveler::FindResourceFile
// Il2CppName: FindResourceFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Resources::FileBasedResourceGroveler::*)(::System::Globalization::CultureInfo*, ::StringW)>(&System::Resources::FileBasedResourceGroveler::FindResourceFile)> {
  static const MethodInfo* get() {
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Resources::FileBasedResourceGroveler*), "FindResourceFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{culture, fileName});
  }
};
// Writing MetadataGetter for method: System::Resources::FileBasedResourceGroveler::CreateResourceSet
// Il2CppName: CreateResourceSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Resources::ResourceSet* (System::Resources::FileBasedResourceGroveler::*)(::StringW)>(&System::Resources::FileBasedResourceGroveler::CreateResourceSet)> {
  static const MethodInfo* get() {
    static auto* file = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Resources::FileBasedResourceGroveler*), "CreateResourceSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{file});
  }
};
