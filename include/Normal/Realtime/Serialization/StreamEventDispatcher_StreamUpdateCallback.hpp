// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.Serialization.StreamEventDispatcher
#include "Normal/Realtime/Serialization/StreamEventDispatcher.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*, "Normal.Realtime.Serialization", "StreamEventDispatcher/StreamUpdateCallback");
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class StreamEventDispatcher::StreamUpdateCallback : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0xA6F96C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StreamEventDispatcher::StreamUpdateCallback* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StreamEventDispatcher::StreamUpdateCallback*, creationType>(object, method)));
    }
    // public System.Void Invoke(System.UInt32 updateID)
    // Offset: 0xA6F69C
    void Invoke(uint updateID);
    // public System.IAsyncResult BeginInvoke(System.UInt32 updateID, System.AsyncCallback callback, System.Object object)
    // Offset: 0xA6F97C
    ::System::IAsyncResult* BeginInvoke(uint updateID, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Void EndInvoke(System.IAsyncResult result)
    // Offset: 0xA6FA08
    void EndInvoke(::System::IAsyncResult* result);
  }; // Normal.Realtime.Serialization.StreamEventDispatcher/Normal.Realtime.Serialization.StreamUpdateCallback
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::*)(uint)>(&Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::Invoke)> {
  static const MethodInfo* get() {
    static auto* updateID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::*)(uint, ::System::AsyncCallback*, ::Il2CppObject*)>(&Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* updateID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateID, callback, object});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::*)(::System::IAsyncResult*)>(&Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::StreamEventDispatcher::StreamUpdateCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
