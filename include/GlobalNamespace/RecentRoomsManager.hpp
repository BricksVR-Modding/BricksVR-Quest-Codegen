// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: UserSettings
  class UserSettings;
  // Forward declaring type: NormalSessionManager
  class NormalSessionManager;
  // Forward declaring type: PagedScroll
  class PagedScroll;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: TextInfo
  class TextInfo;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: RecentRoomsManager
  class RecentRoomsManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::RecentRoomsManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::RecentRoomsManager*, "", "RecentRoomsManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: RecentRoomsManager
  // [TokenAttribute] Offset: FFFFFFFF
  class RecentRoomsManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_0
    class $$c__DisplayClass17_0;
    // Nested type: ::GlobalNamespace::RecentRoomsManager::$$c__DisplayClass17_1
    class $$c__DisplayClass17_1;
    // Nested type: ::GlobalNamespace::RecentRoomsManager::$LoadRoomNames$d__19
    class $LoadRoomNames$d__19;
    // Nested type: ::GlobalNamespace::RecentRoomsManager::$LoadRoomName$d__20
    class $LoadRoomName$d__20;
    public:
    // public UserSettings userSettings
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::UserSettings* userSettings;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::UserSettings*) == 0x8);
    // public NormalSessionManager normalSessionManager
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::NormalSessionManager* normalSessionManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NormalSessionManager*) == 0x8);
    // public UnityEngine.GameObject noRecentRoomsObject
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* noRecentRoomsObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject recentRoomsObject
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* recentRoomsObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject recentRoomPrefab
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* recentRoomPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject loadingPage
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* loadingPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean _initializedRecentRoomsList
    // Size: 0x1
    // Offset: 0x48
    bool initializedRecentRoomsList;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: initializedRecentRoomsList and: textInfo
    char __padding6[0x7] = {};
    // private System.Globalization.TextInfo _textInfo
    // Size: 0x8
    // Offset: 0x50
    ::System::Globalization::TextInfo* textInfo;
    // Field size check
    static_assert(sizeof(::System::Globalization::TextInfo*) == 0x8);
    // public UnityEngine.GameObject[] recentRooms
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::UnityEngine::GameObject*> recentRooms;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public TMPro.TextMeshProUGUI[] recentRoomsRoomCodes
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<::TMPro::TextMeshProUGUI*> recentRoomsRoomCodes;
    // Field size check
    static_assert(sizeof(::ArrayW<::TMPro::TextMeshProUGUI*>) == 0x8);
    // public TMPro.TextMeshProUGUI[] recentRoomsNames
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::TMPro::TextMeshProUGUI*> recentRoomsNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::TMPro::TextMeshProUGUI*>) == 0x8);
    // public TMPro.TextMeshProUGUI[] recentRoomsBrickCounts
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::TMPro::TextMeshProUGUI*> recentRoomsBrickCounts;
    // Field size check
    static_assert(sizeof(::ArrayW<::TMPro::TextMeshProUGUI*>) == 0x8);
    // public PagedScroll pagedScroll
    // Size: 0x8
    // Offset: 0x78
    ::GlobalNamespace::PagedScroll* pagedScroll;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PagedScroll*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static private System.Int32 NumberOfRoomsToLoad
    static constexpr const int NumberOfRoomsToLoad = 40;
    // Get static field: static private System.Int32 NumberOfRoomsToLoad
    static int _get_NumberOfRoomsToLoad();
    // Set static field: static private System.Int32 NumberOfRoomsToLoad
    static void _set_NumberOfRoomsToLoad(int value);
    // Get instance field reference: public UserSettings userSettings
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings*& dyn_userSettings();
    // Get instance field reference: public NormalSessionManager normalSessionManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NormalSessionManager*& dyn_normalSessionManager();
    // Get instance field reference: public UnityEngine.GameObject noRecentRoomsObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_noRecentRoomsObject();
    // Get instance field reference: public UnityEngine.GameObject recentRoomsObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_recentRoomsObject();
    // Get instance field reference: public UnityEngine.GameObject recentRoomPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_recentRoomPrefab();
    // Get instance field reference: public UnityEngine.GameObject loadingPage
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_loadingPage();
    // Get instance field reference: private System.Boolean _initializedRecentRoomsList
    [[deprecated("Use field access instead!")]] bool& dyn__initializedRecentRoomsList();
    // Get instance field reference: private System.Globalization.TextInfo _textInfo
    [[deprecated("Use field access instead!")]] ::System::Globalization::TextInfo*& dyn__textInfo();
    // Get instance field reference: public UnityEngine.GameObject[] recentRooms
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_recentRooms();
    // Get instance field reference: public TMPro.TextMeshProUGUI[] recentRoomsRoomCodes
    [[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& dyn_recentRoomsRoomCodes();
    // Get instance field reference: public TMPro.TextMeshProUGUI[] recentRoomsNames
    [[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& dyn_recentRoomsNames();
    // Get instance field reference: public TMPro.TextMeshProUGUI[] recentRoomsBrickCounts
    [[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& dyn_recentRoomsBrickCounts();
    // Get instance field reference: public PagedScroll pagedScroll
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PagedScroll*& dyn_pagedScroll();
    // public System.Void .ctor()
    // Offset: 0x1DDE30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RecentRoomsManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecentRoomsManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RecentRoomsManager*, creationType>()));
    }
    // private System.Void OnEnable()
    // Offset: 0x6C9530
    void OnEnable();
    // private System.Void RenderNoRecentRooms()
    // Offset: 0x6C9660
    void RenderNoRecentRooms();
    // private System.Void RenderRecentRoomsList()
    // Offset: 0x6C96B0
    void RenderRecentRoomsList();
    // private System.Void InitializeRecentRoomsList()
    // Offset: 0x6C8EC0
    void InitializeRecentRoomsList();
    // private System.Void ButtonClicked(System.String roomName)
    // Offset: 0x6C8870
    void ButtonClicked(::StringW roomName);
    // private System.Collections.IEnumerator LoadRoomNames(System.Collections.Generic.List`1<System.ValueTuple`2<System.String,System.ValueTuple`2<TMPro.TextMeshProUGUI,TMPro.TextMeshProUGUI>>> roomNamesToLoad)
    // Offset: 0x6C94A0
    ::System::Collections::IEnumerator* LoadRoomNames(::System::Collections::Generic::List_1<::System::ValueTuple_2<::StringW, ::System::ValueTuple_2<::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*>>>* roomNamesToLoad);
    // private System.Collections.IEnumerator LoadRoomName(System.String roomCode, TMPro.TextMeshProUGUI roomNameText, TMPro.TextMeshProUGUI brickCountLabel)
    // Offset: 0x6C93E0
    ::System::Collections::IEnumerator* LoadRoomName(::StringW roomCode, ::TMPro::TextMeshProUGUI* roomNameText, ::TMPro::TextMeshProUGUI* brickCountLabel);
    // private System.String BrickStringFromResponse(System.String brickCountResponse)
    // Offset: 0x6C8790
    ::StringW BrickStringFromResponse(::StringW brickCountResponse);
    // private System.String TitleCase(System.String roomName)
    // Offset: 0x6C9700
    ::StringW TitleCase(::StringW roomName);
    // private System.String FormatRoomNameAnyLenNoMono(System.String roomName)
    // Offset: 0x6C88D0
    ::StringW FormatRoomNameAnyLenNoMono(::StringW roomName);
  }; // RecentRoomsManager
  #pragma pack(pop)
  static check_size<sizeof(RecentRoomsManager), 120 + sizeof(::GlobalNamespace::PagedScroll*)> __GlobalNamespace_RecentRoomsManagerSizeCheck;
  static_assert(sizeof(RecentRoomsManager) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RecentRoomsManager::*)()>(&GlobalNamespace::RecentRoomsManager::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::RenderNoRecentRooms
// Il2CppName: RenderNoRecentRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RecentRoomsManager::*)()>(&GlobalNamespace::RecentRoomsManager::RenderNoRecentRooms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "RenderNoRecentRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::RenderRecentRoomsList
// Il2CppName: RenderRecentRoomsList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RecentRoomsManager::*)()>(&GlobalNamespace::RecentRoomsManager::RenderRecentRoomsList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "RenderRecentRoomsList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::InitializeRecentRoomsList
// Il2CppName: InitializeRecentRoomsList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RecentRoomsManager::*)()>(&GlobalNamespace::RecentRoomsManager::InitializeRecentRoomsList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "InitializeRecentRoomsList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::ButtonClicked
// Il2CppName: ButtonClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::RecentRoomsManager::*)(::StringW)>(&GlobalNamespace::RecentRoomsManager::ButtonClicked)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "ButtonClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::LoadRoomNames
// Il2CppName: LoadRoomNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::RecentRoomsManager::*)(::System::Collections::Generic::List_1<::System::ValueTuple_2<::StringW, ::System::ValueTuple_2<::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*>>>*)>(&GlobalNamespace::RecentRoomsManager::LoadRoomNames)> {
  static const MethodInfo* get() {
    static auto* roomNamesToLoad = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("TMPro", "TextMeshProUGUI"), ::il2cpp_utils::GetClassFromName("TMPro", "TextMeshProUGUI")})})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "LoadRoomNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomNamesToLoad});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::LoadRoomName
// Il2CppName: LoadRoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::RecentRoomsManager::*)(::StringW, ::TMPro::TextMeshProUGUI*, ::TMPro::TextMeshProUGUI*)>(&GlobalNamespace::RecentRoomsManager::LoadRoomName)> {
  static const MethodInfo* get() {
    static auto* roomCode = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* roomNameText = &::il2cpp_utils::GetClassFromName("TMPro", "TextMeshProUGUI")->byval_arg;
    static auto* brickCountLabel = &::il2cpp_utils::GetClassFromName("TMPro", "TextMeshProUGUI")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "LoadRoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomCode, roomNameText, brickCountLabel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::BrickStringFromResponse
// Il2CppName: BrickStringFromResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::RecentRoomsManager::*)(::StringW)>(&GlobalNamespace::RecentRoomsManager::BrickStringFromResponse)> {
  static const MethodInfo* get() {
    static auto* brickCountResponse = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "BrickStringFromResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{brickCountResponse});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::TitleCase
// Il2CppName: TitleCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::RecentRoomsManager::*)(::StringW)>(&GlobalNamespace::RecentRoomsManager::TitleCase)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "TitleCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::RecentRoomsManager::FormatRoomNameAnyLenNoMono
// Il2CppName: FormatRoomNameAnyLenNoMono
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::RecentRoomsManager::*)(::StringW)>(&GlobalNamespace::RecentRoomsManager::FormatRoomNameAnyLenNoMono)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::RecentRoomsManager*), "FormatRoomNameAnyLenNoMono", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
