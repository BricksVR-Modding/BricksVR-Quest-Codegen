// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: TMPro
namespace TMPro {
  // Forward declaring type: ITextPreprocessor
  class ITextPreprocessor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::TMPro::ITextPreprocessor);
DEFINE_IL2CPP_ARG_TYPE(::TMPro::ITextPreprocessor*, "TMPro", "ITextPreprocessor");
// Type namespace: TMPro
namespace TMPro {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: TMPro.ITextPreprocessor
  // [TokenAttribute] Offset: FFFFFFFF
  class ITextPreprocessor {
    public:
    // public System.String PreprocessText(System.String text)
    // Offset: 0xFFFFFFFF
    ::StringW PreprocessText(::StringW text);
  }; // TMPro.ITextPreprocessor
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: TMPro::ITextPreprocessor::PreprocessText
// Il2CppName: PreprocessText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (TMPro::ITextPreprocessor::*)(::StringW)>(&TMPro::ITextPreprocessor::PreprocessText)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(TMPro::ITextPreprocessor*), "PreprocessText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
