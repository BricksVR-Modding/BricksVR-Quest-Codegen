// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeWireTypeAttribute
  class RealtimeWireTypeAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::RealtimeWireTypeAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::RealtimeWireTypeAttribute*, "Normal.Realtime", "RealtimeWireTypeAttribute");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.RealtimeWireTypeAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FF3E0
  class RealtimeWireTypeAttribute : public ::System::Attribute {
    public:
    public:
    // public readonly Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType type
    // Size: 0x1
    // Offset: 0x10
    ::Normal::Realtime::Serialization::Serialization::WireType type;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::Serialization::Serialization::WireType) == 0x1);
    public:
    // Creating conversion operator: operator ::Normal::Realtime::Serialization::Serialization::WireType
    constexpr operator ::Normal::Realtime::Serialization::Serialization::WireType() const noexcept {
      return type;
    }
    // Get instance field reference: public readonly Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType type
    [[deprecated("Use field access instead!")]] ::Normal::Realtime::Serialization::Serialization::WireType& dyn_type();
    // public System.Void .ctor(Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType type)
    // Offset: 0x49DDB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RealtimeWireTypeAttribute* New_ctor(::Normal::Realtime::Serialization::Serialization::WireType type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::RealtimeWireTypeAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RealtimeWireTypeAttribute*, creationType>(type)));
    }
  }; // Normal.Realtime.RealtimeWireTypeAttribute
  #pragma pack(pop)
  static check_size<sizeof(RealtimeWireTypeAttribute), 16 + sizeof(::Normal::Realtime::Serialization::Serialization::WireType)> __Normal_Realtime_RealtimeWireTypeAttributeSizeCheck;
  static_assert(sizeof(RealtimeWireTypeAttribute) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::RealtimeWireTypeAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
