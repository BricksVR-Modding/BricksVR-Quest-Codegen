// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingImageBase
#include "Sigtrap/VrTunnellingPro/TunnellingImageBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CameraEvent
  struct CameraEvent;
}
// Completed forward declares
// Type namespace: Sigtrap.VrTunnellingPro
namespace Sigtrap::VrTunnellingPro {
  // Forward declaring type: Tunnelling
  class Tunnelling;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Sigtrap::VrTunnellingPro::Tunnelling);
DEFINE_IL2CPP_ARG_TYPE(::Sigtrap::VrTunnellingPro::Tunnelling*, "Sigtrap.VrTunnellingPro", "Tunnelling");
// Type namespace: Sigtrap.VrTunnellingPro
namespace Sigtrap::VrTunnellingPro {
  // Size: 0x338
  #pragma pack(push, 1)
  // Autogenerated type: Sigtrap.VrTunnellingPro.Tunnelling
  // [TokenAttribute] Offset: FFFFFFFF
  class Tunnelling : public ::Sigtrap::VrTunnellingPro::TunnellingImageBase {
    public:
    // private System.Void OnRenderImage(UnityEngine.RenderTexture src, UnityEngine.RenderTexture dest)
    // Offset: 0x10BAA34
    void OnRenderImage(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest);
    // protected override UnityEngine.Rendering.CameraEvent get__maskCmdEvt()
    // Offset: 0x10BAA2C
    // Implemented from: Sigtrap.VrTunnellingPro.TunnellingImageBase
    // Base method: UnityEngine.Rendering.CameraEvent TunnellingImageBase::get__maskCmdEvt()
    ::UnityEngine::Rendering::CameraEvent get__maskCmdEvt();
    // public System.Void .ctor()
    // Offset: 0x10BAF24
    // Implemented from: Sigtrap.VrTunnellingPro.TunnellingImageBase
    // Base method: System.Void TunnellingImageBase::.ctor()
    // Base method: System.Void TunnellingBase::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Tunnelling* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Tunnelling::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Tunnelling*, creationType>()));
    }
  }; // Sigtrap.VrTunnellingPro.Tunnelling
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Sigtrap::VrTunnellingPro::Tunnelling::OnRenderImage
// Il2CppName: OnRenderImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sigtrap::VrTunnellingPro::Tunnelling::*)(::UnityEngine::RenderTexture*, ::UnityEngine::RenderTexture*)>(&Sigtrap::VrTunnellingPro::Tunnelling::OnRenderImage)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Sigtrap::VrTunnellingPro::Tunnelling*), "OnRenderImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, dest});
  }
};
// Writing MetadataGetter for method: Sigtrap::VrTunnellingPro::Tunnelling::get__maskCmdEvt
// Il2CppName: get__maskCmdEvt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rendering::CameraEvent (Sigtrap::VrTunnellingPro::Tunnelling::*)()>(&Sigtrap::VrTunnellingPro::Tunnelling::get__maskCmdEvt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sigtrap::VrTunnellingPro::Tunnelling*), "get__maskCmdEvt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sigtrap::VrTunnellingPro::Tunnelling::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
