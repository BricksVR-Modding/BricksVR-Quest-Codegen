// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.RealtimeComponent`1
#include "Normal/Realtime/RealtimeComponent_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: InitialTransformModel
  class InitialTransformModel;
  // Forward declaring type: NormalSessionManager
  class NormalSessionManager;
  // Forward declaring type: UserSettings
  class UserSettings;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: InitialTransformSync
  class InitialTransformSync;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::InitialTransformSync);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::InitialTransformSync*, "", "InitialTransformSync");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: InitialTransformSync
  // [TokenAttribute] Offset: FFFFFFFF
  class InitialTransformSync : public ::Normal::Realtime::RealtimeComponent_1<::GlobalNamespace::InitialTransformModel*> {
    public:
    public:
    // private NormalSessionManager _normalSessionManager
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::NormalSessionManager* normalSessionManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NormalSessionManager*) == 0x8);
    // private UserSettings _userSettings
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::UserSettings* userSettings;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::UserSettings*) == 0x8);
    public:
    // Get instance field reference: private NormalSessionManager _normalSessionManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NormalSessionManager*& dyn__normalSessionManager();
    // Get instance field reference: private UserSettings _userSettings
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::UserSettings*& dyn__userSettings();
    // public System.Void .ctor()
    // Offset: 0x6BAC10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InitialTransformSync* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InitialTransformSync*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x6BA390
    void Awake();
    // private System.Void PositionSet()
    // Offset: 0x6BA720
    void PositionSet();
    // private System.Void RotationSet()
    // Offset: 0x6BA920
    void RotationSet();
    // protected System.Void OnRealtimeModelReplaced(InitialTransformModel previousModel, InitialTransformModel currentModel)
    // Offset: 0x6BA410
    void OnRealtimeModelReplaced(::GlobalNamespace::InitialTransformModel* previousModel, ::GlobalNamespace::InitialTransformModel* currentModel);
    // private System.Void PositionDidChange(InitialTransformModel model, UnityEngine.Vector3 value)
    // Offset: 0x6BA710
    void PositionDidChange(::GlobalNamespace::InitialTransformModel* model, ::UnityEngine::Vector3 value);
    // private System.Void RotationDidChange(InitialTransformModel model, UnityEngine.Quaternion value)
    // Offset: 0x6BA910
    void RotationDidChange(::GlobalNamespace::InitialTransformModel* model, ::UnityEngine::Quaternion value);
    // public System.Void SetPosition(UnityEngine.Vector3 pos)
    // Offset: 0x6BA9C0
    void SetPosition(::UnityEngine::Vector3 pos);
    // public System.Void SetRotation(UnityEngine.Quaternion rot)
    // Offset: 0x6BAB00
    void SetRotation(::UnityEngine::Quaternion rot);
  }; // InitialTransformSync
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)()>(&GlobalNamespace::InitialTransformSync::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::PositionSet
// Il2CppName: PositionSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)()>(&GlobalNamespace::InitialTransformSync::PositionSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "PositionSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::RotationSet
// Il2CppName: RotationSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)()>(&GlobalNamespace::InitialTransformSync::RotationSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "RotationSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::OnRealtimeModelReplaced
// Il2CppName: OnRealtimeModelReplaced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)(::GlobalNamespace::InitialTransformModel*, ::GlobalNamespace::InitialTransformModel*)>(&GlobalNamespace::InitialTransformSync::OnRealtimeModelReplaced)> {
  static const MethodInfo* get() {
    static auto* previousModel = &::il2cpp_utils::GetClassFromName("", "InitialTransformModel")->byval_arg;
    static auto* currentModel = &::il2cpp_utils::GetClassFromName("", "InitialTransformModel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "OnRealtimeModelReplaced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{previousModel, currentModel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::PositionDidChange
// Il2CppName: PositionDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)(::GlobalNamespace::InitialTransformModel*, ::UnityEngine::Vector3)>(&GlobalNamespace::InitialTransformSync::PositionDidChange)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("", "InitialTransformModel")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "PositionDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model, value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::RotationDidChange
// Il2CppName: RotationDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)(::GlobalNamespace::InitialTransformModel*, ::UnityEngine::Quaternion)>(&GlobalNamespace::InitialTransformSync::RotationDidChange)> {
  static const MethodInfo* get() {
    static auto* model = &::il2cpp_utils::GetClassFromName("", "InitialTransformModel")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "RotationDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{model, value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::SetPosition
// Il2CppName: SetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)(::UnityEngine::Vector3)>(&GlobalNamespace::InitialTransformSync::SetPosition)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "SetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::InitialTransformSync::SetRotation
// Il2CppName: SetRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::InitialTransformSync::*)(::UnityEngine::Quaternion)>(&GlobalNamespace::InitialTransformSync::SetRotation)> {
  static const MethodInfo* get() {
    static auto* rot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::InitialTransformSync*), "SetRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rot});
  }
};
