// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: ReliableProperty`1<T>
  template<typename T>
  class ReliableProperty_1;
}
// Forward declaring namespace: Normal::Realtime::Serialization
namespace Normal::Realtime::Serialization {
  // Skipping declaration: StreamContext because it is already included!
  // Forward declaring type: WriteStream
  class WriteStream;
  // Forward declaring type: ReadStream
  class ReadStream;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AvatarNicknameModel
  class AvatarNicknameModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AvatarNicknameModel);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AvatarNicknameModel*, "", "AvatarNicknameModel");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x110
  #pragma pack(push, 1)
  // Autogenerated type: AvatarNicknameModel
  // [TokenAttribute] Offset: FFFFFFFF
  // [RealtimeModelAttribute] Offset: D4660
  class AvatarNicknameModel : public ::Normal::Realtime::RealtimeModel {
    public:
    // Writing base type padding for base size: 0x8C to desired offset: 0x90
    char ___base_padding[0x4] = {};
    // Nested type: ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<T>
    template<typename T>
    class PropertyChangedHandler_1;
    // Nested type: ::GlobalNamespace::AvatarNicknameModel::PropertyID
    struct PropertyID;
    public:
    // [RealtimePropertyAttribute] Offset: 0xF03F0
    // private System.String _nickname
    // Size: 0x8
    // Offset: 0x90
    ::StringW nickname;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [RealtimePropertyAttribute] Offset: 0xF0420
    // private System.String _shortId
    // Size: 0x8
    // Offset: 0x98
    ::StringW shortId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [RealtimePropertyAttribute] Offset: 0xF0480
    // private System.Int32 _primaryAvatarColor
    // Size: 0x4
    // Offset: 0xA0
    int primaryAvatarColor;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RealtimePropertyAttribute] Offset: 0xF04B0
    // private System.Int32 _secondaryAvatarColor
    // Size: 0x4
    // Offset: 0xA4
    int secondaryAvatarColor;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RealtimePropertyAttribute] Offset: 0xF04E0
    // private System.Int32 _avatarEyes
    // Size: 0x4
    // Offset: 0xA8
    int avatarEyes;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RealtimePropertyAttribute] Offset: 0xF0510
    // private System.Int32 _avatarMouth
    // Size: 0x4
    // Offset: 0xAC
    int avatarMouth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private AvatarNicknameModel/PropertyChangedHandler`1<System.String> nicknameDidChange
    // Size: 0x8
    // Offset: 0xB0
    ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>* nicknameDidChange;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*) == 0x8);
    // private AvatarNicknameModel/PropertyChangedHandler`1<System.String> shortIdDidChange
    // Size: 0x8
    // Offset: 0xB8
    ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>* shortIdDidChange;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*) == 0x8);
    // private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> primaryAvatarColorDidChange
    // Size: 0x8
    // Offset: 0xC0
    ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* primaryAvatarColorDidChange;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*) == 0x8);
    // private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> secondaryAvatarColorDidChange
    // Size: 0x8
    // Offset: 0xC8
    ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* secondaryAvatarColorDidChange;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*) == 0x8);
    // private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> avatarEyesDidChange
    // Size: 0x8
    // Offset: 0xD0
    ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* avatarEyesDidChange;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*) == 0x8);
    // private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> avatarMouthDidChange
    // Size: 0x8
    // Offset: 0xD8
    ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* avatarMouthDidChange;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*) == 0x8);
    // private Normal.Realtime.ReliableProperty`1<System.String> _nicknameProperty
    // Size: 0x8
    // Offset: 0xE0
    ::Normal::Realtime::ReliableProperty_1<::StringW>* nicknameProperty;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::ReliableProperty_1<::StringW>*) == 0x8);
    // private Normal.Realtime.ReliableProperty`1<System.String> _shortIdProperty
    // Size: 0x8
    // Offset: 0xE8
    ::Normal::Realtime::ReliableProperty_1<::StringW>* shortIdProperty;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::ReliableProperty_1<::StringW>*) == 0x8);
    // private Normal.Realtime.ReliableProperty`1<System.Int32> _primaryAvatarColorProperty
    // Size: 0x8
    // Offset: 0xF0
    ::Normal::Realtime::ReliableProperty_1<int>* primaryAvatarColorProperty;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::ReliableProperty_1<int>*) == 0x8);
    // private Normal.Realtime.ReliableProperty`1<System.Int32> _secondaryAvatarColorProperty
    // Size: 0x8
    // Offset: 0xF8
    ::Normal::Realtime::ReliableProperty_1<int>* secondaryAvatarColorProperty;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::ReliableProperty_1<int>*) == 0x8);
    // private Normal.Realtime.ReliableProperty`1<System.Int32> _avatarEyesProperty
    // Size: 0x8
    // Offset: 0x100
    ::Normal::Realtime::ReliableProperty_1<int>* avatarEyesProperty;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::ReliableProperty_1<int>*) == 0x8);
    // private Normal.Realtime.ReliableProperty`1<System.Int32> _avatarMouthProperty
    // Size: 0x8
    // Offset: 0x108
    ::Normal::Realtime::ReliableProperty_1<int>* avatarMouthProperty;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::ReliableProperty_1<int>*) == 0x8);
    public:
    // Get instance field reference: private System.String _nickname
    [[deprecated]] ::StringW& dyn__nickname();
    // Get instance field reference: private System.String _shortId
    [[deprecated]] ::StringW& dyn__shortId();
    // Get instance field reference: private System.Int32 _primaryAvatarColor
    [[deprecated]] int& dyn__primaryAvatarColor();
    // Get instance field reference: private System.Int32 _secondaryAvatarColor
    [[deprecated]] int& dyn__secondaryAvatarColor();
    // Get instance field reference: private System.Int32 _avatarEyes
    [[deprecated]] int& dyn__avatarEyes();
    // Get instance field reference: private System.Int32 _avatarMouth
    [[deprecated]] int& dyn__avatarMouth();
    // Get instance field reference: private AvatarNicknameModel/PropertyChangedHandler`1<System.String> nicknameDidChange
    [[deprecated]] ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*& dyn_nicknameDidChange();
    // Get instance field reference: private AvatarNicknameModel/PropertyChangedHandler`1<System.String> shortIdDidChange
    [[deprecated]] ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*& dyn_shortIdDidChange();
    // Get instance field reference: private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> primaryAvatarColorDidChange
    [[deprecated]] ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*& dyn_primaryAvatarColorDidChange();
    // Get instance field reference: private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> secondaryAvatarColorDidChange
    [[deprecated]] ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*& dyn_secondaryAvatarColorDidChange();
    // Get instance field reference: private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> avatarEyesDidChange
    [[deprecated]] ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*& dyn_avatarEyesDidChange();
    // Get instance field reference: private AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> avatarMouthDidChange
    [[deprecated]] ::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*& dyn_avatarMouthDidChange();
    // Get instance field reference: private Normal.Realtime.ReliableProperty`1<System.String> _nicknameProperty
    [[deprecated]] ::Normal::Realtime::ReliableProperty_1<::StringW>*& dyn__nicknameProperty();
    // Get instance field reference: private Normal.Realtime.ReliableProperty`1<System.String> _shortIdProperty
    [[deprecated]] ::Normal::Realtime::ReliableProperty_1<::StringW>*& dyn__shortIdProperty();
    // Get instance field reference: private Normal.Realtime.ReliableProperty`1<System.Int32> _primaryAvatarColorProperty
    [[deprecated]] ::Normal::Realtime::ReliableProperty_1<int>*& dyn__primaryAvatarColorProperty();
    // Get instance field reference: private Normal.Realtime.ReliableProperty`1<System.Int32> _secondaryAvatarColorProperty
    [[deprecated]] ::Normal::Realtime::ReliableProperty_1<int>*& dyn__secondaryAvatarColorProperty();
    // Get instance field reference: private Normal.Realtime.ReliableProperty`1<System.Int32> _avatarEyesProperty
    [[deprecated]] ::Normal::Realtime::ReliableProperty_1<int>*& dyn__avatarEyesProperty();
    // Get instance field reference: private Normal.Realtime.ReliableProperty`1<System.Int32> _avatarMouthProperty
    [[deprecated]] ::Normal::Realtime::ReliableProperty_1<int>*& dyn__avatarMouthProperty();
    // public System.String get_nickname()
    // Offset: 0x6DFE30
    ::StringW get_nickname();
    // public System.Void set_nickname(System.String value)
    // Offset: 0x6E03F0
    void set_nickname(::StringW value);
    // public System.String get_shortId()
    // Offset: 0x6DFEF0
    ::StringW get_shortId();
    // public System.Void set_shortId(System.String value)
    // Offset: 0x6E0580
    void set_shortId(::StringW value);
    // public System.Int32 get_primaryAvatarColor()
    // Offset: 0x6DFE70
    int get_primaryAvatarColor();
    // public System.Void set_primaryAvatarColor(System.Int32 value)
    // Offset: 0x6E0480
    void set_primaryAvatarColor(int value);
    // public System.Int32 get_secondaryAvatarColor()
    // Offset: 0x6DFEB0
    int get_secondaryAvatarColor();
    // public System.Void set_secondaryAvatarColor(System.Int32 value)
    // Offset: 0x6E0500
    void set_secondaryAvatarColor(int value);
    // public System.Int32 get_avatarEyes()
    // Offset: 0x6DFDB0
    int get_avatarEyes();
    // public System.Void set_avatarEyes(System.Int32 value)
    // Offset: 0x6E02F0
    void set_avatarEyes(int value);
    // public System.Int32 get_avatarMouth()
    // Offset: 0x6DFDF0
    int get_avatarMouth();
    // public System.Void set_avatarMouth(System.Int32 value)
    // Offset: 0x6E0370
    void set_avatarMouth(int value);
    // public System.Void add_nicknameDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.String> value)
    // Offset: 0x6DFB30
    void add_nicknameDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>* value);
    // public System.Void remove_nicknameDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.String> value)
    // Offset: 0x6E0070
    void remove_nicknameDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>* value);
    // public System.Void add_shortIdDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.String> value)
    // Offset: 0x6DFD10
    void add_shortIdDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>* value);
    // public System.Void remove_shortIdDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.String> value)
    // Offset: 0x6E0250
    void remove_shortIdDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>* value);
    // public System.Void add_primaryAvatarColorDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6DFBD0
    void add_primaryAvatarColorDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // public System.Void remove_primaryAvatarColorDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6E0110
    void remove_primaryAvatarColorDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // public System.Void add_secondaryAvatarColorDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6DFC70
    void add_secondaryAvatarColorDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // public System.Void remove_secondaryAvatarColorDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6E01B0
    void remove_secondaryAvatarColorDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // public System.Void add_avatarEyesDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6DF9F0
    void add_avatarEyesDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // public System.Void remove_avatarEyesDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6DFF30
    void remove_avatarEyesDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // public System.Void add_avatarMouthDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6DFA90
    void add_avatarMouthDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // public System.Void remove_avatarMouthDidChange(AvatarNicknameModel/PropertyChangedHandler`1<System.Int32> value)
    // Offset: 0x6DFFD0
    void remove_avatarMouthDidChange(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>* value);
    // private System.Void FireNicknameDidChange(System.String value)
    // Offset: 0x6DEA50
    void FireNicknameDidChange(::StringW value);
    // private System.Void FireShortIdDidChange(System.String value)
    // Offset: 0x6DEC30
    void FireShortIdDidChange(::StringW value);
    // private System.Void FirePrimaryAvatarColorDidChange(System.Int32 value)
    // Offset: 0x6DEAF0
    void FirePrimaryAvatarColorDidChange(int value);
    // private System.Void FireSecondaryAvatarColorDidChange(System.Int32 value)
    // Offset: 0x6DEB90
    void FireSecondaryAvatarColorDidChange(int value);
    // private System.Void FireAvatarEyesDidChange(System.Int32 value)
    // Offset: 0x6DE910
    void FireAvatarEyesDidChange(int value);
    // private System.Void FireAvatarMouthDidChange(System.Int32 value)
    // Offset: 0x6DE9B0
    void FireAvatarMouthDidChange(int value);
    // private System.Void UpdateBackingFields()
    // Offset: 0x6DF310
    void UpdateBackingFields();
    // public System.Void .ctor()
    // Offset: 0x6DF820
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AvatarNicknameModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarNicknameModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AvatarNicknameModel*, creationType>()));
    }
    // protected override System.Void OnParentReplaced(Normal.Realtime.RealtimeModel previousParent, Normal.Realtime.RealtimeModel currentParent)
    // Offset: 0x6DECD0
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Void RealtimeModel::OnParentReplaced(Normal.Realtime.RealtimeModel previousParent, Normal.Realtime.RealtimeModel currentParent)
    void OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent);
    // protected override System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0x6DF470
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Int32 RealtimeModel::WriteLength(Normal.Realtime.Serialization.StreamContext context)
    int WriteLength(::Normal::Realtime::Serialization::StreamContext context);
    // protected override System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0x6DF620
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Void RealtimeModel::Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
    void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context);
    // protected override System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0x6DEDA0
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Void RealtimeModel::Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
    void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context);
  }; // AvatarNicknameModel
  #pragma pack(pop)
  static check_size<sizeof(AvatarNicknameModel), 264 + sizeof(::Normal::Realtime::ReliableProperty_1<int>*)> __GlobalNamespace_AvatarNicknameModelSizeCheck;
  static_assert(sizeof(AvatarNicknameModel) == 0x110);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::get_nickname
// Il2CppName: get_nickname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::AvatarNicknameModel::*)()>(&GlobalNamespace::AvatarNicknameModel::get_nickname)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "get_nickname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::set_nickname
// Il2CppName: set_nickname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::StringW)>(&GlobalNamespace::AvatarNicknameModel::set_nickname)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "set_nickname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::get_shortId
// Il2CppName: get_shortId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::AvatarNicknameModel::*)()>(&GlobalNamespace::AvatarNicknameModel::get_shortId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "get_shortId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::set_shortId
// Il2CppName: set_shortId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::StringW)>(&GlobalNamespace::AvatarNicknameModel::set_shortId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "set_shortId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::get_primaryAvatarColor
// Il2CppName: get_primaryAvatarColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::AvatarNicknameModel::*)()>(&GlobalNamespace::AvatarNicknameModel::get_primaryAvatarColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "get_primaryAvatarColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::set_primaryAvatarColor
// Il2CppName: set_primaryAvatarColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::set_primaryAvatarColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "set_primaryAvatarColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::get_secondaryAvatarColor
// Il2CppName: get_secondaryAvatarColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::AvatarNicknameModel::*)()>(&GlobalNamespace::AvatarNicknameModel::get_secondaryAvatarColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "get_secondaryAvatarColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::set_secondaryAvatarColor
// Il2CppName: set_secondaryAvatarColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::set_secondaryAvatarColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "set_secondaryAvatarColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::get_avatarEyes
// Il2CppName: get_avatarEyes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::AvatarNicknameModel::*)()>(&GlobalNamespace::AvatarNicknameModel::get_avatarEyes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "get_avatarEyes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::set_avatarEyes
// Il2CppName: set_avatarEyes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::set_avatarEyes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "set_avatarEyes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::get_avatarMouth
// Il2CppName: get_avatarMouth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::AvatarNicknameModel::*)()>(&GlobalNamespace::AvatarNicknameModel::get_avatarMouth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "get_avatarMouth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::set_avatarMouth
// Il2CppName: set_avatarMouth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::set_avatarMouth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "set_avatarMouth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::add_nicknameDidChange
// Il2CppName: add_nicknameDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*)>(&GlobalNamespace::AvatarNicknameModel::add_nicknameDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "add_nicknameDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::remove_nicknameDidChange
// Il2CppName: remove_nicknameDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*)>(&GlobalNamespace::AvatarNicknameModel::remove_nicknameDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "remove_nicknameDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::add_shortIdDidChange
// Il2CppName: add_shortIdDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*)>(&GlobalNamespace::AvatarNicknameModel::add_shortIdDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "add_shortIdDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::remove_shortIdDidChange
// Il2CppName: remove_shortIdDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<::StringW>*)>(&GlobalNamespace::AvatarNicknameModel::remove_shortIdDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "remove_shortIdDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::add_primaryAvatarColorDidChange
// Il2CppName: add_primaryAvatarColorDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::add_primaryAvatarColorDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "add_primaryAvatarColorDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::remove_primaryAvatarColorDidChange
// Il2CppName: remove_primaryAvatarColorDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::remove_primaryAvatarColorDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "remove_primaryAvatarColorDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::add_secondaryAvatarColorDidChange
// Il2CppName: add_secondaryAvatarColorDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::add_secondaryAvatarColorDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "add_secondaryAvatarColorDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::remove_secondaryAvatarColorDidChange
// Il2CppName: remove_secondaryAvatarColorDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::remove_secondaryAvatarColorDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "remove_secondaryAvatarColorDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::add_avatarEyesDidChange
// Il2CppName: add_avatarEyesDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::add_avatarEyesDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "add_avatarEyesDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::remove_avatarEyesDidChange
// Il2CppName: remove_avatarEyesDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::remove_avatarEyesDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "remove_avatarEyesDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::add_avatarMouthDidChange
// Il2CppName: add_avatarMouthDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::add_avatarMouthDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "add_avatarMouthDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::remove_avatarMouthDidChange
// Il2CppName: remove_avatarMouthDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::GlobalNamespace::AvatarNicknameModel::PropertyChangedHandler_1<int>*)>(&GlobalNamespace::AvatarNicknameModel::remove_avatarMouthDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "AvatarNicknameModel/PropertyChangedHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "remove_avatarMouthDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::FireNicknameDidChange
// Il2CppName: FireNicknameDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::StringW)>(&GlobalNamespace::AvatarNicknameModel::FireNicknameDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "FireNicknameDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::FireShortIdDidChange
// Il2CppName: FireShortIdDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::StringW)>(&GlobalNamespace::AvatarNicknameModel::FireShortIdDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "FireShortIdDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::FirePrimaryAvatarColorDidChange
// Il2CppName: FirePrimaryAvatarColorDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::FirePrimaryAvatarColorDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "FirePrimaryAvatarColorDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::FireSecondaryAvatarColorDidChange
// Il2CppName: FireSecondaryAvatarColorDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::FireSecondaryAvatarColorDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "FireSecondaryAvatarColorDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::FireAvatarEyesDidChange
// Il2CppName: FireAvatarEyesDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::FireAvatarEyesDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "FireAvatarEyesDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::FireAvatarMouthDidChange
// Il2CppName: FireAvatarMouthDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(int)>(&GlobalNamespace::AvatarNicknameModel::FireAvatarMouthDidChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "FireAvatarMouthDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::UpdateBackingFields
// Il2CppName: UpdateBackingFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)()>(&GlobalNamespace::AvatarNicknameModel::UpdateBackingFields)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "UpdateBackingFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::OnParentReplaced
// Il2CppName: OnParentReplaced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::Normal::Realtime::RealtimeModel*, ::Normal::Realtime::RealtimeModel*)>(&GlobalNamespace::AvatarNicknameModel::OnParentReplaced)> {
  static const MethodInfo* get() {
    static auto* previousParent = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeModel")->byval_arg;
    static auto* currentParent = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "RealtimeModel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "OnParentReplaced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{previousParent, currentParent});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::WriteLength
// Il2CppName: WriteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::AvatarNicknameModel::*)(::Normal::Realtime::Serialization::StreamContext)>(&GlobalNamespace::AvatarNicknameModel::WriteLength)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("Normal.Realtime.Serialization", "StreamContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "WriteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::Normal::Realtime::Serialization::WriteStream*, ::Normal::Realtime::Serialization::StreamContext)>(&GlobalNamespace::AvatarNicknameModel::Write)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("Normal.Realtime.Serialization", "WriteStream")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("Normal.Realtime.Serialization", "StreamContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, context});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarNicknameModel::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarNicknameModel::*)(::Normal::Realtime::Serialization::ReadStream*, ::Normal::Realtime::Serialization::StreamContext)>(&GlobalNamespace::AvatarNicknameModel::Read)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("Normal.Realtime.Serialization", "ReadStream")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("Normal.Realtime.Serialization", "StreamContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarNicknameModel*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, context});
  }
};
