// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BuildingBrickModel/PropertyID
#include "GlobalNamespace/BuildingBrickModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BuildingBrickModel/PropertyID Attached
::GlobalNamespace::BuildingBrickModel::PropertyID GlobalNamespace::BuildingBrickModel::PropertyID::_get_Attached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_get_Attached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildingBrickModel::PropertyID>("", "BuildingBrickModel/PropertyID", "Attached"));
}
// Autogenerated static field setter
// Set static field: static public BuildingBrickModel/PropertyID Attached
void GlobalNamespace::BuildingBrickModel::PropertyID::_set_Attached(::GlobalNamespace::BuildingBrickModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_set_Attached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildingBrickModel/PropertyID", "Attached", value));
}
// Autogenerated static field getter
// Get static field: static public BuildingBrickModel/PropertyID Uuid
::GlobalNamespace::BuildingBrickModel::PropertyID GlobalNamespace::BuildingBrickModel::PropertyID::_get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_get_Uuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildingBrickModel::PropertyID>("", "BuildingBrickModel/PropertyID", "Uuid"));
}
// Autogenerated static field setter
// Set static field: static public BuildingBrickModel/PropertyID Uuid
void GlobalNamespace::BuildingBrickModel::PropertyID::_set_Uuid(::GlobalNamespace::BuildingBrickModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_set_Uuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildingBrickModel/PropertyID", "Uuid", value));
}
// Autogenerated static field getter
// Get static field: static public BuildingBrickModel/PropertyID BricksAbove
::GlobalNamespace::BuildingBrickModel::PropertyID GlobalNamespace::BuildingBrickModel::PropertyID::_get_BricksAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_get_BricksAbove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildingBrickModel::PropertyID>("", "BuildingBrickModel/PropertyID", "BricksAbove"));
}
// Autogenerated static field setter
// Set static field: static public BuildingBrickModel/PropertyID BricksAbove
void GlobalNamespace::BuildingBrickModel::PropertyID::_set_BricksAbove(::GlobalNamespace::BuildingBrickModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_set_BricksAbove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildingBrickModel/PropertyID", "BricksAbove", value));
}
// Autogenerated static field getter
// Get static field: static public BuildingBrickModel/PropertyID BricksBelow
::GlobalNamespace::BuildingBrickModel::PropertyID GlobalNamespace::BuildingBrickModel::PropertyID::_get_BricksBelow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_get_BricksBelow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildingBrickModel::PropertyID>("", "BuildingBrickModel/PropertyID", "BricksBelow"));
}
// Autogenerated static field setter
// Set static field: static public BuildingBrickModel/PropertyID BricksBelow
void GlobalNamespace::BuildingBrickModel::PropertyID::_set_BricksBelow(::GlobalNamespace::BuildingBrickModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_set_BricksBelow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildingBrickModel/PropertyID", "BricksBelow", value));
}
// Autogenerated static field getter
// Get static field: static public BuildingBrickModel/PropertyID MatId
::GlobalNamespace::BuildingBrickModel::PropertyID GlobalNamespace::BuildingBrickModel::PropertyID::_get_MatId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_get_MatId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildingBrickModel::PropertyID>("", "BuildingBrickModel/PropertyID", "MatId"));
}
// Autogenerated static field setter
// Set static field: static public BuildingBrickModel/PropertyID MatId
void GlobalNamespace::BuildingBrickModel::PropertyID::_set_MatId(::GlobalNamespace::BuildingBrickModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_set_MatId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildingBrickModel/PropertyID", "MatId", value));
}
// Autogenerated static field getter
// Get static field: static public BuildingBrickModel/PropertyID Color
::GlobalNamespace::BuildingBrickModel::PropertyID GlobalNamespace::BuildingBrickModel::PropertyID::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildingBrickModel::PropertyID>("", "BuildingBrickModel/PropertyID", "Color"));
}
// Autogenerated static field setter
// Set static field: static public BuildingBrickModel/PropertyID Color
void GlobalNamespace::BuildingBrickModel::PropertyID::_set_Color(::GlobalNamespace::BuildingBrickModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildingBrickModel/PropertyID", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public BuildingBrickModel/PropertyID UsingNewColors
::GlobalNamespace::BuildingBrickModel::PropertyID GlobalNamespace::BuildingBrickModel::PropertyID::_get_UsingNewColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_get_UsingNewColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildingBrickModel::PropertyID>("", "BuildingBrickModel/PropertyID", "UsingNewColors"));
}
// Autogenerated static field setter
// Set static field: static public BuildingBrickModel/PropertyID UsingNewColors
void GlobalNamespace::BuildingBrickModel::PropertyID::_set_UsingNewColors(::GlobalNamespace::BuildingBrickModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::_set_UsingNewColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildingBrickModel/PropertyID", "UsingNewColors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& GlobalNamespace::BuildingBrickModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BuildingBrickSync
#include "GlobalNamespace/BuildingBrickSync.hpp"
// Including type: BuildingBrickModel
#include "GlobalNamespace/BuildingBrickModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuildingBrickSync.BrickAttachedSet
void GlobalNamespace::BuildingBrickSync::BrickAttachedSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::BrickAttachedSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BrickAttachedSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuildingBrickSync.MatIdSet
void GlobalNamespace::BuildingBrickSync::MatIdSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::MatIdSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatIdSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuildingBrickSync.ColorSet
void GlobalNamespace::BuildingBrickSync::ColorSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::ColorSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuildingBrickSync.UuidSet
void GlobalNamespace::BuildingBrickSync::UuidSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::UuidSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UuidSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuildingBrickSync.OnRealtimeModelReplaced
void GlobalNamespace::BuildingBrickSync::OnRealtimeModelReplaced(::GlobalNamespace::BuildingBrickModel* previousModel, ::GlobalNamespace::BuildingBrickModel* currentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::OnRealtimeModelReplaced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRealtimeModelReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousModel), ::il2cpp_utils::ExtractType(currentModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousModel, currentModel);
}
// Autogenerated method: BuildingBrickSync.AttachedDidChange
void GlobalNamespace::BuildingBrickSync::AttachedDidChange(::GlobalNamespace::BuildingBrickModel* model, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::AttachedDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachedDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: BuildingBrickSync.MatIdDidChange
void GlobalNamespace::BuildingBrickSync::MatIdDidChange(::GlobalNamespace::BuildingBrickModel* model, int matId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::MatIdDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatIdDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(matId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, matId);
}
// Autogenerated method: BuildingBrickSync.ColorDidChange
void GlobalNamespace::BuildingBrickSync::ColorDidChange(::GlobalNamespace::BuildingBrickModel* model, int color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::ColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, color);
}
// Autogenerated method: BuildingBrickSync.UuidDidChange
void GlobalNamespace::BuildingBrickSync::UuidDidChange(::GlobalNamespace::BuildingBrickModel* model, ::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::UuidDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UuidDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, uuid);
}
// Autogenerated method: BuildingBrickSync.SetAttached
void GlobalNamespace::BuildingBrickSync::SetAttached(bool attached) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::SetAttached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attached)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attached);
}
// Autogenerated method: BuildingBrickSync.EnableNewColors
void GlobalNamespace::BuildingBrickSync::EnableNewColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::EnableNewColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableNewColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuildingBrickSync.SetColor
void GlobalNamespace::BuildingBrickSync::SetColor(int color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: BuildingBrickSync.SetUuid
void GlobalNamespace::BuildingBrickSync::SetUuid(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingBrickSync::SetUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uuid);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BulkGrabFollow
#include "GlobalNamespace/BulkGrabFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _relativePosition
::UnityEngine::Vector3& GlobalNamespace::BulkGrabFollow::dyn__relativePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::dyn__relativePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _followedTransform
::UnityEngine::Transform*& GlobalNamespace::BulkGrabFollow::dyn__followedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::dyn__followedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_followedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialFollowedRotation
::UnityEngine::Quaternion& GlobalNamespace::BulkGrabFollow::dyn__initialFollowedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::dyn__initialFollowedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialFollowedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialSelfRotation
::UnityEngine::Quaternion& GlobalNamespace::BulkGrabFollow::dyn__initialSelfRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::dyn__initialSelfRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialSelfRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _relativeRot
::UnityEngine::Quaternion& GlobalNamespace::BulkGrabFollow::dyn__relativeRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::dyn__relativeRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BulkGrabFollow.Start
void GlobalNamespace::BulkGrabFollow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BulkGrabFollow.Initialize
void GlobalNamespace::BulkGrabFollow::Initialize(::UnityEngine::Transform* followedTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(followedTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, followedTransform);
}
// Autogenerated method: BulkGrabFollow.Update
void GlobalNamespace::BulkGrabFollow::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BulkGrabFollow::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ChangeHandGesture
#include "GlobalNamespace/ChangeHandGesture.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HandGestureModel
#include "GlobalNamespace/HandGestureModel.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject handAnimatorObject
::UnityEngine::GameObject*& GlobalNamespace::ChangeHandGesture::dyn_handAnimatorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn_handAnimatorObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handAnimatorObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandGestureModel _model
::GlobalNamespace::HandGestureModel*& GlobalNamespace::ChangeHandGesture::dyn__model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn__model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_model"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandGestureModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator animator
::UnityEngine::Animator*& GlobalNamespace::ChangeHandGesture::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 animLayerIndexThumb
int& GlobalNamespace::ChangeHandGesture::dyn_animLayerIndexThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn_animLayerIndexThumb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animLayerIndexThumb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 animLayerIndexPoint
int& GlobalNamespace::ChangeHandGesture::dyn_animLayerIndexPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn_animLayerIndexPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animLayerIndexPoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 animParamIndexFlex
int& GlobalNamespace::ChangeHandGesture::dyn_animParamIndexFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn_animParamIndexFlex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animParamIndexFlex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 animParamIndexPose
int& GlobalNamespace::ChangeHandGesture::dyn_animParamIndexPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn_animParamIndexPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animParamIndexPose"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String animParamPinch
::StringW& GlobalNamespace::ChangeHandGesture::dyn_animParamPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::dyn_animParamPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animParamPinch"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChangeHandGesture.set_model
void GlobalNamespace::ChangeHandGesture::set_model(::GlobalNamespace::HandGestureModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::set_model");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_model", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ChangeHandGesture.Start
void GlobalNamespace::ChangeHandGesture::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChangeHandGesture.HandPoseIdDidChange
void GlobalNamespace::ChangeHandGesture::HandPoseIdDidChange(::GlobalNamespace::HandGestureModel* model, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::HandPoseIdDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandPoseIdDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: ChangeHandGesture.FlexDidChange
void GlobalNamespace::ChangeHandGesture::FlexDidChange(::GlobalNamespace::HandGestureModel* model, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::FlexDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlexDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: ChangeHandGesture.PointDidChange
void GlobalNamespace::ChangeHandGesture::PointDidChange(::GlobalNamespace::HandGestureModel* model, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::PointDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: ChangeHandGesture.ThumbsUpDidChange
void GlobalNamespace::ChangeHandGesture::ThumbsUpDidChange(::GlobalNamespace::HandGestureModel* model, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::ThumbsUpDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThumbsUpDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: ChangeHandGesture.PinchDidChange
void GlobalNamespace::ChangeHandGesture::PinchDidChange(::GlobalNamespace::HandGestureModel* model, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::PinchDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PinchDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: ChangeHandGesture.UpdateHandAnimator
void GlobalNamespace::ChangeHandGesture::UpdateHandAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::UpdateHandAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHandAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChangeHandGesture.SetHandPoseId
void GlobalNamespace::ChangeHandGesture::SetHandPoseId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::SetHandPoseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandPoseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ChangeHandGesture.SetFlex
void GlobalNamespace::ChangeHandGesture::SetFlex(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::SetFlex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFlex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ChangeHandGesture.SetPoint
void GlobalNamespace::ChangeHandGesture::SetPoint(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::SetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ChangeHandGesture.SetThumbsUp
void GlobalNamespace::ChangeHandGesture::SetThumbsUp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::SetThumbsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetThumbsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ChangeHandGesture.SetPinch
void GlobalNamespace::ChangeHandGesture::SetPinch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChangeHandGesture::SetPinch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPinch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ChunkedRenderer
#include "GlobalNamespace/ChunkedRenderer.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: ChunkedRenderer/Chunk
#include "GlobalNamespace/ChunkedRenderer_Chunk.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ChunkedBrick
#include "GlobalNamespace/ChunkedBrick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 WorkQueueItemsToProcessPerFrame
int GlobalNamespace::ChunkedRenderer::_get_WorkQueueItemsToProcessPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::_get_WorkQueueItemsToProcessPerFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ChunkedRenderer", "WorkQueueItemsToProcessPerFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WorkQueueItemsToProcessPerFrame
void GlobalNamespace::ChunkedRenderer::_set_WorkQueueItemsToProcessPerFrame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::_set_WorkQueueItemsToProcessPerFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ChunkedRenderer", "WorkQueueItemsToProcessPerFrame", value));
}
// Autogenerated static field getter
// Get static field: static private ChunkedRenderer _instance
::GlobalNamespace::ChunkedRenderer* GlobalNamespace::ChunkedRenderer::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ChunkedRenderer*>("", "ChunkedRenderer", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private ChunkedRenderer _instance
void GlobalNamespace::ChunkedRenderer::_set__instance(::GlobalNamespace::ChunkedRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ChunkedRenderer", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform chunkingCenterPointTransform
::UnityEngine::Transform*& GlobalNamespace::ChunkedRenderer::dyn_chunkingCenterPointTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn_chunkingCenterPointTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chunkingCenterPointTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _chunkingCenterPoint
::UnityEngine::Vector3& GlobalNamespace::ChunkedRenderer::dyn__chunkingCenterPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn__chunkingCenterPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chunkingCenterPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 renderDistance
int& GlobalNamespace::ChunkedRenderer::dyn_renderDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn_renderDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderDistance"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _uncappedRenderDistance
bool& GlobalNamespace::ChunkedRenderer::dyn__uncappedRenderDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn__uncappedRenderDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncappedRenderDistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chunkSize
float& GlobalNamespace::ChunkedRenderer::dyn_chunkSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn_chunkSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chunkSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerScale
float& GlobalNamespace::ChunkedRenderer::dyn_playerScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn_playerScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform playerHeadTransform
::UnityEngine::Transform*& GlobalNamespace::ChunkedRenderer::dyn_playerHeadTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn_playerHeadTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHeadTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<ChunkedRenderer/Coord,ChunkedRenderer/Chunk> _chunkDictionary
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ChunkedRenderer::Coord, ::GlobalNamespace::ChunkedRenderer::Chunk*>*& GlobalNamespace::ChunkedRenderer::dyn__chunkDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn__chunkDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chunkDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ChunkedRenderer::Coord, ::GlobalNamespace::ChunkedRenderer::Chunk*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<SetConnectorStatesTask> _workQueue
::System::Collections::Generic::Queue_1<::GlobalNamespace::SetConnectorStatesTask>*& GlobalNamespace::ChunkedRenderer::dyn__workQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::dyn__workQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_workQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::SetConnectorStatesTask>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChunkedRenderer.GetInstance
::GlobalNamespace::ChunkedRenderer* GlobalNamespace::ChunkedRenderer::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ChunkedRenderer", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ChunkedRenderer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ChunkedRenderer.Awake
void GlobalNamespace::ChunkedRenderer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChunkedRenderer.RenderDistanceSet
void GlobalNamespace::ChunkedRenderer::RenderDistanceSet(int distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::RenderDistanceSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderDistanceSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated method: ChunkedRenderer.AddBrickToRenderer
void GlobalNamespace::ChunkedRenderer::AddBrickToRenderer(::UnityEngine::GameObject* brickObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::AddBrickToRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrickToRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, brickObject);
}
// Autogenerated method: ChunkedRenderer.AddBrickToRenderer
void GlobalNamespace::ChunkedRenderer::AddBrickToRenderer(::GlobalNamespace::ChunkedBrick chunkedBrick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::AddBrickToRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrickToRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunkedBrick)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunkedBrick);
}
// Autogenerated method: ChunkedRenderer.FindOrCreateChunk
::GlobalNamespace::ChunkedRenderer::Chunk* GlobalNamespace::ChunkedRenderer::FindOrCreateChunk(::GlobalNamespace::ChunkedRenderer::Coord coord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::FindOrCreateChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindOrCreateChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coord)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ChunkedRenderer::Chunk*, false>(this, ___internal__method, coord);
}
// Autogenerated method: ChunkedRenderer.Update
void GlobalNamespace::ChunkedRenderer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChunkedRenderer.WorkThroughWorkQueue
void GlobalNamespace::ChunkedRenderer::WorkThroughWorkQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::WorkThroughWorkQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorkThroughWorkQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChunkedRenderer.RedoChunks
void GlobalNamespace::ChunkedRenderer::RedoChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::RedoChunks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RedoChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChunkedRenderer.OnDrawGizmos
void GlobalNamespace::ChunkedRenderer::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChunkedRenderer.GetCenterOfChunk
::UnityEngine::Vector3 GlobalNamespace::ChunkedRenderer::GetCenterOfChunk(::GlobalNamespace::ChunkedRenderer::Coord coord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::GetCenterOfChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCenterOfChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coord)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, coord);
}
// Autogenerated method: ChunkedRenderer.GetChunkFromPosition
::GlobalNamespace::ChunkedRenderer::Coord GlobalNamespace::ChunkedRenderer::GetChunkFromPosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::GetChunkFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChunkFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ChunkedRenderer::Coord, false>(this, ___internal__method, position);
}
// Autogenerated method: ChunkedRenderer.DistanceBetweenCoords
float GlobalNamespace::ChunkedRenderer::DistanceBetweenCoords(::GlobalNamespace::ChunkedRenderer::Coord one, ::GlobalNamespace::ChunkedRenderer::Coord two) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::DistanceBetweenCoords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ChunkedRenderer", "DistanceBetweenCoords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(one), ::il2cpp_utils::ExtractType(two)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, one, two);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ChunkedRenderer/Coord
#include "GlobalNamespace/ChunkedRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
int& GlobalNamespace::ChunkedRenderer::Coord::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Coord::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 z
int& GlobalNamespace::ChunkedRenderer::Coord::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Coord::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChunkedRenderer/Coord..ctor
// ABORTED elsewhere.  GlobalNamespace::ChunkedRenderer::Coord::Coord(int x, int z)
// Autogenerated method: ChunkedRenderer/Coord.Equals
bool GlobalNamespace::ChunkedRenderer::Coord::Equals(::GlobalNamespace::ChunkedRenderer::Coord otherCoord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Coord::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCoord)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, otherCoord);
}
// Autogenerated method: ChunkedRenderer/Coord.WithinNChunks
bool GlobalNamespace::ChunkedRenderer::Coord::WithinNChunks(::GlobalNamespace::ChunkedRenderer::Coord otherCoord, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Coord::WithinNChunks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithinNChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCoord), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, otherCoord, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ChunkedRenderer/Chunk
#include "GlobalNamespace/ChunkedRenderer_Chunk.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ChunkedBrick> _bricks
::System::Collections::Generic::List_1<::GlobalNamespace::ChunkedBrick>*& GlobalNamespace::ChunkedRenderer::Chunk::dyn__bricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::dyn__bricks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bricks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ChunkedBrick>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _renderersEnabled
bool& GlobalNamespace::ChunkedRenderer::Chunk::dyn__renderersEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::dyn__renderersEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderersEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _connectorsEnabled
bool& GlobalNamespace::ChunkedRenderer::Chunk::dyn__connectorsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::dyn__connectorsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectorsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Position
::UnityEngine::Vector3& GlobalNamespace::ChunkedRenderer::Chunk::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::dyn_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChunkedRenderer/Chunk.AddBrick
void GlobalNamespace::ChunkedRenderer::Chunk::AddBrick(::UnityEngine::GameObject* brickObject, ::System::Collections::Generic::Queue_1<::GlobalNamespace::SetConnectorStatesTask>* workQueue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::AddBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickObject), ::il2cpp_utils::ExtractType(workQueue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, brickObject, workQueue);
}
// Autogenerated method: ChunkedRenderer/Chunk.AddBrick
void GlobalNamespace::ChunkedRenderer::Chunk::AddBrick(::GlobalNamespace::ChunkedBrick chunkedBrick, ::System::Collections::Generic::Queue_1<::GlobalNamespace::SetConnectorStatesTask>* workQueue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::AddBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunkedBrick), ::il2cpp_utils::ExtractType(workQueue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunkedBrick, workQueue);
}
// Autogenerated method: ChunkedRenderer/Chunk.SetRendererEnabled
void GlobalNamespace::ChunkedRenderer::Chunk::SetRendererEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::SetRendererEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRendererEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: ChunkedRenderer/Chunk.SetConnectorCollidersEnabled
void GlobalNamespace::ChunkedRenderer::Chunk::SetConnectorCollidersEnabled(bool enabled, ::System::Collections::Generic::Queue_1<::GlobalNamespace::SetConnectorStatesTask>* workQueue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::SetConnectorCollidersEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectorCollidersEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled), ::il2cpp_utils::ExtractType(workQueue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled, workQueue);
}
// Autogenerated method: ChunkedRenderer/Chunk.Bricks
::System::Collections::Generic::List_1<::GlobalNamespace::ChunkedBrick>* GlobalNamespace::ChunkedRenderer::Chunk::Bricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedRenderer::Chunk::Bricks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bricks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::ChunkedBrick>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ChunkedBrick
#include "GlobalNamespace/ChunkedBrick.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LegoConnectorScript
#include "GlobalNamespace/LegoConnectorScript.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.GameObject GameObject
::UnityEngine::GameObject*& GlobalNamespace::ChunkedBrick::dyn_GameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedBrick::dyn_GameObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.MeshRenderer MeshRenderer
::UnityEngine::MeshRenderer*& GlobalNamespace::ChunkedBrick::dyn_MeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedBrick::dyn_MeshRenderer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 VertexCount
int& GlobalNamespace::ChunkedBrick::dyn_VertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedBrick::dyn_VertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<LegoConnectorScript> ConnectorScripts
::System::Collections::Generic::List_1<::GlobalNamespace::LegoConnectorScript*>*& GlobalNamespace::ChunkedBrick::dyn_ConnectorScripts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedBrick::dyn_ConnectorScripts");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectorScripts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LegoConnectorScript*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChunkedBrick..ctor
GlobalNamespace::ChunkedBrick::ChunkedBrick(::UnityEngine::GameObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChunkedBrick::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetConnectorStatesTask
#include "GlobalNamespace/SetConnectorStatesTask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ChunkedBrick ChunkedBrick
::GlobalNamespace::ChunkedBrick& GlobalNamespace::SetConnectorStatesTask::dyn_ChunkedBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetConnectorStatesTask::dyn_ChunkedBrick");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChunkedBrick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ChunkedBrick*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Enabled
bool& GlobalNamespace::SetConnectorStatesTask::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetConnectorStatesTask::dyn_Enabled");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetConnectorStatesTask..ctor
// ABORTED elsewhere.  GlobalNamespace::SetConnectorStatesTask::SetConnectorStatesTask(::GlobalNamespace::ChunkedBrick brick, bool enabled)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CollisionSound
#include "GlobalNamespace/CollisionSound.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CollisionSound/MaterialType material
::GlobalNamespace::CollisionSound::MaterialType& GlobalNamespace::CollisionSound::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CollisionSound::MaterialType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] metalOnMetalClips
::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::CollisionSound::dyn_metalOnMetalClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::dyn_metalOnMetalClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "metalOnMetalClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _nextSoundTime
float& GlobalNamespace::CollisionSound::dyn__nextSoundTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::dyn__nextSoundTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextSoundTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeBetweenSounds
float& GlobalNamespace::CollisionSound::dyn__timeBetweenSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::dyn__timeBetweenSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeBetweenSounds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _source
::UnityEngine::AudioSource*& GlobalNamespace::CollisionSound::dyn__source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::dyn__source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CollisionSound.Start
void GlobalNamespace::CollisionSound::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CollisionSound.NextSoundTime
float GlobalNamespace::CollisionSound::NextSoundTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::NextSoundTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextSoundTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CollisionSound.OnCollisionEnter
void GlobalNamespace::CollisionSound::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: CollisionSound.MetalOnMetalCollision
void GlobalNamespace::CollisionSound::MetalOnMetalCollision(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::MetalOnMetalCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MetalOnMetalCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: CollisionSound.CollisionVelocityToVolume
float GlobalNamespace::CollisionSound::CollisionVelocityToVolume(float velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::CollisionVelocityToVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CollisionSound", "CollisionVelocityToVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocity)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, velocity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CollisionSound/MaterialType
#include "GlobalNamespace/CollisionSound.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CollisionSound/MaterialType Metal
::GlobalNamespace::CollisionSound::MaterialType GlobalNamespace::CollisionSound::MaterialType::_get_Metal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::MaterialType::_get_Metal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CollisionSound::MaterialType>("", "CollisionSound/MaterialType", "Metal"));
}
// Autogenerated static field setter
// Set static field: static public CollisionSound/MaterialType Metal
void GlobalNamespace::CollisionSound::MaterialType::_set_Metal(::GlobalNamespace::CollisionSound::MaterialType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::MaterialType::_set_Metal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CollisionSound/MaterialType", "Metal", value));
}
// Autogenerated static field getter
// Get static field: static public CollisionSound/MaterialType Floor
::GlobalNamespace::CollisionSound::MaterialType GlobalNamespace::CollisionSound::MaterialType::_get_Floor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::MaterialType::_get_Floor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CollisionSound::MaterialType>("", "CollisionSound/MaterialType", "Floor"));
}
// Autogenerated static field setter
// Set static field: static public CollisionSound/MaterialType Floor
void GlobalNamespace::CollisionSound::MaterialType::_set_Floor(::GlobalNamespace::CollisionSound::MaterialType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::MaterialType::_set_Floor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CollisionSound/MaterialType", "Floor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::CollisionSound::MaterialType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollisionSound::MaterialType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorCarousel
#include "GlobalNamespace/ColorCarousel.hpp"
// Including type: ColorCarousel/SerializableIntEvent
#include "GlobalNamespace/ColorCarousel_SerializableIntEvent.hpp"
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImage
#include "UnityEngine/UI/ProceduralImage/ProceduralImage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ProceduralImage.ProceduralImage colorImage
::UnityEngine::UI::ProceduralImage::ProceduralImage*& GlobalNamespace::ColorCarousel::dyn_colorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::dyn_colorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ProceduralImage::ProceduralImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[] colors
::ArrayW<::UnityEngine::Color>& GlobalNamespace::ColorCarousel::dyn_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::dyn_colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] colorInts
::ArrayW<int>& GlobalNamespace::ColorCarousel::dyn_colorInts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::dyn_colorInts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorInts"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean colorIntsInitialized
bool& GlobalNamespace::ColorCarousel::dyn_colorIntsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::dyn_colorIntsInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorIntsInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 editorColorIndex
int& GlobalNamespace::ColorCarousel::dyn_editorColorIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::dyn_editorColorIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorColorIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentColorIndex
int& GlobalNamespace::ColorCarousel::dyn__currentColorIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::dyn__currentColorIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentColorIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorCarousel/SerializableIntEvent ColorUpdated
::GlobalNamespace::ColorCarousel::SerializableIntEvent*& GlobalNamespace::ColorCarousel::dyn_ColorUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::dyn_ColorUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColorUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorCarousel::SerializableIntEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorCarousel.Awake
void GlobalNamespace::ColorCarousel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorCarousel.InitializeColorInts
void GlobalNamespace::ColorCarousel::InitializeColorInts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::InitializeColorInts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeColorInts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorCarousel.NextColor
void GlobalNamespace::ColorCarousel::NextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::NextColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorCarousel.PreviousColor
void GlobalNamespace::ColorCarousel::PreviousColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::PreviousColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreviousColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorCarousel.SelectColor
void GlobalNamespace::ColorCarousel::SelectColor(int colorInt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorInt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorInt);
}
// Autogenerated method: ColorCarousel.SendColorUpdatedEvent
void GlobalNamespace::ColorCarousel::SendColorUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::SendColorUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendColorUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorCarousel.ReRenderColor
void GlobalNamespace::ColorCarousel::ReRenderColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::ReRenderColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReRenderColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorCarousel.OnValidate
void GlobalNamespace::ColorCarousel::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorCarousel::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorCarousel/SerializableIntEvent
#include "GlobalNamespace/ColorCarousel_SerializableIntEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorInt
#include "GlobalNamespace/ColorInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _colorInt
int& GlobalNamespace::ColorInt::dyn__colorInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::dyn__colorInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _cachedColor
::UnityEngine::Color& GlobalNamespace::ColorInt::dyn__cachedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::dyn__cachedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cachedColorSet
bool& GlobalNamespace::ColorInt::dyn__cachedColorSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::dyn__cachedColorSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedColorSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorInt.GetInt
int GlobalNamespace::ColorInt::GetInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorInt.GetColor32
::UnityEngine::Color32 GlobalNamespace::ColorInt::GetColor32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::GetColor32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: ColorInt.GetColor
::UnityEngine::Color GlobalNamespace::ColorInt::GetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorInt.IntToColor32
::UnityEngine::Color32 GlobalNamespace::ColorInt::IntToColor32(int color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::IntToColor32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorInt", "IntToColor32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, color);
}
// Autogenerated method: ColorInt.ColorToInt
int GlobalNamespace::ColorInt::ColorToInt(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::ColorToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorInt", "ColorToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, color);
}
// Autogenerated method: ColorInt.Color32ToInt
int GlobalNamespace::ColorInt::Color32ToInt(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorInt::Color32ToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorInt", "Color32ToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorPickerSaveSpot
#include "GlobalNamespace/ColorPickerSaveSpot.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: BrickPickerManager
#include "GlobalNamespace/BrickPickerManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image borderImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorPickerSaveSpot::dyn_borderImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::dyn_borderImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "borderImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image colorImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorPickerSaveSpot::dyn_colorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::dyn_colorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BrickPickerManager brickPickerManager
::GlobalNamespace::BrickPickerManager*& GlobalNamespace::ColorPickerSaveSpot::dyn_brickPickerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::dyn_brickPickerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickPickerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickPickerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
::UnityEngine::Color& GlobalNamespace::ColorPickerSaveSpot::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorPickerSaveSpot.Awake
void GlobalNamespace::ColorPickerSaveSpot::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorPickerSaveSpot.GetColor
::UnityEngine::Color GlobalNamespace::ColorPickerSaveSpot::GetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorPickerSaveSpot.SetColor
void GlobalNamespace::ColorPickerSaveSpot::SetColor(::UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated method: ColorPickerSaveSpot.OnTriggerEnter
void GlobalNamespace::ColorPickerSaveSpot::OnTriggerEnter(::UnityEngine::Collider* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: ColorPickerSaveSpot.Enable
void GlobalNamespace::ColorPickerSaveSpot::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::Enable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorPickerSaveSpot.Disable
void GlobalNamespace::ColorPickerSaveSpot::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerSaveSpot::Disable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ControllerButtonInput
#include "GlobalNamespace/ControllerButtonInput.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject realtimeObject
::UnityEngine::GameObject*& GlobalNamespace::ControllerButtonInput::dyn_realtimeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::dyn_realtimeObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realtimeObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftMenuHand
::UnityEngine::GameObject*& GlobalNamespace::ControllerButtonInput::dyn_leftMenuHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::dyn_leftMenuHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftMenuHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightMenuHand
::UnityEngine::GameObject*& GlobalNamespace::ControllerButtonInput::dyn_rightMenuHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::dyn_rightMenuHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightMenuHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _activeController
::GlobalNamespace::OVRInput::Controller& GlobalNamespace::ControllerButtonInput::dyn__activeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::dyn__activeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
::Normal::Realtime::Realtime*& GlobalNamespace::ControllerButtonInput::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _reset
bool& GlobalNamespace::ControllerButtonInput::dyn__reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::dyn__reset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
bool& GlobalNamespace::ControllerButtonInput::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ControllerButtonInput.Start
void GlobalNamespace::ControllerButtonInput::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerButtonInput.Update
void GlobalNamespace::ControllerButtonInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerButtonInput.EnableMenuControls
void GlobalNamespace::ControllerButtonInput::EnableMenuControls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::EnableMenuControls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMenuControls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerButtonInput.DisableMenuControls
void GlobalNamespace::ControllerButtonInput::DisableMenuControls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::DisableMenuControls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMenuControls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerButtonInput.MenuLogic
void GlobalNamespace::ControllerButtonInput::MenuLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::MenuLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MenuLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerButtonInput.ResetMenuState
void GlobalNamespace::ControllerButtonInput::ResetMenuState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerButtonInput::ResetMenuState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMenuState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreateKeyboardManager
#include "GlobalNamespace/CreateKeyboardManager.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: LoadingScreen
#include "GlobalNamespace/LoadingScreen.hpp"
// Including type: ProfanityFilter.ProfanityFilter
#include "ProfanityFilter/ProfanityFilter.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxNameLength
int GlobalNamespace::CreateKeyboardManager::_get_MaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::_get_MaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CreateKeyboardManager", "MaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxNameLength
void GlobalNamespace::CreateKeyboardManager::_set_MaxNameLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::_set_MaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateKeyboardManager", "MaxNameLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DefaultName
::StringW GlobalNamespace::CreateKeyboardManager::_get_DefaultName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::_get_DefaultName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CreateKeyboardManager", "DefaultName"));
}
// Autogenerated static field setter
// Set static field: static private System.String DefaultName
void GlobalNamespace::CreateKeyboardManager::_set_DefaultName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::_set_DefaultName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateKeyboardManager", "DefaultName", value));
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI nameText
::TMPro::TextMeshProUGUI*& GlobalNamespace::CreateKeyboardManager::dyn_nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::dyn_nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject createMenu
::UnityEngine::GameObject*& GlobalNamespace::CreateKeyboardManager::dyn_createMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::dyn_createMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject loadingMenu
::UnityEngine::GameObject*& GlobalNamespace::CreateKeyboardManager::dyn_loadingMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::dyn_loadingMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LoadingScreen loadingScreen
::GlobalNamespace::LoadingScreen*& GlobalNamespace::CreateKeyboardManager::dyn_loadingScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::dyn_loadingScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingScreen"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoadingScreen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _enteredName
::StringW& GlobalNamespace::CreateKeyboardManager::dyn__enteredName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::dyn__enteredName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enteredName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _defaultNameLabel
::StringW& GlobalNamespace::CreateKeyboardManager::dyn__defaultNameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::dyn__defaultNameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultNameLabel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ProfanityFilter.ProfanityFilter _profanityFilter
::ProfanityFilter::ProfanityFilter*& GlobalNamespace::CreateKeyboardManager::dyn__profanityFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::dyn__profanityFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_profanityFilter"))->offset;
  return *reinterpret_cast<::ProfanityFilter::ProfanityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreateKeyboardManager.Awake
void GlobalNamespace::CreateKeyboardManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateKeyboardManager.OnEnable
void GlobalNamespace::CreateKeyboardManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateKeyboardManager.KeyPress
void GlobalNamespace::CreateKeyboardManager::KeyPress(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::KeyPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: CreateKeyboardManager.BackspacePress
void GlobalNamespace::CreateKeyboardManager::BackspacePress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::BackspacePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackspacePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateKeyboardManager.SubmitAndCreateRoom
void GlobalNamespace::CreateKeyboardManager::SubmitAndCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::SubmitAndCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitAndCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateKeyboardManager.ClearName
void GlobalNamespace::CreateKeyboardManager::ClearName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::ClearName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateKeyboardManager.UpdateNameOnUI
void GlobalNamespace::CreateKeyboardManager::UpdateNameOnUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateKeyboardManager::UpdateNameOnUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNameOnUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomSliderLabels
#include "GlobalNamespace/CustomSliderLabels.hpp"
// Including type: SliderControl
#include "GlobalNamespace/SliderControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] labels
::ArrayW<::StringW>& GlobalNamespace::CustomSliderLabels::dyn_labels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomSliderLabels::dyn_labels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "labels"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean refreshLabels
bool& GlobalNamespace::CustomSliderLabels::dyn_refreshLabels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomSliderLabels::dyn_refreshLabels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refreshLabels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderControl _sliderControl
::GlobalNamespace::SliderControl*& GlobalNamespace::CustomSliderLabels::dyn__sliderControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomSliderLabels::dyn__sliderControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomSliderLabels.Awake
void GlobalNamespace::CustomSliderLabels::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomSliderLabels::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CustomSliderLabels.OnValidate
void GlobalNamespace::CustomSliderLabels::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomSliderLabels::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CustomSliderLabels.LabelFor
::StringW GlobalNamespace::CustomSliderLabels::LabelFor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomSliderLabels::LabelFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LabelFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DestroyBuggedHeldBricks
#include "GlobalNamespace/DestroyBuggedHeldBricks.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager _interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& GlobalNamespace::DestroyBuggedHeldBricks::dyn__interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyBuggedHeldBricks::dyn__interactionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor leftHand
::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor*& GlobalNamespace::DestroyBuggedHeldBricks::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyBuggedHeldBricks::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor rightHand
::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor*& GlobalNamespace::DestroyBuggedHeldBricks::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyBuggedHeldBricks::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _leftHandTransform
::UnityEngine::Transform*& GlobalNamespace::DestroyBuggedHeldBricks::dyn__leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyBuggedHeldBricks::dyn__leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rightHandTransform
::UnityEngine::Transform*& GlobalNamespace::DestroyBuggedHeldBricks::dyn__rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyBuggedHeldBricks::dyn__rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> interactablesToCheck
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& GlobalNamespace::DestroyBuggedHeldBricks::dyn_interactablesToCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyBuggedHeldBricks::dyn_interactablesToCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactablesToCheck"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DestroyBuggedHeldBricks.Start
void GlobalNamespace::DestroyBuggedHeldBricks::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyBuggedHeldBricks::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DestroyFallingBricks
#include "GlobalNamespace/DestroyFallingBricks.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DestroyFallingBricks.OnTriggerEnter
void GlobalNamespace::DestroyFallingBricks::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DestroyFallingBricks::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableLoadingScreenWhenConnected
#include "GlobalNamespace/DisableLoadingScreenWhenConnected.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimeAvatarManager
#include "Normal/Realtime/RealtimeAvatarManager.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime realtime
::Normal::Realtime::Realtime*& GlobalNamespace::DisableLoadingScreenWhenConnected::dyn_realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableLoadingScreenWhenConnected::dyn_realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject canvas
::UnityEngine::GameObject*& GlobalNamespace::DisableLoadingScreenWhenConnected::dyn_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableLoadingScreenWhenConnected::dyn_canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisableLoadingScreenWhenConnected.Start
void GlobalNamespace::DisableLoadingScreenWhenConnected::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableLoadingScreenWhenConnected::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisableLoadingScreenWhenConnected.HideLoadingScreen
void GlobalNamespace::DisableLoadingScreenWhenConnected::HideLoadingScreen(::Normal::Realtime::RealtimeAvatarManager* avatarManager, ::Normal::Realtime::RealtimeAvatar* avatar, bool isLocalAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableLoadingScreenWhenConnected::HideLoadingScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideLoadingScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarManager), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(isLocalAvatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarManager, avatar, isLocalAvatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableMicWhenEditor
#include "GlobalNamespace/DisableMicWhenEditor.hpp"
// Including type: Normal.Realtime.RealtimeAvatarVoice
#include "Normal/Realtime/RealtimeAvatarVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeAvatarVoice voice
::Normal::Realtime::RealtimeAvatarVoice*& GlobalNamespace::DisableMicWhenEditor::dyn_voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableMicWhenEditor::dyn_voice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voice"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisableMicWhenEditor.Start
void GlobalNamespace::DisableMicWhenEditor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableMicWhenEditor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DownloadBricksOnLoad
#include "GlobalNamespace/DownloadBricksOnLoad.hpp"
// Including type: DownloadBricksOnLoad/FetchAllBricksResponse
#include "GlobalNamespace/DownloadBricksOnLoad_FetchAllBricksResponse.hpp"
// Including type: DownloadBricksOnLoad/<LoadBrickDataAsync>d__14
#include "GlobalNamespace/DownloadBricksOnLoad_-LoadBrickDataAsync-d__14.hpp"
// Including type: DownloadBricksOnLoad/<DownloadBrickData>d__16
#include "GlobalNamespace/DownloadBricksOnLoad_-DownloadBrickData-d__16.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: ChunkedRenderer
#include "GlobalNamespace/ChunkedRenderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: NormcoreRPC/Brick
#include "GlobalNamespace/NormcoreRPC_Brick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
::Normal::Realtime::Realtime*& GlobalNamespace::DownloadBricksOnLoad::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _roomDataJson
::StringW& GlobalNamespace::DownloadBricksOnLoad::dyn__roomDataJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn__roomDataJson");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomDataJson"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _joiningStatusText
::TMPro::TextMeshProUGUI*& GlobalNamespace::DownloadBricksOnLoad::dyn__joiningStatusText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn__joiningStatusText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joiningStatusText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean upstreamError
bool& GlobalNamespace::DownloadBricksOnLoad::dyn_upstreamError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn_upstreamError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upstreamError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean connectivityError
bool& GlobalNamespace::DownloadBricksOnLoad::dyn_connectivityError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn_connectivityError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectivityError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDoneDownloading
bool& GlobalNamespace::DownloadBricksOnLoad::dyn_isDoneDownloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn_isDoneDownloading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDoneDownloading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _downloadSpeedMultiplier
int& GlobalNamespace::DownloadBricksOnLoad::dyn__downloadSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn__downloadSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downloadSpeedMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ChunkedRenderer chunkedRenderer
::GlobalNamespace::ChunkedRenderer*& GlobalNamespace::DownloadBricksOnLoad::dyn_chunkedRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn_chunkedRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chunkedRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ChunkedRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<NormcoreRPC/Brick> bricksParentedToHeads
::System::Collections::Generic::List_1<::GlobalNamespace::NormcoreRPC::Brick*>*& GlobalNamespace::DownloadBricksOnLoad::dyn_bricksParentedToHeads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::dyn_bricksParentedToHeads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bricksParentedToHeads"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::NormcoreRPC::Brick*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DownloadBricksOnLoad.get_Errored
bool GlobalNamespace::DownloadBricksOnLoad::get_Errored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::get_Errored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Errored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad.Start
void GlobalNamespace::DownloadBricksOnLoad::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad.Reset
void GlobalNamespace::DownloadBricksOnLoad::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad.StartLoading
void GlobalNamespace::DownloadBricksOnLoad::StartLoading(::StringW roomName, ::TMPro::TextMeshProUGUI* joiningStatusText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::StartLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(joiningStatusText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, joiningStatusText);
}
// Autogenerated method: DownloadBricksOnLoad.LoadBrickDataAsync
::System::Collections::IEnumerator* GlobalNamespace::DownloadBricksOnLoad::LoadBrickDataAsync(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::LoadBrickDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBrickDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, roomName);
}
// Autogenerated method: DownloadBricksOnLoad.LoadBricksParentedToHeads
void GlobalNamespace::DownloadBricksOnLoad::LoadBricksParentedToHeads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::LoadBricksParentedToHeads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBricksParentedToHeads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad.DownloadBrickData
::System::Collections::IEnumerator* GlobalNamespace::DownloadBricksOnLoad::DownloadBrickData(::StringW room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::DownloadBrickData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadBrickData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, room);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DownloadBricksOnLoad/FetchAllBricksResponse
#include "GlobalNamespace/DownloadBricksOnLoad_FetchAllBricksResponse.hpp"
// Including type: NormcoreRPC/Brick
#include "GlobalNamespace/NormcoreRPC_Brick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NormcoreRPC/Brick[] bricks
::ArrayW<::GlobalNamespace::NormcoreRPC::Brick*>& GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse::dyn_bricks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse::dyn_bricks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bricks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::NormcoreRPC::Brick*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ownerShortIdPrefix
::StringW& GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse::dyn_ownerShortIdPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse::dyn_ownerShortIdPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerShortIdPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DownloadBricksOnLoad/<LoadBrickDataAsync>d__14
#include "GlobalNamespace/DownloadBricksOnLoad_-LoadBrickDataAsync-d__14.hpp"
// Including type: BrickAttach
#include "GlobalNamespace/BrickAttach.hpp"
// Including type: DownloadBricksOnLoad/FetchAllBricksResponse
#include "GlobalNamespace/DownloadBricksOnLoad_FetchAllBricksResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DownloadBricksOnLoad <>4__this
::GlobalNamespace::DownloadBricksOnLoad*& GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DownloadBricksOnLoad**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomName
::StringW& GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_roomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_roomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DownloadBricksOnLoad/FetchAllBricksResponse <parsedResponse>5__2
::GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse*& GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$parsedResponse$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$parsedResponse$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parsedResponse>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DownloadBricksOnLoad::FetchAllBricksResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrickAttach[] <createdBricks>5__3
::ArrayW<::GlobalNamespace::BrickAttach*>& GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$createdBricks$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$createdBricks$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<createdBricks>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BrickAttach*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__4
int& GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$i$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::dyn_$i$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DownloadBricksOnLoad/<LoadBrickDataAsync>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<LoadBrickDataAsync>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<LoadBrickDataAsync>d__14.System.IDisposable.Dispose
void GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<LoadBrickDataAsync>d__14.MoveNext
bool GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<LoadBrickDataAsync>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$LoadBrickDataAsync$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DownloadBricksOnLoad/<DownloadBrickData>d__16
#include "GlobalNamespace/DownloadBricksOnLoad_-DownloadBrickData-d__16.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String room
::StringW& GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DownloadBricksOnLoad <>4__this
::GlobalNamespace::DownloadBricksOnLoad*& GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DownloadBricksOnLoad**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <request>5__2
::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$request$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::dyn_$request$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DownloadBricksOnLoad/<DownloadBrickData>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<DownloadBrickData>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<DownloadBrickData>d__16.System.IDisposable.Dispose
void GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<DownloadBrickData>d__16.MoveNext
bool GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DownloadBricksOnLoad/<DownloadBrickData>d__16.System.Collections.IEnumerator.Reset
void GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DownloadBricksOnLoad::$DownloadBrickData$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableFingerColliderForSelf
#include "GlobalNamespace/EnableFingerColliderForSelf.hpp"
// Including type: Normal.Realtime.RealtimeAvatar
#include "Normal/Realtime/RealtimeAvatar.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.RealtimeAvatar realtimeAvatar
::Normal::Realtime::RealtimeAvatar*& GlobalNamespace::EnableFingerColliderForSelf::dyn_realtimeAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableFingerColliderForSelf::dyn_realtimeAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realtimeAvatar"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider fingerCollider
::UnityEngine::Collider*& GlobalNamespace::EnableFingerColliderForSelf::dyn_fingerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableFingerColliderForSelf::dyn_fingerCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnableFingerColliderForSelf.Start
void GlobalNamespace::EnableFingerColliderForSelf::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableFingerColliderForSelf::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableRoomMenuForOwner
#include "GlobalNamespace/EnableRoomMenuForOwner.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: RoomOwnershipSync
#include "GlobalNamespace/RoomOwnershipSync.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String OwnerText
::StringW GlobalNamespace::EnableRoomMenuForOwner::_get_OwnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::_get_OwnerText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "EnableRoomMenuForOwner", "OwnerText"));
}
// Autogenerated static field setter
// Set static field: static private System.String OwnerText
void GlobalNamespace::EnableRoomMenuForOwner::_set_OwnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::_set_OwnerText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnableRoomMenuForOwner", "OwnerText", value));
}
// Autogenerated static field getter
// Get static field: static private System.String NotOwnerText
::StringW GlobalNamespace::EnableRoomMenuForOwner::_get_NotOwnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::_get_NotOwnerText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "EnableRoomMenuForOwner", "NotOwnerText"));
}
// Autogenerated static field setter
// Set static field: static private System.String NotOwnerText
void GlobalNamespace::EnableRoomMenuForOwner::_set_NotOwnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::_set_NotOwnerText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnableRoomMenuForOwner", "NotOwnerText", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle lockRoomToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::EnableRoomMenuForOwner::dyn_lockRoomToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::dyn_lockRoomToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockRoomToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle lowGravityToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::EnableRoomMenuForOwner::dyn_lowGravityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::dyn_lowGravityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowGravityToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle movingThroughBricksAllowedToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::EnableRoomMenuForOwner::dyn_movingThroughBricksAllowedToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::dyn_movingThroughBricksAllowedToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movingThroughBricksAllowedToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RoomOwnershipSync ownershipSync
::GlobalNamespace::RoomOwnershipSync*& GlobalNamespace::EnableRoomMenuForOwner::dyn_ownershipSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::dyn_ownershipSync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownershipSync"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomOwnershipSync**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI menuSubtitle
::TMPro::TextMeshProUGUI*& GlobalNamespace::EnableRoomMenuForOwner::dyn_menuSubtitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::dyn_menuSubtitle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuSubtitle"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnableRoomMenuForOwner.OnEnable
void GlobalNamespace::EnableRoomMenuForOwner::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableRoomMenuForOwner::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableTeleportRayOnSelect
#include "GlobalNamespace/EnableTeleportRayOnSelect.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorLineVisual.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor _interactor
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*& GlobalNamespace::EnableTeleportRayOnSelect::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableTeleportRayOnSelect::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual _lineVisual
::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*& GlobalNamespace::EnableTeleportRayOnSelect::dyn__lineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableTeleportRayOnSelect::dyn__lineVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnableTeleportRayOnSelect.OnEnable
void GlobalNamespace::EnableTeleportRayOnSelect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableTeleportRayOnSelect::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnableTeleportRayOnSelect.OnDisable
void GlobalNamespace::EnableTeleportRayOnSelect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableTeleportRayOnSelect::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnableTeleportRayOnSelect.OnEnter
void GlobalNamespace::EnableTeleportRayOnSelect::OnEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableTeleportRayOnSelect::OnEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: EnableTeleportRayOnSelect.OnExit
void GlobalNamespace::EnableTeleportRayOnSelect::OnExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableTeleportRayOnSelect::OnExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseEntitlementCheck
#include "GlobalNamespace/BaseEntitlementCheck.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseEntitlementCheck.IsEntitled
void GlobalNamespace::BaseEntitlementCheck::IsEntitled(::System::Action_2<bool, ::StringW>* entitlementCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseEntitlementCheck::IsEntitled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entitlementCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entitlementCallback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EntitlementCheckManager
#include "GlobalNamespace/EntitlementCheckManager.hpp"
// Including type: BaseEntitlementCheck
#include "GlobalNamespace/BaseEntitlementCheck.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single EntitlementTimeout
float GlobalNamespace::EntitlementCheckManager::_get_EntitlementTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::_get_EntitlementTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "EntitlementCheckManager", "EntitlementTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EntitlementTimeout
void GlobalNamespace::EntitlementCheckManager::_set_EntitlementTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::_set_EntitlementTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementCheckManager", "EntitlementTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean KillAppOnEntitlementFailure
bool GlobalNamespace::EntitlementCheckManager::_get_KillAppOnEntitlementFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::_get_KillAppOnEntitlementFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "EntitlementCheckManager", "KillAppOnEntitlementFailure"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean KillAppOnEntitlementFailure
void GlobalNamespace::EntitlementCheckManager::_set_KillAppOnEntitlementFailure(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::_set_KillAppOnEntitlementFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementCheckManager", "KillAppOnEntitlementFailure", value));
}
// Autogenerated instance field getter
// Get instance field: public EntitlementCheckManager/EntitlementPlatforms entitlementPlatform
::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms& GlobalNamespace::EntitlementCheckManager::dyn_entitlementPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::dyn_entitlementPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entitlementPlatform"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::StringW& GlobalNamespace::EntitlementCheckManager::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isAwaitingEntitlementResults
bool& GlobalNamespace::EntitlementCheckManager::dyn__isAwaitingEntitlementResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::dyn__isAwaitingEntitlementResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isAwaitingEntitlementResults"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeEntitlementStarted
float& GlobalNamespace::EntitlementCheckManager::dyn__timeEntitlementStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::dyn__timeEntitlementStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeEntitlementStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EntitlementCheckManager.Awake
void GlobalNamespace::EntitlementCheckManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EntitlementCheckManager.Update
void GlobalNamespace::EntitlementCheckManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EntitlementCheckManager.EntitlementCallback
void GlobalNamespace::EntitlementCheckManager::EntitlementCallback(bool isEntitled, ::StringW entitlementUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEntitled), ::il2cpp_utils::ExtractType(entitlementUserId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isEntitled, entitlementUserId);
}
// Autogenerated method: EntitlementCheckManager.EntitlementCheckToUse
::GlobalNamespace::BaseEntitlementCheck* GlobalNamespace::EntitlementCheckManager::EntitlementCheckToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementCheckToUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitlementCheckToUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BaseEntitlementCheck*, false>(this, ___internal__method);
}
// Autogenerated method: EntitlementCheckManager.QuitApp
void GlobalNamespace::EntitlementCheckManager::QuitApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::QuitApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EntitlementCheckManager", "QuitApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EntitlementCheckManager/EntitlementPlatforms
#include "GlobalNamespace/EntitlementCheckManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EntitlementCheckManager/EntitlementPlatforms None
::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms>("", "EntitlementCheckManager/EntitlementPlatforms", "None"));
}
// Autogenerated static field setter
// Set static field: static public EntitlementCheckManager/EntitlementPlatforms None
void GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_set_None(::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementCheckManager/EntitlementPlatforms", "None", value));
}
// Autogenerated static field getter
// Get static field: static public EntitlementCheckManager/EntitlementPlatforms OculusQuest
::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_get_OculusQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_get_OculusQuest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms>("", "EntitlementCheckManager/EntitlementPlatforms", "OculusQuest"));
}
// Autogenerated static field setter
// Set static field: static public EntitlementCheckManager/EntitlementPlatforms OculusQuest
void GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_set_OculusQuest(::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_set_OculusQuest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementCheckManager/EntitlementPlatforms", "OculusQuest", value));
}
// Autogenerated static field getter
// Get static field: static public EntitlementCheckManager/EntitlementPlatforms Steam
::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms>("", "EntitlementCheckManager/EntitlementPlatforms", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public EntitlementCheckManager/EntitlementPlatforms Steam
void GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_set_Steam(::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementCheckManager/EntitlementPlatforms", "Steam", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementCheckManager::EntitlementPlatforms::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoneEntitlementCheck
#include "GlobalNamespace/NoneEntitlementCheck.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoneEntitlementCheck.IsEntitled
void GlobalNamespace::NoneEntitlementCheck::IsEntitled(::System::Action_2<bool, ::StringW>* entitlementManagerCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoneEntitlementCheck::IsEntitled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entitlementManagerCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entitlementManagerCallback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusEntitlementCheck
#include "GlobalNamespace/OculusEntitlementCheck.hpp"
// Including type: OculusEntitlementCheck/<>c__DisplayClass2_0
#include "GlobalNamespace/OculusEntitlementCheck_--c__DisplayClass2_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Boolean,System.String> _entitlementCallback
::System::Action_2<bool, ::StringW>*& GlobalNamespace::OculusEntitlementCheck::dyn__entitlementCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusEntitlementCheck::dyn__entitlementCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entitlementCallback"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusEntitlementCheck.EntitlementCallback
void GlobalNamespace::OculusEntitlementCheck::EntitlementCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusEntitlementCheck::EntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: OculusEntitlementCheck.IsEntitled
void GlobalNamespace::OculusEntitlementCheck::IsEntitled(::System::Action_2<bool, ::StringW>* entitlementManagerCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusEntitlementCheck::IsEntitled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entitlementManagerCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entitlementManagerCallback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusEntitlementCheck/<>c__DisplayClass2_0
#include "GlobalNamespace/OculusEntitlementCheck_--c__DisplayClass2_0.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusEntitlementCheck <>4__this
::GlobalNamespace::OculusEntitlementCheck*& GlobalNamespace::OculusEntitlementCheck::$$c__DisplayClass2_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusEntitlementCheck::$$c__DisplayClass2_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusEntitlementCheck**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message msg
::Oculus::Platform::Message*& GlobalNamespace::OculusEntitlementCheck::$$c__DisplayClass2_0::dyn_msg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusEntitlementCheck::$$c__DisplayClass2_0::dyn_msg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "msg"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusEntitlementCheck/<>c__DisplayClass2_0.<EntitlementCallback>b__0
void GlobalNamespace::OculusEntitlementCheck::$$c__DisplayClass2_0::$EntitlementCallback$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusEntitlementCheck::$$c__DisplayClass2_0::<EntitlementCallback>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<EntitlementCallback>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamEntitlementCheck
#include "GlobalNamespace/SteamEntitlementCheck.hpp"
// Including type: SteamManager
#include "GlobalNamespace/SteamManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SteamManager steamManager
::GlobalNamespace::SteamManager*& GlobalNamespace::SteamEntitlementCheck::dyn_steamManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamEntitlementCheck::dyn_steamManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "steamManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isCheckingEntitlement
bool& GlobalNamespace::SteamEntitlementCheck::dyn__isCheckingEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamEntitlementCheck::dyn__isCheckingEntitlement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCheckingEntitlement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamEntitlementCheck.IsEntitled
void GlobalNamespace::SteamEntitlementCheck::IsEntitled(::System::Action_2<bool, ::StringW>* entitlementCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamEntitlementCheck::IsEntitled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entitlementCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entitlementCallback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExceptionManager
#include "GlobalNamespace/ExceptionManager.hpp"
// Including type: ExceptionManager/<EnableReportingCooldown>d__7
#include "GlobalNamespace/ExceptionManager_-EnableReportingCooldown-d__7.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ExceptionsPerCooldown
int GlobalNamespace::ExceptionManager::_get_ExceptionsPerCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::_get_ExceptionsPerCooldown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ExceptionManager", "ExceptionsPerCooldown"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ExceptionsPerCooldown
void GlobalNamespace::ExceptionManager::_set_ExceptionsPerCooldown(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::_set_ExceptionsPerCooldown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ExceptionManager", "ExceptionsPerCooldown", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single CooldownTime
float GlobalNamespace::ExceptionManager::_get_CooldownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::_get_CooldownTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ExceptionManager", "CooldownTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single CooldownTime
void GlobalNamespace::ExceptionManager::_set_CooldownTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::_set_CooldownTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ExceptionManager", "CooldownTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _exceptionsLeftBeforeTimeout
int& GlobalNamespace::ExceptionManager::dyn__exceptionsLeftBeforeTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::dyn__exceptionsLeftBeforeTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exceptionsLeftBeforeTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _cooldownCoroutine
::UnityEngine::Coroutine*& GlobalNamespace::ExceptionManager::dyn__cooldownCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::dyn__cooldownCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cooldownCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExceptionManager.OnEnable
void GlobalNamespace::ExceptionManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExceptionManager.OnDisable
void GlobalNamespace::ExceptionManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExceptionManager.LogReceived
void GlobalNamespace::ExceptionManager::LogReceived(::StringW condition, ::StringW stacktrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::LogReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stacktrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, condition, stacktrace, type);
}
// Autogenerated method: ExceptionManager.EnableReportingCooldown
::System::Collections::IEnumerator* GlobalNamespace::ExceptionManager::EnableReportingCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::EnableReportingCooldown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableReportingCooldown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ExceptionManager/<EnableReportingCooldown>d__7
#include "GlobalNamespace/ExceptionManager_-EnableReportingCooldown-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExceptionManager <>4__this
::GlobalNamespace::ExceptionManager*& GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ExceptionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExceptionManager/<EnableReportingCooldown>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ExceptionManager/<EnableReportingCooldown>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ExceptionManager/<EnableReportingCooldown>d__7.System.IDisposable.Dispose
void GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExceptionManager/<EnableReportingCooldown>d__7.MoveNext
bool GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ExceptionManager/<EnableReportingCooldown>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExceptionManager::$EnableReportingCooldown$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeBrickMenu
#include "GlobalNamespace/FadeBrickMenu.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SliderGrabbable
#include "GlobalNamespace/SliderGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single _fadeDuration
float GlobalNamespace::FadeBrickMenu::_get__fadeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::_get__fadeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FadeBrickMenu", "_fadeDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single _fadeDuration
void GlobalNamespace::FadeBrickMenu::_set__fadeDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::_set__fadeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FadeBrickMenu", "_fadeDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 ScaleToStartAt
::UnityEngine::Vector3 GlobalNamespace::FadeBrickMenu::_get_ScaleToStartAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::_get_ScaleToStartAt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "FadeBrickMenu", "ScaleToStartAt"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 ScaleToStartAt
void GlobalNamespace::FadeBrickMenu::_set_ScaleToStartAt(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::_set_ScaleToStartAt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FadeBrickMenu", "ScaleToStartAt", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialScale
::UnityEngine::Vector3& GlobalNamespace::FadeBrickMenu::dyn__initialScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn__initialScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _t
::UnityEngine::Transform*& GlobalNamespace::FadeBrickMenu::dyn__t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn__t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_t"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeStartedFading
float& GlobalNamespace::FadeBrickMenu::dyn__timeStartedFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn__timeStartedFading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeStartedFading"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject objectToScale
::UnityEngine::GameObject*& GlobalNamespace::FadeBrickMenu::dyn_objectToScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn_objectToScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectToScale"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SliderGrabbable hueGrabber
::GlobalNamespace::SliderGrabbable*& GlobalNamespace::FadeBrickMenu::dyn_hueGrabber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn_hueGrabber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hueGrabber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SliderGrabbable satGrabber
::GlobalNamespace::SliderGrabbable*& GlobalNamespace::FadeBrickMenu::dyn_satGrabber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn_satGrabber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "satGrabber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SliderGrabbable valueGrabber
::GlobalNamespace::SliderGrabbable*& GlobalNamespace::FadeBrickMenu::dyn_valueGrabber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn_valueGrabber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueGrabber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadeBackwards
bool& GlobalNamespace::FadeBrickMenu::dyn__fadeBackwards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn__fadeBackwards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeBackwards"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::FadeBrickMenu::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeBrickMenu.Initialize
void GlobalNamespace::FadeBrickMenu::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeBrickMenu.OnEnable
void GlobalNamespace::FadeBrickMenu::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeBrickMenu.SetBackwardsFade
void GlobalNamespace::FadeBrickMenu::SetBackwardsFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::SetBackwardsFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBackwardsFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeBrickMenu.BeginGrow
void GlobalNamespace::FadeBrickMenu::BeginGrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::BeginGrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeBrickMenu.BeginShrink
void GlobalNamespace::FadeBrickMenu::BeginShrink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::BeginShrink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginShrink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeBrickMenu.Update
void GlobalNamespace::FadeBrickMenu::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeBrickMenu.FixSliderPositions
void GlobalNamespace::FadeBrickMenu::FixSliderPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::FixSliderPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixSliderPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeBrickMenu..cctor
void GlobalNamespace::FadeBrickMenu::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeBrickMenu::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FadeBrickMenu", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeObjectScaleOnSpawn
#include "GlobalNamespace/FadeObjectScaleOnSpawn.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single _fadeDuration
float GlobalNamespace::FadeObjectScaleOnSpawn::_get__fadeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::_get__fadeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FadeObjectScaleOnSpawn", "_fadeDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single _fadeDuration
void GlobalNamespace::FadeObjectScaleOnSpawn::_set__fadeDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::_set__fadeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FadeObjectScaleOnSpawn", "_fadeDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 ScaleToStartAt
::UnityEngine::Vector3 GlobalNamespace::FadeObjectScaleOnSpawn::_get_ScaleToStartAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::_get_ScaleToStartAt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "FadeObjectScaleOnSpawn", "ScaleToStartAt"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 ScaleToStartAt
void GlobalNamespace::FadeObjectScaleOnSpawn::_set_ScaleToStartAt(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::_set_ScaleToStartAt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FadeObjectScaleOnSpawn", "ScaleToStartAt", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialScale
::UnityEngine::Vector3& GlobalNamespace::FadeObjectScaleOnSpawn::dyn__initialScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::dyn__initialScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _t
::UnityEngine::Transform*& GlobalNamespace::FadeObjectScaleOnSpawn::dyn__t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::dyn__t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_t"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeStartedFading
float& GlobalNamespace::FadeObjectScaleOnSpawn::dyn__timeStartedFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::dyn__timeStartedFading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeStartedFading"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject objectToScale
::UnityEngine::GameObject*& GlobalNamespace::FadeObjectScaleOnSpawn::dyn_objectToScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::dyn_objectToScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectToScale"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadeBackwards
bool& GlobalNamespace::FadeObjectScaleOnSpawn::dyn__fadeBackwards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::dyn__fadeBackwards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeBackwards"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeObjectScaleOnSpawn.OnEnable
void GlobalNamespace::FadeObjectScaleOnSpawn::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeObjectScaleOnSpawn.SetBackwardsFade
void GlobalNamespace::FadeObjectScaleOnSpawn::SetBackwardsFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::SetBackwardsFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBackwardsFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeObjectScaleOnSpawn.Update
void GlobalNamespace::FadeObjectScaleOnSpawn::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeObjectScaleOnSpawn..cctor
void GlobalNamespace::FadeObjectScaleOnSpawn::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeObjectScaleOnSpawn::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FadeObjectScaleOnSpawn", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FallingBrick
#include "GlobalNamespace/FallingBrick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FallingBrick.Start
void GlobalNamespace::FallingBrick::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FallingBrick::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FallingBrickLowerTrigger
#include "GlobalNamespace/FallingBrickLowerTrigger.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FallingBrickLowerTrigger.OnTriggerEnter
void GlobalNamespace::FallingBrickLowerTrigger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FallingBrickLowerTrigger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FingertipReference
#include "GlobalNamespace/FingertipReference.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftIndexFingertip
::UnityEngine::GameObject*& GlobalNamespace::FingertipReference::dyn_leftIndexFingertip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FingertipReference::dyn_leftIndexFingertip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftIndexFingertip"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightIndexFingertip
::UnityEngine::GameObject*& GlobalNamespace::FingertipReference::dyn_rightIndexFingertip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FingertipReference::dyn_rightIndexFingertip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightIndexFingertip"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FocusCheck
#include "GlobalNamespace/FocusCheck.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI text
::TMPro::TextMeshProUGUI*& GlobalNamespace::FocusCheck::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FocusCheck::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FocusCheck.Start
void GlobalNamespace::FocusCheck::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FocusCheck::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FocusCheck.Update
void GlobalNamespace::FocusCheck::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FocusCheck::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Hammer
#include "GlobalNamespace/Hammer.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single explosionRadius
float& GlobalNamespace::Hammer::dyn_explosionRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Hammer::dyn_explosionRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "explosionRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single explositonPower
float& GlobalNamespace::Hammer::dyn_explositonPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Hammer::dyn_explositonPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "explositonPower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _results
::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::Hammer::dyn__results() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Hammer::dyn__results");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_results"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastExplosionFrame
int& GlobalNamespace::Hammer::dyn__lastExplosionFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Hammer::dyn__lastExplosionFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastExplosionFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Hammer.Awake
void GlobalNamespace::Hammer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Hammer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Hammer.OnCollisionEnter
void GlobalNamespace::Hammer::OnCollisionEnter(::UnityEngine::Collision* mainCollision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Hammer::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCollision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainCollision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandPoseId
#include "GlobalNamespace/HandPoseId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HandPoseId Default
::GlobalNamespace::HandPoseId GlobalNamespace::HandPoseId::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandPoseId>("", "HandPoseId", "Default"));
}
// Autogenerated static field setter
// Set static field: static public HandPoseId Default
void GlobalNamespace::HandPoseId::_set_Default(::GlobalNamespace::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandPoseId", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public HandPoseId Generic
::GlobalNamespace::HandPoseId GlobalNamespace::HandPoseId::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandPoseId>("", "HandPoseId", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public HandPoseId Generic
void GlobalNamespace::HandPoseId::_set_Generic(::GlobalNamespace::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandPoseId", "Generic", value));
}
// Autogenerated static field getter
// Get static field: static public HandPoseId PingPongBall
::GlobalNamespace::HandPoseId GlobalNamespace::HandPoseId::_get_PingPongBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_get_PingPongBall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandPoseId>("", "HandPoseId", "PingPongBall"));
}
// Autogenerated static field setter
// Set static field: static public HandPoseId PingPongBall
void GlobalNamespace::HandPoseId::_set_PingPongBall(::GlobalNamespace::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_set_PingPongBall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandPoseId", "PingPongBall", value));
}
// Autogenerated static field getter
// Get static field: static public HandPoseId Controller
::GlobalNamespace::HandPoseId GlobalNamespace::HandPoseId::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandPoseId>("", "HandPoseId", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public HandPoseId Controller
void GlobalNamespace::HandPoseId::_set_Controller(::GlobalNamespace::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandPoseId", "Controller", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::HandPoseId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPoseId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandPose
#include "GlobalNamespace/HandPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowPointing
bool& GlobalNamespace::HandPose::dyn_m_allowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPose::dyn_m_allowPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowThumbsUp
bool& GlobalNamespace::HandPose::dyn_m_allowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPose::dyn_m_allowThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandPoseId m_poseId
::GlobalNamespace::HandPoseId& GlobalNamespace::HandPose::dyn_m_poseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPose::dyn_m_poseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poseId"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandPoseId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandPose.get_AllowPointing
bool GlobalNamespace::HandPose::get_AllowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPose::get_AllowPointing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowPointing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HandPose.get_AllowThumbsUp
bool GlobalNamespace::HandPose::get_AllowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPose::get_AllowThumbsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowThumbsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HandPose.get_PoseId
::GlobalNamespace::HandPoseId GlobalNamespace::HandPose::get_PoseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandPose::get_PoseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PoseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HandPoseId, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandBrickSpawner
#include "GlobalNamespace/HandBrickSpawner.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: HandBrickSpawner/<>c
#include "GlobalNamespace/HandBrickSpawner_--c.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
// Including type: BrickHover
#include "GlobalNamespace/BrickHover.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: QuickInteractor
#include "GlobalNamespace/QuickInteractor.hpp"
// Including type: HapticsManager
#include "GlobalNamespace/HapticsManager.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHand
bool& GlobalNamespace::HandBrickSpawner::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject spawnLocation
::UnityEngine::GameObject*& GlobalNamespace::HandBrickSpawner::dyn_spawnLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn_spawnLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip sound
::UnityEngine::AudioClip*& GlobalNamespace::HandBrickSpawner::dyn_sound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn_sound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager normalSessionManager
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::HandBrickSpawner::dyn_normalSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn_normalSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrickHover _brickHover
::GlobalNamespace::BrickHover*& GlobalNamespace::HandBrickSpawner::dyn__brickHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn__brickHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickHover"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickHover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OVRInput/Button,HandBrickSpawner/ButtonDownInfo> _infoForButtons
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRInput::Button, ::GlobalNamespace::HandBrickSpawner::ButtonDownInfo>*& GlobalNamespace::HandBrickSpawner::dyn__infoForButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn__infoForButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_infoForButtons"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRInput::Button, ::GlobalNamespace::HandBrickSpawner::ButtonDownInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Button[] _buttons
::ArrayW<::GlobalNamespace::OVRInput::Button>& GlobalNamespace::HandBrickSpawner::dyn__buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn__buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::Button>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor _interactor
::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor*& GlobalNamespace::HandBrickSpawner::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private QuickInteractor _quickInteractor
::GlobalNamespace::QuickInteractor*& GlobalNamespace::HandBrickSpawner::dyn__quickInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn__quickInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quickInteractor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HapticsManager _hapticsManager
::GlobalNamespace::HapticsManager*& GlobalNamespace::HandBrickSpawner::dyn__hapticsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn__hapticsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HapticsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime _realtime
::Normal::Realtime::Realtime*& GlobalNamespace::HandBrickSpawner::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spawnerSetIndex
int& GlobalNamespace::HandBrickSpawner::dyn_spawnerSetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::dyn_spawnerSetIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnerSetIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandBrickSpawner.Start
void GlobalNamespace::HandBrickSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandBrickSpawner.Update
void GlobalNamespace::HandBrickSpawner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandBrickSpawner.CheckButtonDown
void GlobalNamespace::HandBrickSpawner::CheckButtonDown(::GlobalNamespace::OVRInput::Button button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::CheckButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button);
}
// Autogenerated method: HandBrickSpawner.HandleButtonHold
void GlobalNamespace::HandBrickSpawner::HandleButtonHold(::GlobalNamespace::OVRInput::Button button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::HandleButtonHold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonHold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button);
}
// Autogenerated method: HandBrickSpawner.HandleButtonPress
void GlobalNamespace::HandBrickSpawner::HandleButtonPress(::GlobalNamespace::OVRInput::Button button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::HandleButtonPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button);
}
// Autogenerated method: HandBrickSpawner.IsDebugTrue
bool GlobalNamespace::HandBrickSpawner::IsDebugTrue(::GlobalNamespace::OVRInput::Button button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::IsDebugTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDebugTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: HandBrickSpawner.HoveredBrick
::UnityEngine::GameObject* GlobalNamespace::HandBrickSpawner::HoveredBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::HoveredBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoveredBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandBrickSpawner/ButtonDownInfo
#include "GlobalNamespace/HandBrickSpawner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _buttonDownAt
int& GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn__buttonDownAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn__buttonDownAt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonDownAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SavedPrefabName
::StringW& GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn_SavedPrefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn_SavedPrefabName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SavedPrefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SavedColor
int& GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn_SavedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn_SavedColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SavedColor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ButtonHoldCallbackCalled
bool& GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn_ButtonHoldCallbackCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::ButtonDownInfo::dyn_ButtonHoldCallbackCalled");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ButtonHoldCallbackCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandBrickSpawner/ButtonDownInfo.get_ButtonDown
bool GlobalNamespace::HandBrickSpawner::ButtonDownInfo::get_ButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::ButtonDownInfo::get_ButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HandBrickSpawner/ButtonDownInfo.set_ButtonDown
void GlobalNamespace::HandBrickSpawner::ButtonDownInfo::set_ButtonDown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::ButtonDownInfo::set_ButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandBrickSpawner/ButtonDownInfo.get_FramesDownFor
int GlobalNamespace::HandBrickSpawner::ButtonDownInfo::get_FramesDownFor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::ButtonDownInfo::get_FramesDownFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_FramesDownFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandBrickSpawner/<>c
#include "GlobalNamespace/HandBrickSpawner_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HandBrickSpawner/<>c <>9
::GlobalNamespace::HandBrickSpawner::$$c* GlobalNamespace::HandBrickSpawner::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::HandBrickSpawner::$$c*>("", "HandBrickSpawner/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HandBrickSpawner/<>c <>9
void GlobalNamespace::HandBrickSpawner::$$c::_set_$$9(::GlobalNamespace::HandBrickSpawner::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "HandBrickSpawner/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__18_0
::System::Func_2<::UnityEngine::GameObject*, bool>* GlobalNamespace::HandBrickSpawner::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::GameObject*, bool>*>("", "HandBrickSpawner/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__18_0
void GlobalNamespace::HandBrickSpawner::$$c::_set_$$9__18_0(::System::Func_2<::UnityEngine::GameObject*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "HandBrickSpawner/<>c", "<>9__18_0", value)));
}
// Autogenerated method: HandBrickSpawner/<>c..cctor
void GlobalNamespace::HandBrickSpawner::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HandBrickSpawner/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HandBrickSpawner/<>c.<HoveredBrick>b__18_0
bool GlobalNamespace::HandBrickSpawner::$$c::$HoveredBrick$b__18_0(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandBrickSpawner::$$c::<HoveredBrick>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HoveredBrick>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandColorModel
#include "GlobalNamespace/HandColorModel.hpp"
// Including type: HandColorModel/PropertyChangedHandler`1
#include "GlobalNamespace/HandColorModel_PropertyChangedHandler_1.hpp"
// Including type: HandColorModel/PropertyID
#include "GlobalNamespace/HandColorModel_PropertyID.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::HandColorModel::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandColorModel/PropertyChangedHandler`1<UnityEngine.Color> colorDidChange
::GlobalNamespace::HandColorModel::PropertyChangedHandler_1<::UnityEngine::Color>*& GlobalNamespace::HandColorModel::dyn_colorDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::dyn_colorDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandColorModel::PropertyChangedHandler_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<UnityEngine.Color> _colorProperty
::Normal::Realtime::ReliableProperty_1<::UnityEngine::Color>*& GlobalNamespace::HandColorModel::dyn__colorProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::dyn__colorProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandColorModel.get_color
::UnityEngine::Color GlobalNamespace::HandColorModel::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HandColorModel.set_color
void GlobalNamespace::HandColorModel::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandColorModel.add_colorDidChange
void GlobalNamespace::HandColorModel::add_colorDidChange(::GlobalNamespace::HandColorModel::PropertyChangedHandler_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::add_colorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandColorModel.remove_colorDidChange
void GlobalNamespace::HandColorModel::remove_colorDidChange(::GlobalNamespace::HandColorModel::PropertyChangedHandler_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::remove_colorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandColorModel.FireColorDidChange
void GlobalNamespace::HandColorModel::FireColorDidChange(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::FireColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandColorModel.UpdateBackingFields
void GlobalNamespace::HandColorModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandColorModel.OnParentReplaced
void GlobalNamespace::HandColorModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnParentReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousParent), ::il2cpp_utils::ExtractType(currentParent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: HandColorModel.WriteLength
int GlobalNamespace::HandColorModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: HandColorModel.Write
void GlobalNamespace::HandColorModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: HandColorModel.Read
void GlobalNamespace::HandColorModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandColorModel/PropertyID
#include "GlobalNamespace/HandColorModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HandColorModel/PropertyID Color
::GlobalNamespace::HandColorModel::PropertyID GlobalNamespace::HandColorModel::PropertyID::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::PropertyID::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandColorModel::PropertyID>("", "HandColorModel/PropertyID", "Color"));
}
// Autogenerated static field setter
// Set static field: static public HandColorModel/PropertyID Color
void GlobalNamespace::HandColorModel::PropertyID::_set_Color(::GlobalNamespace::HandColorModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::PropertyID::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandColorModel/PropertyID", "Color", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& GlobalNamespace::HandColorModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandColorModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandGestureModel
#include "GlobalNamespace/HandGestureModel.hpp"
// Including type: HandGestureModel/PropertyChangedHandler`1
#include "GlobalNamespace/HandGestureModel_PropertyChangedHandler_1.hpp"
// Including type: HandGestureModel/PropertyID
#include "GlobalNamespace/HandGestureModel_PropertyID.hpp"
// Including type: Normal.Realtime.UnreliableProperty`1
#include "Normal/Realtime/UnreliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _handPoseId
int& GlobalNamespace::HandGestureModel::dyn__handPoseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__handPoseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handPoseId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _flex
float& GlobalNamespace::HandGestureModel::dyn__flex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__flex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flex"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _point
float& GlobalNamespace::HandGestureModel::dyn__point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__point");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_point"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _thumbsUp
float& GlobalNamespace::HandGestureModel::dyn__thumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__thumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thumbsUp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pinch
float& GlobalNamespace::HandGestureModel::dyn__pinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__pinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandGestureModel/PropertyChangedHandler`1<System.Int32> handPoseIdDidChange
::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<int>*& GlobalNamespace::HandGestureModel::dyn_handPoseIdDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn_handPoseIdDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handPoseIdDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandGestureModel/PropertyChangedHandler`1<System.Single> flexDidChange
::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>*& GlobalNamespace::HandGestureModel::dyn_flexDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn_flexDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flexDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandGestureModel/PropertyChangedHandler`1<System.Single> pointDidChange
::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>*& GlobalNamespace::HandGestureModel::dyn_pointDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn_pointDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pointDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandGestureModel/PropertyChangedHandler`1<System.Single> thumbsUpDidChange
::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>*& GlobalNamespace::HandGestureModel::dyn_thumbsUpDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn_thumbsUpDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thumbsUpDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandGestureModel/PropertyChangedHandler`1<System.Single> pinchDidChange
::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>*& GlobalNamespace::HandGestureModel::dyn_pinchDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn_pinchDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pinchDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<System.Int32> _handPoseIdProperty
::Normal::Realtime::UnreliableProperty_1<int>*& GlobalNamespace::HandGestureModel::dyn__handPoseIdProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__handPoseIdProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handPoseIdProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<System.Single> _flexProperty
::Normal::Realtime::UnreliableProperty_1<float>*& GlobalNamespace::HandGestureModel::dyn__flexProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__flexProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flexProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<System.Single> _pointProperty
::Normal::Realtime::UnreliableProperty_1<float>*& GlobalNamespace::HandGestureModel::dyn__pointProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__pointProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<System.Single> _thumbsUpProperty
::Normal::Realtime::UnreliableProperty_1<float>*& GlobalNamespace::HandGestureModel::dyn__thumbsUpProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__thumbsUpProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thumbsUpProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.UnreliableProperty`1<System.Single> _pinchProperty
::Normal::Realtime::UnreliableProperty_1<float>*& GlobalNamespace::HandGestureModel::dyn__pinchProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::dyn__pinchProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::UnreliableProperty_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandGestureModel.get_handPoseId
int GlobalNamespace::HandGestureModel::get_handPoseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::get_handPoseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handPoseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HandGestureModel.set_handPoseId
void GlobalNamespace::HandGestureModel::set_handPoseId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::set_handPoseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handPoseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.get_flex
float GlobalNamespace::HandGestureModel::get_flex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::get_flex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HandGestureModel.set_flex
void GlobalNamespace::HandGestureModel::set_flex(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::set_flex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.get_point
float GlobalNamespace::HandGestureModel::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HandGestureModel.set_point
void GlobalNamespace::HandGestureModel::set_point(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::set_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.get_thumbsUp
float GlobalNamespace::HandGestureModel::get_thumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::get_thumbsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thumbsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HandGestureModel.set_thumbsUp
void GlobalNamespace::HandGestureModel::set_thumbsUp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::set_thumbsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thumbsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.get_pinch
float GlobalNamespace::HandGestureModel::get_pinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::get_pinch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pinch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HandGestureModel.set_pinch
void GlobalNamespace::HandGestureModel::set_pinch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::set_pinch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pinch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.add_handPoseIdDidChange
void GlobalNamespace::HandGestureModel::add_handPoseIdDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::add_handPoseIdDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_handPoseIdDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.remove_handPoseIdDidChange
void GlobalNamespace::HandGestureModel::remove_handPoseIdDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::remove_handPoseIdDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_handPoseIdDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.add_flexDidChange
void GlobalNamespace::HandGestureModel::add_flexDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::add_flexDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_flexDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.remove_flexDidChange
void GlobalNamespace::HandGestureModel::remove_flexDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::remove_flexDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_flexDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.add_pointDidChange
void GlobalNamespace::HandGestureModel::add_pointDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::add_pointDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_pointDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.remove_pointDidChange
void GlobalNamespace::HandGestureModel::remove_pointDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::remove_pointDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_pointDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.add_thumbsUpDidChange
void GlobalNamespace::HandGestureModel::add_thumbsUpDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::add_thumbsUpDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_thumbsUpDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.remove_thumbsUpDidChange
void GlobalNamespace::HandGestureModel::remove_thumbsUpDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::remove_thumbsUpDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_thumbsUpDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.add_pinchDidChange
void GlobalNamespace::HandGestureModel::add_pinchDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::add_pinchDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_pinchDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.remove_pinchDidChange
void GlobalNamespace::HandGestureModel::remove_pinchDidChange(::GlobalNamespace::HandGestureModel::PropertyChangedHandler_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::remove_pinchDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_pinchDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.FireHandPoseIdDidChange
void GlobalNamespace::HandGestureModel::FireHandPoseIdDidChange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::FireHandPoseIdDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireHandPoseIdDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.FireFlexDidChange
void GlobalNamespace::HandGestureModel::FireFlexDidChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::FireFlexDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireFlexDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.FirePointDidChange
void GlobalNamespace::HandGestureModel::FirePointDidChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::FirePointDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirePointDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.FireThumbsUpDidChange
void GlobalNamespace::HandGestureModel::FireThumbsUpDidChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::FireThumbsUpDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireThumbsUpDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.FirePinchDidChange
void GlobalNamespace::HandGestureModel::FirePinchDidChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::FirePinchDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirePinchDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HandGestureModel.UpdateBackingFields
void GlobalNamespace::HandGestureModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandGestureModel.WriteLength
int GlobalNamespace::HandGestureModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: HandGestureModel.Write
void GlobalNamespace::HandGestureModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: HandGestureModel.Read
void GlobalNamespace::HandGestureModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandGestureModel/PropertyID
#include "GlobalNamespace/HandGestureModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HandGestureModel/PropertyID HandPoseId
::GlobalNamespace::HandGestureModel::PropertyID GlobalNamespace::HandGestureModel::PropertyID::_get_HandPoseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_get_HandPoseId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandGestureModel::PropertyID>("", "HandGestureModel/PropertyID", "HandPoseId"));
}
// Autogenerated static field setter
// Set static field: static public HandGestureModel/PropertyID HandPoseId
void GlobalNamespace::HandGestureModel::PropertyID::_set_HandPoseId(::GlobalNamespace::HandGestureModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_set_HandPoseId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandGestureModel/PropertyID", "HandPoseId", value));
}
// Autogenerated static field getter
// Get static field: static public HandGestureModel/PropertyID Flex
::GlobalNamespace::HandGestureModel::PropertyID GlobalNamespace::HandGestureModel::PropertyID::_get_Flex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_get_Flex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandGestureModel::PropertyID>("", "HandGestureModel/PropertyID", "Flex"));
}
// Autogenerated static field setter
// Set static field: static public HandGestureModel/PropertyID Flex
void GlobalNamespace::HandGestureModel::PropertyID::_set_Flex(::GlobalNamespace::HandGestureModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_set_Flex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandGestureModel/PropertyID", "Flex", value));
}
// Autogenerated static field getter
// Get static field: static public HandGestureModel/PropertyID Point
::GlobalNamespace::HandGestureModel::PropertyID GlobalNamespace::HandGestureModel::PropertyID::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandGestureModel::PropertyID>("", "HandGestureModel/PropertyID", "Point"));
}
// Autogenerated static field setter
// Set static field: static public HandGestureModel/PropertyID Point
void GlobalNamespace::HandGestureModel::PropertyID::_set_Point(::GlobalNamespace::HandGestureModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandGestureModel/PropertyID", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public HandGestureModel/PropertyID ThumbsUp
::GlobalNamespace::HandGestureModel::PropertyID GlobalNamespace::HandGestureModel::PropertyID::_get_ThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_get_ThumbsUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandGestureModel::PropertyID>("", "HandGestureModel/PropertyID", "ThumbsUp"));
}
// Autogenerated static field setter
// Set static field: static public HandGestureModel/PropertyID ThumbsUp
void GlobalNamespace::HandGestureModel::PropertyID::_set_ThumbsUp(::GlobalNamespace::HandGestureModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_set_ThumbsUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandGestureModel/PropertyID", "ThumbsUp", value));
}
// Autogenerated static field getter
// Get static field: static public HandGestureModel/PropertyID Pinch
::GlobalNamespace::HandGestureModel::PropertyID GlobalNamespace::HandGestureModel::PropertyID::_get_Pinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_get_Pinch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HandGestureModel::PropertyID>("", "HandGestureModel/PropertyID", "Pinch"));
}
// Autogenerated static field setter
// Set static field: static public HandGestureModel/PropertyID Pinch
void GlobalNamespace::HandGestureModel::PropertyID::_set_Pinch(::GlobalNamespace::HandGestureModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::_set_Pinch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HandGestureModel/PropertyID", "Pinch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& GlobalNamespace::HandGestureModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandGestureModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandReference
#include "GlobalNamespace/HandReference.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftHand
::UnityEngine::GameObject*& GlobalNamespace::HandReference::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandReference::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightHand
::UnityEngine::GameObject*& GlobalNamespace::HandReference::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandReference::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HapticsManager
#include "GlobalNamespace/HapticsManager.hpp"
// Including type: HapticsManager/<PlayHapticsIEnum>d__5
#include "GlobalNamespace/HapticsManager_-PlayHapticsIEnum-d__5.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private HapticsManager _instance
::GlobalNamespace::HapticsManager* GlobalNamespace::HapticsManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HapticsManager*>("", "HapticsManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private HapticsManager _instance
void GlobalNamespace::HapticsManager::_set__instance(::GlobalNamespace::HapticsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HapticsManager", "_instance", value));
}
// Autogenerated method: HapticsManager.GetInstance
::GlobalNamespace::HapticsManager* GlobalNamespace::HapticsManager::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HapticsManager", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HapticsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HapticsManager.PlayHaptics
void GlobalNamespace::HapticsManager::PlayHaptics(float frequency, float amplitude, float duration, bool rightHand, bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::PlayHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(rightHand), ::il2cpp_utils::ExtractType(leftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency, amplitude, duration, rightHand, leftHand);
}
// Autogenerated method: HapticsManager.StartHaptics
void GlobalNamespace::HapticsManager::StartHaptics(float frequency, float amplitude, bool rightHand, bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::StartHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(rightHand), ::il2cpp_utils::ExtractType(leftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency, amplitude, rightHand, leftHand);
}
// Autogenerated method: HapticsManager.EndHaptics
void GlobalNamespace::HapticsManager::EndHaptics(bool rightHand, bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::EndHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rightHand), ::il2cpp_utils::ExtractType(leftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rightHand, leftHand);
}
// Autogenerated method: HapticsManager.PlayHapticsIEnum
::System::Collections::IEnumerator* GlobalNamespace::HapticsManager::PlayHapticsIEnum(float frequency, float amplitude, float duration, bool rightHand, bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::PlayHapticsIEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HapticsManager", "PlayHapticsIEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(rightHand), ::il2cpp_utils::ExtractType(leftHand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frequency, amplitude, duration, rightHand, leftHand);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HapticsManager/<PlayHapticsIEnum>d__5
#include "GlobalNamespace/HapticsManager_-PlayHapticsIEnum-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightHand
bool& GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
float& GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amplitude
float& GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHand
bool& GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
float& GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HapticsManager/<PlayHapticsIEnum>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HapticsManager/<PlayHapticsIEnum>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HapticsManager/<PlayHapticsIEnum>d__5.System.IDisposable.Dispose
void GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HapticsManager/<PlayHapticsIEnum>d__5.MoveNext
bool GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HapticsManager/<PlayHapticsIEnum>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HapticsManager::$PlayHapticsIEnum$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InitialTransformModel
#include "GlobalNamespace/InitialTransformModel.hpp"
// Including type: InitialTransformModel/PropertyChangedHandler`1
#include "GlobalNamespace/InitialTransformModel_PropertyChangedHandler_1.hpp"
// Including type: InitialTransformModel/PropertyID
#include "GlobalNamespace/InitialTransformModel_PropertyID.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
::UnityEngine::Vector3& GlobalNamespace::InitialTransformModel::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
::UnityEngine::Quaternion& GlobalNamespace::InitialTransformModel::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InitialTransformModel/PropertyChangedHandler`1<UnityEngine.Vector3> positionDidChange
::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Vector3>*& GlobalNamespace::InitialTransformModel::dyn_positionDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::dyn_positionDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InitialTransformModel/PropertyChangedHandler`1<UnityEngine.Quaternion> rotationDidChange
::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Quaternion>*& GlobalNamespace::InitialTransformModel::dyn_rotationDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::dyn_rotationDidChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationDidChange"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<UnityEngine.Vector3> _positionProperty
::Normal::Realtime::ReliableProperty_1<::UnityEngine::Vector3>*& GlobalNamespace::InitialTransformModel::dyn__positionProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::dyn__positionProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<UnityEngine.Quaternion> _rotationProperty
::Normal::Realtime::ReliableProperty_1<::UnityEngine::Quaternion>*& GlobalNamespace::InitialTransformModel::dyn__rotationProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::dyn__rotationProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InitialTransformModel.get_position
::UnityEngine::Vector3 GlobalNamespace::InitialTransformModel::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: InitialTransformModel.set_position
void GlobalNamespace::InitialTransformModel::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.get_rotation
::UnityEngine::Quaternion GlobalNamespace::InitialTransformModel::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: InitialTransformModel.set_rotation
void GlobalNamespace::InitialTransformModel::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.add_positionDidChange
void GlobalNamespace::InitialTransformModel::add_positionDidChange(::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::add_positionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_positionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.remove_positionDidChange
void GlobalNamespace::InitialTransformModel::remove_positionDidChange(::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::remove_positionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_positionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.add_rotationDidChange
void GlobalNamespace::InitialTransformModel::add_rotationDidChange(::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::add_rotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_rotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.remove_rotationDidChange
void GlobalNamespace::InitialTransformModel::remove_rotationDidChange(::GlobalNamespace::InitialTransformModel::PropertyChangedHandler_1<::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::remove_rotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_rotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.FirePositionDidChange
void GlobalNamespace::InitialTransformModel::FirePositionDidChange(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::FirePositionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirePositionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.FireRotationDidChange
void GlobalNamespace::InitialTransformModel::FireRotationDidChange(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::FireRotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireRotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InitialTransformModel.UpdateBackingFields
void GlobalNamespace::InitialTransformModel::UpdateBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::UpdateBackingFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBackingFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InitialTransformModel.OnParentReplaced
void GlobalNamespace::InitialTransformModel::OnParentReplaced(::Normal::Realtime::RealtimeModel* previousParent, ::Normal::Realtime::RealtimeModel* currentParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::OnParentReplaced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnParentReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousParent), ::il2cpp_utils::ExtractType(currentParent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousParent, currentParent);
}
// Autogenerated method: InitialTransformModel.WriteLength
int GlobalNamespace::InitialTransformModel::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: InitialTransformModel.Write
void GlobalNamespace::InitialTransformModel::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: InitialTransformModel.Read
void GlobalNamespace::InitialTransformModel::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InitialTransformModel/PropertyID
#include "GlobalNamespace/InitialTransformModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public InitialTransformModel/PropertyID Position
::GlobalNamespace::InitialTransformModel::PropertyID GlobalNamespace::InitialTransformModel::PropertyID::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::PropertyID::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InitialTransformModel::PropertyID>("", "InitialTransformModel/PropertyID", "Position"));
}
// Autogenerated static field setter
// Set static field: static public InitialTransformModel/PropertyID Position
void GlobalNamespace::InitialTransformModel::PropertyID::_set_Position(::GlobalNamespace::InitialTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::PropertyID::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InitialTransformModel/PropertyID", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public InitialTransformModel/PropertyID Rotation
::GlobalNamespace::InitialTransformModel::PropertyID GlobalNamespace::InitialTransformModel::PropertyID::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::PropertyID::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InitialTransformModel::PropertyID>("", "InitialTransformModel/PropertyID", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public InitialTransformModel/PropertyID Rotation
void GlobalNamespace::InitialTransformModel::PropertyID::_set_Rotation(::GlobalNamespace::InitialTransformModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::PropertyID::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InitialTransformModel/PropertyID", "Rotation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& GlobalNamespace::InitialTransformModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InitialTransformSync
#include "GlobalNamespace/InitialTransformSync.hpp"
// Including type: InitialTransformModel
#include "GlobalNamespace/InitialTransformModel.hpp"
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
// Including type: UserSettings
#include "GlobalNamespace/UserSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NormalSessionManager _normalSessionManager
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::InitialTransformSync::dyn__normalSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::dyn__normalSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UserSettings _userSettings
::GlobalNamespace::UserSettings*& GlobalNamespace::InitialTransformSync::dyn__userSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::dyn__userSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InitialTransformSync.Awake
void GlobalNamespace::InitialTransformSync::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InitialTransformSync.PositionSet
void GlobalNamespace::InitialTransformSync::PositionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::PositionSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InitialTransformSync.RotationSet
void GlobalNamespace::InitialTransformSync::RotationSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::RotationSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotationSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InitialTransformSync.OnRealtimeModelReplaced
void GlobalNamespace::InitialTransformSync::OnRealtimeModelReplaced(::GlobalNamespace::InitialTransformModel* previousModel, ::GlobalNamespace::InitialTransformModel* currentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::OnRealtimeModelReplaced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRealtimeModelReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousModel), ::il2cpp_utils::ExtractType(currentModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousModel, currentModel);
}
// Autogenerated method: InitialTransformSync.PositionDidChange
void GlobalNamespace::InitialTransformSync::PositionDidChange(::GlobalNamespace::InitialTransformModel* model, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::PositionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: InitialTransformSync.RotationDidChange
void GlobalNamespace::InitialTransformSync::RotationDidChange(::GlobalNamespace::InitialTransformModel* model, ::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::RotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, value);
}
// Autogenerated method: InitialTransformSync.SetPosition
void GlobalNamespace::InitialTransformSync::SetPosition(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: InitialTransformSync.SetRotation
void GlobalNamespace::InitialTransformSync::SetRotation(::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitialTransformSync::SetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InitializeMaximumAngularVelocity
#include "GlobalNamespace/InitializeMaximumAngularVelocity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single initialMaximumAngularVelocity
float& GlobalNamespace::InitializeMaximumAngularVelocity::dyn_initialMaximumAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitializeMaximumAngularVelocity::dyn_initialMaximumAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialMaximumAngularVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InitializeMaximumAngularVelocity.Start
void GlobalNamespace::InitializeMaximumAngularVelocity::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitializeMaximumAngularVelocity::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InitializeNewMenu
#include "GlobalNamespace/InitializeNewMenu.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainMenu
::UnityEngine::GameObject*& GlobalNamespace::InitializeNewMenu::dyn_mainMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitializeNewMenu::dyn_mainMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject optionsMenu
::UnityEngine::GameObject*& GlobalNamespace::InitializeNewMenu::dyn_optionsMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitializeNewMenu::dyn_optionsMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "optionsMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InitializeNewMenu.Start
void GlobalNamespace::InitializeNewMenu::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InitializeNewMenu::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JoystickLocomotion
#include "GlobalNamespace/JoystickLocomotion.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: KeepPlayerOutOfWalls
#include "GlobalNamespace/KeepPlayerOutOfWalls.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject head
::UnityEngine::GameObject*& GlobalNamespace::JoystickLocomotion::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KeepPlayerOutOfWalls keepPlayerOutOfWalls
::GlobalNamespace::KeepPlayerOutOfWalls*& GlobalNamespace::JoystickLocomotion::dyn_keepPlayerOutOfWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_keepPlayerOutOfWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keepPlayerOutOfWalls"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KeepPlayerOutOfWalls**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _currentLeftJoystickDirection
::UnityEngine::Vector2& GlobalNamespace::JoystickLocomotion::dyn__currentLeftJoystickDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn__currentLeftJoystickDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentLeftJoystickDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _currentRightJoystickDirection
::UnityEngine::Vector2& GlobalNamespace::JoystickLocomotion::dyn__currentRightJoystickDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn__currentRightJoystickDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRightJoystickDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single minY
float& GlobalNamespace::JoystickLocomotion::dyn_minY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_minY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lateralMovementMultiplier
float& GlobalNamespace::JoystickLocomotion::dyn_lateralMovementMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_lateralMovementMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lateralMovementMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single verticalMovementMultiplier
float& GlobalNamespace::JoystickLocomotion::dyn_verticalMovementMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_verticalMovementMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalMovementMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single joystickDeadzone
float& GlobalNamespace::JoystickLocomotion::dyn_joystickDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_joystickDeadzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickDeadzone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _movementSpeedSetting
float& GlobalNamespace::JoystickLocomotion::dyn__movementSpeedSetting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn__movementSpeedSetting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementSpeedSetting"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
::UnityEngine::Transform*& GlobalNamespace::JoystickLocomotion::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lateralMovementIndex
int& GlobalNamespace::JoystickLocomotion::dyn_lateralMovementIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_lateralMovementIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lateralMovementIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 verticalMovementIndex
int& GlobalNamespace::JoystickLocomotion::dyn_verticalMovementIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_verticalMovementIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalMovementIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerScaleMultiplier
float& GlobalNamespace::JoystickLocomotion::dyn_playerScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::dyn_playerScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerScaleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: JoystickLocomotion.Start
void GlobalNamespace::JoystickLocomotion::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoystickLocomotion.SetMovementSpeedSetting
void GlobalNamespace::JoystickLocomotion::SetMovementSpeedSetting(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::SetMovementSpeedSetting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMovementSpeedSetting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoystickLocomotion.Update
void GlobalNamespace::JoystickLocomotion::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoystickLocomotion.MovePlayer
void GlobalNamespace::JoystickLocomotion::MovePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoystickLocomotion::MovePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KeepPlayerOutOfWalls
#include "GlobalNamespace/KeepPlayerOutOfWalls.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
// Including type: AdjustPlayerScale
#include "GlobalNamespace/AdjustPlayerScale.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRRig rig
::UnityEngine::XR::Interaction::Toolkit::XRRig*& GlobalNamespace::KeepPlayerOutOfWalls::dyn_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn_rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rig"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
::UnityEngine::LayerMask& GlobalNamespace::KeepPlayerOutOfWalls::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdjustPlayerScale adjustPlayerScale
::GlobalNamespace::AdjustPlayerScale*& GlobalNamespace::KeepPlayerOutOfWalls::dyn_adjustPlayerScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn_adjustPlayerScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjustPlayerScale"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdjustPlayerScale**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastGoodPosition
::UnityEngine::Vector3& GlobalNamespace::KeepPlayerOutOfWalls::dyn__lastGoodPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn__lastGoodPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastGoodPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::KeepPlayerOutOfWalls::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SphereCollider _collider
::UnityEngine::SphereCollider*& GlobalNamespace::KeepPlayerOutOfWalls::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wallClipAllowed
bool& GlobalNamespace::KeepPlayerOutOfWalls::dyn__wallClipAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn__wallClipAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wallClipAllowed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Collider> _collidersCollidingWith
::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::KeepPlayerOutOfWalls::dyn__collidersCollidingWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::dyn__collidersCollidingWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collidersCollidingWith"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KeepPlayerOutOfWalls.get_CollidingWithObjects
bool GlobalNamespace::KeepPlayerOutOfWalls::get_CollidingWithObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::get_CollidingWithObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollidingWithObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KeepPlayerOutOfWalls.Start
void GlobalNamespace::KeepPlayerOutOfWalls::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KeepPlayerOutOfWalls.LateUpdate
void GlobalNamespace::KeepPlayerOutOfWalls::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KeepPlayerOutOfWalls.SetIsAllowedToGoThroughBricks
void GlobalNamespace::KeepPlayerOutOfWalls::SetIsAllowedToGoThroughBricks(bool allowed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::SetIsAllowedToGoThroughBricks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsAllowedToGoThroughBricks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allowed);
}
// Autogenerated method: KeepPlayerOutOfWalls.GetPlayerOutOfWall
void GlobalNamespace::KeepPlayerOutOfWalls::GetPlayerOutOfWall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::GetPlayerOutOfWall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerOutOfWall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KeepPlayerOutOfWalls.IsHeadPositionAllowed
bool GlobalNamespace::KeepPlayerOutOfWalls::IsHeadPositionAllowed(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::IsHeadPositionAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHeadPositionAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: KeepPlayerOutOfWalls.IsOutOfWall
bool GlobalNamespace::KeepPlayerOutOfWalls::IsOutOfWall(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::IsOutOfWall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOutOfWall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: KeepPlayerOutOfWalls.OnTriggerEnter
void GlobalNamespace::KeepPlayerOutOfWalls::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: KeepPlayerOutOfWalls.OnTriggerExit
void GlobalNamespace::KeepPlayerOutOfWalls::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeepPlayerOutOfWalls::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Keyboard
#include "GlobalNamespace/Keyboard.hpp"
// Including type: Keyboard/SerializableStringEvent
#include "GlobalNamespace/Keyboard_SerializableStringEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Keyboard/SerializableStringEvent keyPressed
::GlobalNamespace::Keyboard::SerializableStringEvent*& GlobalNamespace::Keyboard::dyn_keyPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Keyboard::dyn_keyPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyPressed"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Keyboard::SerializableStringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent backspacePressed
::UnityEngine::Events::UnityEvent*& GlobalNamespace::Keyboard::dyn_backspacePressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Keyboard::dyn_backspacePressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backspacePressed"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
::UnityEngine::AudioSource*& GlobalNamespace::Keyboard::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Keyboard::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Keyboard.Awake
void GlobalNamespace::Keyboard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Keyboard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Keyboard.PlayKeySound
void GlobalNamespace::Keyboard::PlayKeySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Keyboard::PlayKeySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayKeySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Keyboard.KeyboardKeyPressed
void GlobalNamespace::Keyboard::KeyboardKeyPressed(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Keyboard::KeyboardKeyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardKeyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Keyboard/SerializableStringEvent
#include "GlobalNamespace/Keyboard_SerializableStringEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LegoConnectorScript
#include "GlobalNamespace/LegoConnectorScript.hpp"
// Including type: LegoConnectorScript/<>c
#include "GlobalNamespace/LegoConnectorScript_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: BrickAttach
#include "GlobalNamespace/BrickAttach.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> connectorsCollidingWith
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::LegoConnectorScript::dyn_connectorsCollidingWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn_connectorsCollidingWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectorsCollidingWith"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean female
bool& GlobalNamespace::LegoConnectorScript::dyn_female() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn_female");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "female"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _otherLabel
::StringW& GlobalNamespace::LegoConnectorScript::dyn__otherLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn__otherLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_otherLabel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _colliderBuffer
::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::LegoConnectorScript::dyn__colliderBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn__colliderBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliderBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.BoxCollider _collider
::UnityEngine::BoxCollider*& GlobalNamespace::LegoConnectorScript::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<::UnityEngine::BoxCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _brick
::UnityEngine::GameObject*& GlobalNamespace::LegoConnectorScript::dyn__brick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn__brick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brick"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrickAttach _brickAttach
::GlobalNamespace::BrickAttach*& GlobalNamespace::LegoConnectorScript::dyn__brickAttach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn__brickAttach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickAttach"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickAttach**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean covered
bool& GlobalNamespace::LegoConnectorScript::dyn_covered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn_covered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "covered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean outOfRenderDistance
bool& GlobalNamespace::LegoConnectorScript::dyn_outOfRenderDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn_outOfRenderDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outOfRenderDistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean placed
bool& GlobalNamespace::LegoConnectorScript::dyn_placed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn_placed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "placed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _uuid
::StringW& GlobalNamespace::LegoConnectorScript::dyn__uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::dyn__uuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uuid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LegoConnectorScript.Awake
void GlobalNamespace::LegoConnectorScript::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LegoConnectorScript.OnTriggerEnter
void GlobalNamespace::LegoConnectorScript::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: LegoConnectorScript.OnTriggerExit
void GlobalNamespace::LegoConnectorScript::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: LegoConnectorScript.ClosestConnector
::UnityEngine::GameObject* GlobalNamespace::LegoConnectorScript::ClosestConnector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::ClosestConnector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestConnector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: LegoConnectorScript.GetConnectorPosFromCollider
::UnityEngine::Vector3 GlobalNamespace::LegoConnectorScript::GetConnectorPosFromCollider(::UnityEngine::GameObject* connector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::GetConnectorPosFromCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LegoConnectorScript", "GetConnectorPosFromCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connector);
}
// Autogenerated method: LegoConnectorScript.RecalculateEnabled
void GlobalNamespace::LegoConnectorScript::RecalculateEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::RecalculateEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LegoConnectorScript.EnableConnector
void GlobalNamespace::LegoConnectorScript::EnableConnector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::EnableConnector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableConnector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LegoConnectorScript.DisableConnector
void GlobalNamespace::LegoConnectorScript::DisableConnector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::DisableConnector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableConnector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LegoConnectorScript.SetOutOfRenderDistance
void GlobalNamespace::LegoConnectorScript::SetOutOfRenderDistance(bool isOutOfRenderDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::SetOutOfRenderDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutOfRenderDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOutOfRenderDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOutOfRenderDistance);
}
// Autogenerated method: LegoConnectorScript.SetConnectorColliderEnabled
void GlobalNamespace::LegoConnectorScript::SetConnectorColliderEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::SetConnectorColliderEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectorColliderEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LegoConnectorScript.BrickCollidingWith
::UnityEngine::GameObject* GlobalNamespace::LegoConnectorScript::BrickCollidingWith(::StringW allowedUuids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::BrickCollidingWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BrickCollidingWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowedUuids)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, allowedUuids);
}
// Autogenerated method: LegoConnectorScript.Uuid
::StringW GlobalNamespace::LegoConnectorScript::Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LegoConnectorScript/<>c
#include "GlobalNamespace/LegoConnectorScript_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LegoConnectorScript/<>c <>9
::GlobalNamespace::LegoConnectorScript::$$c* GlobalNamespace::LegoConnectorScript::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LegoConnectorScript::$$c*>("", "LegoConnectorScript/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LegoConnectorScript/<>c <>9
void GlobalNamespace::LegoConnectorScript::$$c::_set_$$9(::GlobalNamespace::LegoConnectorScript::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LegoConnectorScript/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.GameObject> <>9__14_0
::System::Predicate_1<::UnityEngine::GameObject*>* GlobalNamespace::LegoConnectorScript::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::GameObject*>*>("", "LegoConnectorScript/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.GameObject> <>9__14_0
void GlobalNamespace::LegoConnectorScript::$$c::_set_$$9__14_0(::System::Predicate_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LegoConnectorScript/<>c", "<>9__14_0", value)));
}
// Autogenerated method: LegoConnectorScript/<>c..cctor
void GlobalNamespace::LegoConnectorScript::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LegoConnectorScript/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LegoConnectorScript/<>c.<ClosestConnector>b__14_0
bool GlobalNamespace::LegoConnectorScript::$$c::$ClosestConnector$b__14_0(::UnityEngine::GameObject* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LegoConnectorScript::$$c::<ClosestConnector>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClosestConnector>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightManager
#include "GlobalNamespace/LightManager.hpp"
// Including type: LightManager/Area
#include "GlobalNamespace/LightManager_Area.hpp"
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LightManager _instance
::GlobalNamespace::LightManager* GlobalNamespace::LightManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightManager*>("", "LightManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private LightManager _instance
void GlobalNamespace::LightManager::_set__instance(::GlobalNamespace::LightManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Light[] lights
::ArrayW<::UnityEngine::Light*>& GlobalNamespace::LightManager::dyn_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::dyn_lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lights"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Light*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Light _activeLight
::UnityEngine::Light*& GlobalNamespace::LightManager::dyn__activeLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::dyn__activeLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeLight"))->offset;
  return *reinterpret_cast<::UnityEngine::Light**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightManager.GetInstance
::GlobalNamespace::LightManager* GlobalNamespace::LightManager::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightManager", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LightManager.Awake
void GlobalNamespace::LightManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightManager.EnableLight
void GlobalNamespace::LightManager::EnableLight(::GlobalNamespace::LightManager::Area area) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::EnableLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(area)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, area);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightManager/Area
#include "GlobalNamespace/LightManager_Area.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LightManager/Area Main
::GlobalNamespace::LightManager::Area GlobalNamespace::LightManager::Area::_get_Main() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::Area::_get_Main");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightManager::Area>("", "LightManager/Area", "Main"));
}
// Autogenerated static field setter
// Set static field: static public LightManager/Area Main
void GlobalNamespace::LightManager::Area::_set_Main(::GlobalNamespace::LightManager::Area value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::Area::_set_Main");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager/Area", "Main", value));
}
// Autogenerated static field getter
// Get static field: static public LightManager/Area Tutorial
::GlobalNamespace::LightManager::Area GlobalNamespace::LightManager::Area::_get_Tutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::Area::_get_Tutorial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightManager::Area>("", "LightManager/Area", "Tutorial"));
}
// Autogenerated static field setter
// Set static field: static public LightManager/Area Tutorial
void GlobalNamespace::LightManager::Area::_set_Tutorial(::GlobalNamespace::LightManager::Area value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::Area::_set_Tutorial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager/Area", "Tutorial", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LightManager::Area::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightManager::Area::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LoadingError
#include "GlobalNamespace/LoadingError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _error
::StringW GlobalNamespace::LoadingError::_get__error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingError::_get__error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LoadingError", "_error"));
}
// Autogenerated static field setter
// Set static field: static private System.String _error
void GlobalNamespace::LoadingError::_set__error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingError::_set__error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LoadingError", "_error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean IntentionalDisconnect
bool GlobalNamespace::LoadingError::_get_IntentionalDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingError::_get_IntentionalDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LoadingError", "IntentionalDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean IntentionalDisconnect
void GlobalNamespace::LoadingError::_set_IntentionalDisconnect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingError::_set_IntentionalDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LoadingError", "IntentionalDisconnect", value));
}
// Autogenerated method: LoadingError.SetError
void GlobalNamespace::LoadingError::SetError(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingError::SetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LoadingError", "SetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: LoadingError.GetError
::StringW GlobalNamespace::LoadingError::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingError::GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LoadingError", "GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LoadingError.ClearError
void GlobalNamespace::LoadingError::ClearError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingError::ClearError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LoadingError", "ClearError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LoadingScreen
#include "GlobalNamespace/LoadingScreen.hpp"
// Including type: LoadingScreen/<CreateRoomIEnum>d__7
#include "GlobalNamespace/LoadingScreen_-CreateRoomIEnum-d__7.hpp"
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: RoomCodeScreen
#include "GlobalNamespace/RoomCodeScreen.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String NetworkErrorText
::StringW GlobalNamespace::LoadingScreen::_get_NetworkErrorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::_get_NetworkErrorText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LoadingScreen", "NetworkErrorText"));
}
// Autogenerated static field setter
// Set static field: static public System.String NetworkErrorText
void GlobalNamespace::LoadingScreen::_set_NetworkErrorText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::_set_NetworkErrorText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LoadingScreen", "NetworkErrorText", value));
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager normalSessionManager
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::LoadingScreen::dyn_normalSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::dyn_normalSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI loadingText
::TMPro::TextMeshProUGUI*& GlobalNamespace::LoadingScreen::dyn_loadingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::dyn_loadingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject backButton
::UnityEngine::GameObject*& GlobalNamespace::LoadingScreen::dyn_backButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::dyn_backButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RoomCodeScreen roomCodeScreen
::GlobalNamespace::RoomCodeScreen*& GlobalNamespace::LoadingScreen::dyn_roomCodeScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::dyn_roomCodeScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCodeScreen"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomCodeScreen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _createRoomCoroutine
::UnityEngine::Coroutine*& GlobalNamespace::LoadingScreen::dyn__createRoomCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::dyn__createRoomCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createRoomCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LoadingScreen.CreateRoom
void GlobalNamespace::LoadingScreen::CreateRoom(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName);
}
// Autogenerated method: LoadingScreen.CreateRoomIEnum
::System::Collections::IEnumerator* GlobalNamespace::LoadingScreen::CreateRoomIEnum(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::CreateRoomIEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRoomIEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, roomName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LoadingScreen/<CreateRoomIEnum>d__7
#include "GlobalNamespace/LoadingScreen_-CreateRoomIEnum-d__7.hpp"
// Including type: CoroutineWithData
#include "GlobalNamespace/CoroutineWithData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LoadingScreen <>4__this
::GlobalNamespace::LoadingScreen*& GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoadingScreen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomName
::StringW& GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_roomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_roomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CoroutineWithData <isVersionSupported>5__2
::GlobalNamespace::CoroutineWithData*& GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$isVersionSupported$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$isVersionSupported$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isVersionSupported>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CoroutineWithData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CoroutineWithData <cd>5__3
::GlobalNamespace::CoroutineWithData*& GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$cd$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::dyn_$cd$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cd>5__3"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CoroutineWithData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LoadingScreen/<CreateRoomIEnum>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LoadingScreen/<CreateRoomIEnum>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LoadingScreen/<CreateRoomIEnum>d__7.System.IDisposable.Dispose
void GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LoadingScreen/<CreateRoomIEnum>d__7.MoveNext
bool GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LoadingScreen/<CreateRoomIEnum>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoadingScreen::$CreateRoomIEnum$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LookupRealtimeAvatarManager
#include "GlobalNamespace/LookupRealtimeAvatarManager.hpp"
// Including type: Normal.Realtime.RealtimeAvatarManager
#include "Normal/Realtime/RealtimeAvatarManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Normal.Realtime.RealtimeAvatarManager _instance
::Normal::Realtime::RealtimeAvatarManager* GlobalNamespace::LookupRealtimeAvatarManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LookupRealtimeAvatarManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::RealtimeAvatarManager*>("", "LookupRealtimeAvatarManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Normal.Realtime.RealtimeAvatarManager _instance
void GlobalNamespace::LookupRealtimeAvatarManager::_set__instance(::Normal::Realtime::RealtimeAvatarManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LookupRealtimeAvatarManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LookupRealtimeAvatarManager", "_instance", value));
}
// Autogenerated method: LookupRealtimeAvatarManager.GetInstance
::Normal::Realtime::RealtimeAvatarManager* GlobalNamespace::LookupRealtimeAvatarManager::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LookupRealtimeAvatarManager::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LookupRealtimeAvatarManager", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::RealtimeAvatarManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PCQualitySettings
#include "GlobalNamespace/PCQualitySettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 QualitySetting
int& GlobalNamespace::PCQualitySettings::dyn_QualitySetting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCQualitySettings::dyn_QualitySetting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QualitySetting"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 shadowDistance
int& GlobalNamespace::PCQualitySettings::dyn_shadowDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCQualitySettings::dyn_shadowDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowDistance"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 antiAliasing
int& GlobalNamespace::PCQualitySettings::dyn_antiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCQualitySettings::dyn_antiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antiAliasing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ShadowResolution shadowResolution
::UnityEngine::ShadowResolution& GlobalNamespace::PCQualitySettings::dyn_shadowResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCQualitySettings::dyn_shadowResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowResolution"))->offset;
  return *reinterpret_cast<::UnityEngine::ShadowResolution*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ShadowmaskMode shadowMask
::UnityEngine::ShadowmaskMode& GlobalNamespace::PCQualitySettings::dyn_shadowMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCQualitySettings::dyn_shadowMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowMask"))->offset;
  return *reinterpret_cast<::UnityEngine::ShadowmaskMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PCQualitySettings.Start
void GlobalNamespace::PCQualitySettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCQualitySettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PCQualitySettings.ChangeQuality
void GlobalNamespace::PCQualitySettings::ChangeQuality(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCQualitySettings::ChangeQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuAvatarManager
#include "GlobalNamespace/MenuAvatarManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: SetColorOnPrefabBrick
#include "GlobalNamespace/SetColorOnPrefabBrick.hpp"
// Including type: SetHandColors
#include "GlobalNamespace/SetHandColors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single BounceAmount
float GlobalNamespace::MenuAvatarManager::_get_BounceAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::_get_BounceAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MenuAvatarManager", "BounceAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single BounceAmount
void GlobalNamespace::MenuAvatarManager::_set_BounceAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::_set_BounceAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuAvatarManager", "BounceAmount", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject head
::UnityEngine::GameObject*& GlobalNamespace::MenuAvatarManager::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftHand
::UnityEngine::GameObject*& GlobalNamespace::MenuAvatarManager::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightHand
::UnityEngine::GameObject*& GlobalNamespace::MenuAvatarManager::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject positionInMenuObject
::UnityEngine::GameObject*& GlobalNamespace::MenuAvatarManager::dyn_positionInMenuObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_positionInMenuObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionInMenuObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color primaryColor
::UnityEngine::Color& GlobalNamespace::MenuAvatarManager::dyn_primaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_primaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color secondaryColor
::UnityEngine::Color& GlobalNamespace::MenuAvatarManager::dyn_secondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_secondaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image eyesImage
::UnityEngine::UI::Image*& GlobalNamespace::MenuAvatarManager::dyn_eyesImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_eyesImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyesImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image mouthImage
::UnityEngine::UI::Image*& GlobalNamespace::MenuAvatarManager::dyn_mouthImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_mouthImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mouthImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SetColorOnPrefabBrick[] primaryBrickColors
::ArrayW<::GlobalNamespace::SetColorOnPrefabBrick*>& GlobalNamespace::MenuAvatarManager::dyn_primaryBrickColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_primaryBrickColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryBrickColors"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SetColorOnPrefabBrick*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SetColorOnPrefabBrick[] secondaryBrickColors
::ArrayW<::GlobalNamespace::SetColorOnPrefabBrick*>& GlobalNamespace::MenuAvatarManager::dyn_secondaryBrickColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_secondaryBrickColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryBrickColors"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SetColorOnPrefabBrick*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SetHandColors[] setHandColors
::ArrayW<::GlobalNamespace::SetHandColors*>& GlobalNamespace::MenuAvatarManager::dyn_setHandColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_setHandColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setHandColors"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SetHandColors*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerHead
::UnityEngine::GameObject*& GlobalNamespace::MenuAvatarManager::dyn_playerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_playerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bounceSpeed
float& GlobalNamespace::MenuAvatarManager::dyn_bounceSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_bounceSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounceSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bounceHeight
float& GlobalNamespace::MenuAvatarManager::dyn_bounceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_bounceHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounceHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handsBounceOffset
float& GlobalNamespace::MenuAvatarManager::dyn_handsBounceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn_handsBounceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsBounceOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearanceKeyframe
float& GlobalNamespace::MenuAvatarManager::dyn__appearanceKeyframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn__appearanceKeyframe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearanceKeyframe"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _visible
bool& GlobalNamespace::MenuAvatarManager::dyn__visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn__visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultLeftHandY
float& GlobalNamespace::MenuAvatarManager::dyn__defaultLeftHandY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn__defaultLeftHandY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLeftHandY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultRightHandY
float& GlobalNamespace::MenuAvatarManager::dyn__defaultRightHandY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn__defaultRightHandY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultRightHandY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultHeadY
float& GlobalNamespace::MenuAvatarManager::dyn__defaultHeadY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn__defaultHeadY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultHeadY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _scale
float& GlobalNamespace::MenuAvatarManager::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuAvatarManager.Start
void GlobalNamespace::MenuAvatarManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuAvatarManager.Update
void GlobalNamespace::MenuAvatarManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuAvatarManager.SetVisible
void GlobalNamespace::MenuAvatarManager::SetVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuAvatarManager.SetPrimaryColor
void GlobalNamespace::MenuAvatarManager::SetPrimaryColor(int color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::SetPrimaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPrimaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: MenuAvatarManager.SetSecondaryColor
void GlobalNamespace::MenuAvatarManager::SetSecondaryColor(int color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::SetSecondaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSecondaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: MenuAvatarManager.SetEyes
void GlobalNamespace::MenuAvatarManager::SetEyes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::SetEyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuAvatarManager.SetScale
void GlobalNamespace::MenuAvatarManager::SetScale(int sliderValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::SetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderValue);
}
// Autogenerated method: MenuAvatarManager.SetMouth
void GlobalNamespace::MenuAvatarManager::SetMouth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::SetMouth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMouth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuAvatarManager.AnimateVisibility
void GlobalNamespace::MenuAvatarManager::AnimateVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::AnimateVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuAvatarManager.AnimateBounciness
void GlobalNamespace::MenuAvatarManager::AnimateBounciness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::AnimateBounciness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateBounciness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuAvatarManager.AnimateHead
void GlobalNamespace::MenuAvatarManager::AnimateHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::AnimateHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuAvatarManager.AnimateHands
void GlobalNamespace::MenuAvatarManager::AnimateHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuAvatarManager::AnimateHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuToggle
#include "GlobalNamespace/MenuToggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuToggle.Start
void GlobalNamespace::MenuToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuToggle::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuToggle.Update
void GlobalNamespace::MenuToggle::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuToggle::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModularBrickObjects
#include "GlobalNamespace/ModularBrickObjects.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ModularBrickObjects _instance
::GlobalNamespace::ModularBrickObjects* GlobalNamespace::ModularBrickObjects::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ModularBrickObjects*>("", "ModularBrickObjects", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private ModularBrickObjects _instance
void GlobalNamespace::ModularBrickObjects::_set__instance(::GlobalNamespace::ModularBrickObjects* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ModularBrickObjects", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 HollowBrick
int GlobalNamespace::ModularBrickObjects::_get_HollowBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_get_HollowBrick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ModularBrickObjects", "HollowBrick"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HollowBrick
void GlobalNamespace::ModularBrickObjects::_set_HollowBrick(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_set_HollowBrick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ModularBrickObjects", "HollowBrick", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HollowBrickNameInModel
::StringW GlobalNamespace::ModularBrickObjects::_get_HollowBrickNameInModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_get_HollowBrickNameInModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ModularBrickObjects", "HollowBrickNameInModel"));
}
// Autogenerated static field setter
// Set static field: static private System.String HollowBrickNameInModel
void GlobalNamespace::ModularBrickObjects::_set_HollowBrickNameInModel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_set_HollowBrickNameInModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ModularBrickObjects", "HollowBrickNameInModel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SolidBrick
int GlobalNamespace::ModularBrickObjects::_get_SolidBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_get_SolidBrick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ModularBrickObjects", "SolidBrick"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SolidBrick
void GlobalNamespace::ModularBrickObjects::_set_SolidBrick(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_set_SolidBrick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ModularBrickObjects", "SolidBrick", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SolidBrickNameInModel
::StringW GlobalNamespace::ModularBrickObjects::_get_SolidBrickNameInModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_get_SolidBrickNameInModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ModularBrickObjects", "SolidBrickNameInModel"));
}
// Autogenerated static field setter
// Set static field: static private System.String SolidBrickNameInModel
void GlobalNamespace::ModularBrickObjects::_set_SolidBrickNameInModel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_set_SolidBrickNameInModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ModularBrickObjects", "SolidBrickNameInModel", value));
}
// Autogenerated static field getter
// Get static field: static private System.String StudNameInModel
::StringW GlobalNamespace::ModularBrickObjects::_get_StudNameInModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_get_StudNameInModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ModularBrickObjects", "StudNameInModel"));
}
// Autogenerated static field setter
// Set static field: static private System.String StudNameInModel
void GlobalNamespace::ModularBrickObjects::_set_StudNameInModel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::_set_StudNameInModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ModularBrickObjects", "StudNameInModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> _namesToModularModels
::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& GlobalNamespace::ModularBrickObjects::dyn__namesToModularModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::dyn__namesToModularModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namesToModularModels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.ValueTuple`2<System.String,System.Int32>,UnityEngine.Mesh> _namesAndHollowToMesh
::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::StringW, int>, ::UnityEngine::Mesh*>*& GlobalNamespace::ModularBrickObjects::dyn__namesAndHollowToMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::dyn__namesAndHollowToMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namesAndHollowToMesh"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::StringW, int>, ::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Mesh> _namesToStudMeshes
::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>*& GlobalNamespace::ModularBrickObjects::dyn__namesToStudMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::dyn__namesToStudMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namesToStudMeshes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.ValueTuple`2<System.String,System.String>,UnityEngine.Vector3> _namesAndStudNamesToStudOffset
::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::StringW, ::StringW>, ::UnityEngine::Vector3>*& GlobalNamespace::ModularBrickObjects::dyn__namesAndStudNamesToStudOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::dyn__namesAndStudNamesToStudOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namesAndStudNamesToStudOffset"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::StringW, ::StringW>, ::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ModularBrickObjects.GetInstance
::GlobalNamespace::ModularBrickObjects* GlobalNamespace::ModularBrickObjects::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ModularBrickObjects", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ModularBrickObjects*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ModularBrickObjects.GetModularModel
::UnityEngine::GameObject* GlobalNamespace::ModularBrickObjects::GetModularModel(::StringW brickName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::GetModularModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModularModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, brickName);
}
// Autogenerated method: ModularBrickObjects.GetHollowMesh
::UnityEngine::Mesh* GlobalNamespace::ModularBrickObjects::GetHollowMesh(::StringW brickName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::GetHollowMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHollowMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method, brickName);
}
// Autogenerated method: ModularBrickObjects.GetSolidMesh
::UnityEngine::Mesh* GlobalNamespace::ModularBrickObjects::GetSolidMesh(::StringW brickName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::GetSolidMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSolidMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method, brickName);
}
// Autogenerated method: ModularBrickObjects.GetStudMesh
::UnityEngine::Mesh* GlobalNamespace::ModularBrickObjects::GetStudMesh(::StringW brickName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::GetStudMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStudMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method, brickName);
}
// Autogenerated method: ModularBrickObjects.GetStudOffsetFromCenter
::UnityEngine::Vector3 GlobalNamespace::ModularBrickObjects::GetStudOffsetFromCenter(::StringW brickName, ::StringW studName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModularBrickObjects::GetStudOffsetFromCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStudOffsetFromCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(brickName), ::il2cpp_utils::ExtractType(studName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, brickName, studName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoveObjectWithGaze
#include "GlobalNamespace/MoveObjectWithGaze.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MovementVignette
#include "GlobalNamespace/MovementVignette.hpp"
// Including type: Sigtrap.VrTunnellingPro.Tunnelling
#include "Sigtrap/VrTunnellingPro/Tunnelling.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.Tunnelling tunnelling
::Sigtrap::VrTunnellingPro::Tunnelling*& GlobalNamespace::MovementVignette::dyn_tunnelling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::dyn_tunnelling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tunnelling"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::Tunnelling**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _vignetteEnabled
bool& GlobalNamespace::MovementVignette::dyn__vignetteEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::dyn__vignetteEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vignetteEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalVelocityMin
float& GlobalNamespace::MovementVignette::dyn__originalVelocityMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::dyn__originalVelocityMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalVelocityMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalVelocityMax
float& GlobalNamespace::MovementVignette::dyn__originalVelocityMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::dyn__originalVelocityMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalVelocityMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MovementVignette.Start
void GlobalNamespace::MovementVignette::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementVignette.VignetteStrengthUpdated
void GlobalNamespace::MovementVignette::VignetteStrengthUpdated(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::VignetteStrengthUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VignetteStrengthUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strength);
}
// Autogenerated method: MovementVignette.WithVignetteDisabled
void GlobalNamespace::MovementVignette::WithVignetteDisabled(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::WithVignetteDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithVignetteDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: MovementVignette.SetPlayerScale
void GlobalNamespace::MovementVignette::SetPlayerScale(float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementVignette::SetPlayerScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MusicPlayer
#include "GlobalNamespace/MusicPlayer.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] songs
::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::MusicPlayer::dyn_songs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::dyn_songs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _source
::UnityEngine::AudioSource*& GlobalNamespace::MusicPlayer::dyn__source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::dyn__source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentClipLen
float& GlobalNamespace::MusicPlayer::dyn__currentClipLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::dyn__currentClipLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentClipLen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _musicDisabled
bool& GlobalNamespace::MusicPlayer::dyn__musicDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::dyn__musicDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicDisabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MusicPlayer.Awake
void GlobalNamespace::MusicPlayer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MusicPlayer.OnMusicVolumeSet
void GlobalNamespace::MusicPlayer::OnMusicVolumeSet(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::OnMusicVolumeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMusicVolumeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: MusicPlayer.OnMusicToggle
void GlobalNamespace::MusicPlayer::OnMusicToggle(bool musicSettingEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::OnMusicToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMusicToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(musicSettingEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, musicSettingEnabled);
}
// Autogenerated method: MusicPlayer.Update
void GlobalNamespace::MusicPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MusicPlayer.RandomSong
::UnityEngine::AudioClip* GlobalNamespace::MusicPlayer::RandomSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::RandomSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: MusicPlayer.Pause
void GlobalNamespace::MusicPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MusicPlayer.Resume
void GlobalNamespace::MusicPlayer::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPlayer::Resume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NameKeyboardManager
#include "GlobalNamespace/NameKeyboardManager.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UserSettings
#include "GlobalNamespace/UserSettings.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ProfanityFilter.ProfanityFilter
#include "ProfanityFilter/ProfanityFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxNameLength
int GlobalNamespace::NameKeyboardManager::_get_MaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::_get_MaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NameKeyboardManager", "MaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxNameLength
void GlobalNamespace::NameKeyboardManager::_set_MaxNameLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::_set_MaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NameKeyboardManager", "MaxNameLength", value));
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI nameText
::TMPro::TextMeshProUGUI*& GlobalNamespace::NameKeyboardManager::dyn_nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::dyn_nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings userSettings
::GlobalNamespace::UserSettings*& GlobalNamespace::NameKeyboardManager::dyn_userSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::dyn_userSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainMenu
::UnityEngine::GameObject*& GlobalNamespace::NameKeyboardManager::dyn_mainMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::dyn_mainMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject miscMenu
::UnityEngine::GameObject*& GlobalNamespace::NameKeyboardManager::dyn_miscMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::dyn_miscMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "miscMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _enteredName
::StringW& GlobalNamespace::NameKeyboardManager::dyn__enteredName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::dyn__enteredName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enteredName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _defaultNameLabel
::StringW& GlobalNamespace::NameKeyboardManager::dyn__defaultNameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::dyn__defaultNameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultNameLabel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ProfanityFilter.ProfanityFilter _profanityFilter
::ProfanityFilter::ProfanityFilter*& GlobalNamespace::NameKeyboardManager::dyn__profanityFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::dyn__profanityFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_profanityFilter"))->offset;
  return *reinterpret_cast<::ProfanityFilter::ProfanityFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NameKeyboardManager.Awake
void GlobalNamespace::NameKeyboardManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NameKeyboardManager.OnEnable
void GlobalNamespace::NameKeyboardManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NameKeyboardManager.KeyPress
void GlobalNamespace::NameKeyboardManager::KeyPress(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::KeyPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: NameKeyboardManager.BackspacePress
void GlobalNamespace::NameKeyboardManager::BackspacePress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::BackspacePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackspacePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NameKeyboardManager.SubmitAndReturnToMain
void GlobalNamespace::NameKeyboardManager::SubmitAndReturnToMain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::SubmitAndReturnToMain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitAndReturnToMain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NameKeyboardManager.SubmitAndReturnToMisc
void GlobalNamespace::NameKeyboardManager::SubmitAndReturnToMisc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::SubmitAndReturnToMisc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitAndReturnToMisc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NameKeyboardManager.UpdateNameOnUI
void GlobalNamespace::NameKeyboardManager::UpdateNameOnUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NameKeyboardManager::UpdateNameOnUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNameOnUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
// Including type: NormalSessionManager/<Start>d__82
#include "GlobalNamespace/NormalSessionManager_-Start-d__82.hpp"
// Including type: NormalSessionManager/<JoinRoom>d__92
#include "GlobalNamespace/NormalSessionManager_-JoinRoom-d__92.hpp"
// Including type: NormalSessionManager/<BackToMenu>d__95
#include "GlobalNamespace/NormalSessionManager_-BackToMenu-d__95.hpp"
// Including type: NormalSessionManager/<DownloadBricksFromDatastore>d__103
#include "GlobalNamespace/NormalSessionManager_-DownloadBricksFromDatastore-d__103.hpp"
// Including type: NormalSessionManager/<>c__DisplayClass105_0
#include "GlobalNamespace/NormalSessionManager_--c__DisplayClass105_0.hpp"
// Including type: NormalSessionManager/<PlayTutorialIEnum>d__113
#include "GlobalNamespace/NormalSessionManager_-PlayTutorialIEnum-d__113.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Normal.Realtime.RealtimeAvatarManager
#include "Normal/Realtime/RealtimeAvatarManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: JoystickLocomotion
#include "GlobalNamespace/JoystickLocomotion.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: BrickStore
#include "GlobalNamespace/BrickStore.hpp"
// Including type: UserSettings
#include "GlobalNamespace/UserSettings.hpp"
// Including type: ControllerButtonInput
#include "GlobalNamespace/ControllerButtonInput.hpp"
// Including type: DownloadBricksOnLoad
#include "GlobalNamespace/DownloadBricksOnLoad.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
// Including type: BrickPickerManager
#include "GlobalNamespace/BrickPickerManager.hpp"
// Including type: TutorialManager
#include "GlobalNamespace/TutorialManager.hpp"
// Including type: MusicPlayer
#include "GlobalNamespace/MusicPlayer.hpp"
// Including type: MovementVignette
#include "GlobalNamespace/MovementVignette.hpp"
// Including type: AdjustPlayerScale
#include "GlobalNamespace/AdjustPlayerScale.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String UpstreamErrorText
::StringW GlobalNamespace::NormalSessionManager::_get_UpstreamErrorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::_get_UpstreamErrorText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NormalSessionManager", "UpstreamErrorText"));
}
// Autogenerated static field setter
// Set static field: static public System.String UpstreamErrorText
void GlobalNamespace::NormalSessionManager::_set_UpstreamErrorText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::_set_UpstreamErrorText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NormalSessionManager", "UpstreamErrorText", value));
}
// Autogenerated static field getter
// Get static field: static public System.String NetworkErrorText
::StringW GlobalNamespace::NormalSessionManager::_get_NetworkErrorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::_get_NetworkErrorText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NormalSessionManager", "NetworkErrorText"));
}
// Autogenerated static field setter
// Set static field: static public System.String NetworkErrorText
void GlobalNamespace::NormalSessionManager::_set_NetworkErrorText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::_set_NetworkErrorText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NormalSessionManager", "NetworkErrorText", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject realtimeGameobject
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_realtimeGameobject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_realtimeGameobject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realtimeGameobject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.RealtimeAvatarManager _avatarManager
::Normal::Realtime::RealtimeAvatarManager*& GlobalNamespace::NormalSessionManager::dyn__avatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__avatarManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarManager"))->offset;
  return *reinterpret_cast<::Normal::Realtime::RealtimeAvatarManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerControllers
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_playerControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_playerControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerControllers"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject menuPlayerSpawnPoint
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_menuPlayerSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_menuPlayerSpawnPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuPlayerSpawnPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform gameSpawnPoint
::UnityEngine::Transform*& GlobalNamespace::NormalSessionManager::dyn_gameSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_gameSpawnPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameSpawnPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject menuLeftHand
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_menuLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_menuLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuLeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject menuRightHand
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_menuRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_menuRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuRightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject teleporterLeftHand
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_teleporterLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_teleporterLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleporterLeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject teleporterRightHand
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_teleporterRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_teleporterRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleporterRightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject inGameLeftHand
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_inGameLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_inGameLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inGameLeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject inGameRightHand
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_inGameRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_inGameRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inGameRightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject head
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI menuRoomCodeDisplay
::TMPro::TextMeshProUGUI*& GlobalNamespace::NormalSessionManager::dyn_menuRoomCodeDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_menuRoomCodeDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuRoomCodeDisplay"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject menuEnvironment
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_menuEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_menuEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuEnvironment"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainEnvironment
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_mainEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_mainEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEnvironment"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Realtime _realtime
::Normal::Realtime::Realtime*& GlobalNamespace::NormalSessionManager::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer loadingObjectRenderer
::UnityEngine::MeshRenderer*& GlobalNamespace::NormalSessionManager::dyn_loadingObjectRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_loadingObjectRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingObjectRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _loadingObjectMat
::UnityEngine::Material*& GlobalNamespace::NormalSessionManager::dyn__loadingObjectMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__loadingObjectMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingObjectMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource ambientMusic
::UnityEngine::AudioSource*& GlobalNamespace::NormalSessionManager::dyn_ambientMusic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_ambientMusic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientMusic"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public JoystickLocomotion joystickLocomotion
::GlobalNamespace::JoystickLocomotion*& GlobalNamespace::NormalSessionManager::dyn_joystickLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_joystickLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickLocomotion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::JoystickLocomotion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager xrInteractionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& GlobalNamespace::NormalSessionManager::dyn_xrInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_xrInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrickStore _brickStore
::GlobalNamespace::BrickStore*& GlobalNamespace::NormalSessionManager::dyn__brickStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__brickStore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickStore"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickStore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI menuRoomCode
::TMPro::TextMeshProUGUI*& GlobalNamespace::NormalSessionManager::dyn_menuRoomCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_menuRoomCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuRoomCode"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UserSettings userSettings
::GlobalNamespace::UserSettings*& GlobalNamespace::NormalSessionManager::dyn_userSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_userSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UserSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject vrRig
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_vrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_vrRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrRig"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ControllerButtonInput buttonInput
::GlobalNamespace::ControllerButtonInput*& GlobalNamespace::NormalSessionManager::dyn_buttonInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_buttonInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonInput"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ControllerButtonInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject menuBoard
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_menuBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_menuBoard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuBoard"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DownloadBricksOnLoad downloadBricksOnLoad
::GlobalNamespace::DownloadBricksOnLoad*& GlobalNamespace::NormalSessionManager::dyn_downloadBricksOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_downloadBricksOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadBricksOnLoad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DownloadBricksOnLoad**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didConnectToRoom
bool& GlobalNamespace::NormalSessionManager::dyn__didConnectToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__didConnectToRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didConnectToRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didDisconnectFromRoom
bool& GlobalNamespace::NormalSessionManager::dyn__didDisconnectFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__didDisconnectFromRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didDisconnectFromRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _joiningCoroutine
::UnityEngine::Coroutine*& GlobalNamespace::NormalSessionManager::dyn__joiningCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__joiningCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joiningCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_mainPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_mainPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject joinByCodePage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_joinByCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_joinByCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinByCodePage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject settingsPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_settingsPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_settingsPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settingsPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject inGameMain
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_inGameMain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_inGameMain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inGameMain"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject audioSettingsPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_audioSettingsPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_audioSettingsPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSettingsPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject controlsSettingsPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_controlsSettingsPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_controlsSettingsPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controlsSettingsPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject miscSettingsPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_miscSettingsPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_miscSettingsPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "miscSettingsPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject loadingPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_loadingPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_loadingPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject roomMenuPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_roomMenuPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_roomMenuPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomMenuPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject enterNamePage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_enterNamePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_enterNamePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enterNamePage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject joinMenuPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_joinMenuPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_joinMenuPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinMenuPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject joinRecentPage
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_joinRecentPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_joinRecentPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRecentPage"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playersMenu
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_playersMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_playersMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject versionTooOldMenu
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_versionTooOldMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_versionTooOldMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "versionTooOldMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject errorMenu
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_errorMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_errorMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject findFriendsMenu
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_findFriendsMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_findFriendsMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "findFriendsMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject avatarEditorMenu
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_avatarEditorMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_avatarEditorMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarEditorMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject exportRoomMenu
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_exportRoomMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_exportRoomMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exportRoomMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle teleportToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_teleportToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_teleportToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleportToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle micEnabledToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_micEnabledToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_micEnabledToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micEnabledToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle otherMicsEnabledToogle
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_otherMicsEnabledToogle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_otherMicsEnabledToogle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "otherMicsEnabledToogle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle performanceMode
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_performanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_performanceMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performanceMode"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle musicPlayingToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_musicPlayingToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_musicPlayingToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "musicPlayingToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle smoothTurnToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_smoothTurnToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_smoothTurnToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothTurnToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle pushToTalkEnabledToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_pushToTalkEnabledToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_pushToTalkEnabledToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushToTalkEnabledToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle brickClickSoundsToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::NormalSessionManager::dyn_brickClickSoundsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_brickClickSoundsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickClickSoundsToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider musicVolumeSlider
::UnityEngine::UI::Slider*& GlobalNamespace::NormalSessionManager::dyn_musicVolumeSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_musicVolumeSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "musicVolumeSlider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider movementSpeedSlider
::UnityEngine::UI::Slider*& GlobalNamespace::NormalSessionManager::dyn_movementSpeedSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_movementSpeedSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementSpeedSlider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider rotationSpeedSlider
::UnityEngine::UI::Slider*& GlobalNamespace::NormalSessionManager::dyn_rotationSpeedSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_rotationSpeedSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeedSlider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider vignetteSlider
::UnityEngine::UI::Slider*& GlobalNamespace::NormalSessionManager::dyn_vignetteSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_vignetteSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vignetteSlider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider renderDistanceSlider
::UnityEngine::UI::Slider*& GlobalNamespace::NormalSessionManager::dyn_renderDistanceSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_renderDistanceSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderDistanceSlider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider playerScaleSlider
::UnityEngine::UI::Slider*& GlobalNamespace::NormalSessionManager::dyn_playerScaleSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_playerScaleSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerScaleSlider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider brickShininessSlider
::UnityEngine::UI::Slider*& GlobalNamespace::NormalSessionManager::dyn_brickShininessSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_brickShininessSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickShininessSlider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BrickPickerManager brickPickerMenu
::GlobalNamespace::BrickPickerManager*& GlobalNamespace::NormalSessionManager::dyn_brickPickerMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_brickPickerMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickPickerMenu"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickPickerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI joiningStatusText
::TMPro::TextMeshProUGUI*& GlobalNamespace::NormalSessionManager::dyn_joiningStatusText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_joiningStatusText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joiningStatusText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject joiningBackButton
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_joiningBackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_joiningBackButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joiningBackButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialManager tutorialManager
::GlobalNamespace::TutorialManager*& GlobalNamespace::NormalSessionManager::dyn_tutorialManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_tutorialManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tutorialManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MusicPlayer musicPlayer
::GlobalNamespace::MusicPlayer*& GlobalNamespace::NormalSessionManager::dyn_musicPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_musicPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "musicPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MusicPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _roomPrefix
::StringW& GlobalNamespace::NormalSessionManager::dyn__roomPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__roomPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _roomName
::StringW& GlobalNamespace::NormalSessionManager::dyn__roomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__roomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ambientMusicMaxVolume
float& GlobalNamespace::NormalSessionManager::dyn__ambientMusicMaxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__ambientMusicMaxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambientMusicMaxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _loading
bool& GlobalNamespace::NormalSessionManager::dyn__loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__loading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _inGameMenuUp
bool& GlobalNamespace::NormalSessionManager::dyn__inGameMenuUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__inGameMenuUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inGameMenuUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugMode
bool& GlobalNamespace::NormalSessionManager::dyn_debugMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_debugMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean oldMenuEnabled
bool& GlobalNamespace::NormalSessionManager::dyn_oldMenuEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_oldMenuEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldMenuEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject tutorialEnvironment
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::dyn_tutorialEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_tutorialEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tutorialEnvironment"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI roomNameLabel
::TMPro::TextMeshProUGUI*& GlobalNamespace::NormalSessionManager::dyn_roomNameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_roomNameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomNameLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MovementVignette movementVignette
::GlobalNamespace::MovementVignette*& GlobalNamespace::NormalSessionManager::dyn_movementVignette() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_movementVignette");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementVignette"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MovementVignette**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdjustPlayerScale adjustPlayerScale
::GlobalNamespace::AdjustPlayerScale*& GlobalNamespace::NormalSessionManager::dyn_adjustPlayerScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn_adjustPlayerScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjustPlayerScale"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdjustPlayerScale**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _tutorialCoroutine
::UnityEngine::Coroutine*& GlobalNamespace::NormalSessionManager::dyn__tutorialCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::dyn__tutorialCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormalSessionManager.Start
::System::Collections::IEnumerator* GlobalNamespace::NormalSessionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.Update
void GlobalNamespace::NormalSessionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.GetRoomName
::StringW GlobalNamespace::NormalSessionManager::GetRoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::GetRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.NormcoreRoomForCode
::StringW GlobalNamespace::NormalSessionManager::NormcoreRoomForCode(::StringW roomCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::NormcoreRoomForCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormcoreRoomForCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, roomCode);
}
// Autogenerated method: NormalSessionManager.Connected
bool GlobalNamespace::NormalSessionManager::Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.Loading
bool GlobalNamespace::NormalSessionManager::Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::Loading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Loading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.InGameMenuUp
bool GlobalNamespace::NormalSessionManager::InGameMenuUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::InGameMenuUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InGameMenuUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.CreateAndJoin
void GlobalNamespace::NormalSessionManager::CreateAndJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::CreateAndJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.JoinRoomWrapper
void GlobalNamespace::NormalSessionManager::JoinRoomWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::JoinRoomWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoomWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.JoinRoomWrapper
void GlobalNamespace::NormalSessionManager::JoinRoomWrapper(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::JoinRoomWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoomWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName);
}
// Autogenerated method: NormalSessionManager.JoinRoom
::System::Collections::IEnumerator* GlobalNamespace::NormalSessionManager::JoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.BackToMenuWrapper
void GlobalNamespace::NormalSessionManager::BackToMenuWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::BackToMenuWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackToMenuWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.HandleBrickDownloadError
void GlobalNamespace::NormalSessionManager::HandleBrickDownloadError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::HandleBrickDownloadError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBrickDownloadError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.BackToMenu
::System::Collections::IEnumerator* GlobalNamespace::NormalSessionManager::BackToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::BackToMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.PressJoinGameNumberButton
void GlobalNamespace::NormalSessionManager::PressJoinGameNumberButton(::StringW button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::PressJoinGameNumberButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressJoinGameNumberButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button);
}
// Autogenerated method: NormalSessionManager.ResetRoomName
void GlobalNamespace::NormalSessionManager::ResetRoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::ResetRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.UpdateNumberOnMenuUI
void GlobalNamespace::NormalSessionManager::UpdateNumberOnMenuUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::UpdateNumberOnMenuUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNumberOnMenuUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.UpdateSettingsUI
void GlobalNamespace::NormalSessionManager::UpdateSettingsUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::UpdateSettingsUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSettingsUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.ClearRoomName
void GlobalNamespace::NormalSessionManager::ClearRoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::ClearRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.OnMenu
void GlobalNamespace::NormalSessionManager::OnMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::OnMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.MovePlayerToMainMenu
void GlobalNamespace::NormalSessionManager::MovePlayerToMainMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::MovePlayerToMainMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePlayerToMainMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.DownloadBricksFromDatastore
::System::Collections::IEnumerator* GlobalNamespace::NormalSessionManager::DownloadBricksFromDatastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::DownloadBricksFromDatastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadBricksFromDatastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.WarmResourceLoadCaches
void GlobalNamespace::NormalSessionManager::WarmResourceLoadCaches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::WarmResourceLoadCaches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WarmResourceLoadCaches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.WarmOtherCaches
void GlobalNamespace::NormalSessionManager::WarmOtherCaches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::WarmOtherCaches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WarmOtherCaches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.WarmSpawnerCaches
void GlobalNamespace::NormalSessionManager::WarmSpawnerCaches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::WarmSpawnerCaches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WarmSpawnerCaches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.DidConnectToRoom
void GlobalNamespace::NormalSessionManager::DidConnectToRoom(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::DidConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: NormalSessionManager.DidDisconnectFromRoom
void GlobalNamespace::NormalSessionManager::DidDisconnectFromRoom(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::DidDisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated method: NormalSessionManager.RandomRoomName
::StringW GlobalNamespace::NormalSessionManager::RandomRoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::RandomRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.MoveMenuToFrontOfUser
void GlobalNamespace::NormalSessionManager::MoveMenuToFrontOfUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::MoveMenuToFrontOfUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveMenuToFrontOfUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.PlayTutorial
void GlobalNamespace::NormalSessionManager::PlayTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::PlayTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.PlayTutorialIEnum
::System::Collections::IEnumerator* GlobalNamespace::NormalSessionManager::PlayTutorialIEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::PlayTutorialIEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayTutorialIEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.DisableAllMenus
void GlobalNamespace::NormalSessionManager::DisableAllMenus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::DisableAllMenus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAllMenus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.PadRoomNameWithUnderscores
::StringW GlobalNamespace::NormalSessionManager::PadRoomNameWithUnderscores(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::PadRoomNameWithUnderscores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadRoomNameWithUnderscores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, roomName);
}
// Autogenerated method: NormalSessionManager.FormatRoomName
::StringW GlobalNamespace::NormalSessionManager::FormatRoomName(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::FormatRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, roomName);
}
// Autogenerated method: NormalSessionManager.FormatRoomNameAnyLenNoMono
::StringW GlobalNamespace::NormalSessionManager::FormatRoomNameAnyLenNoMono(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::FormatRoomNameAnyLenNoMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatRoomNameAnyLenNoMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, roomName);
}
// Autogenerated method: NormalSessionManager.<JoinRoom>b__92_0
void GlobalNamespace::NormalSessionManager::$JoinRoom$b__92_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::<JoinRoom>b__92_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<JoinRoom>b__92_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.<OnMenu>b__101_0
void GlobalNamespace::NormalSessionManager::$OnMenu$b__101_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::<OnMenu>b__101_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnMenu>b__101_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.<MovePlayerToMainMenu>b__102_0
void GlobalNamespace::NormalSessionManager::$MovePlayerToMainMenu$b__102_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::<MovePlayerToMainMenu>b__102_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MovePlayerToMainMenu>b__102_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager.<DownloadBricksFromDatastore>b__103_0
bool GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$b__103_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::<DownloadBricksFromDatastore>b__103_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadBricksFromDatastore>b__103_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NormalSessionManager/<Start>d__82
#include "GlobalNamespace/NormalSessionManager_-Start-d__82.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::NormalSessionManager::$Start$d__82::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::NormalSessionManager::$Start$d__82::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager <>4__this
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::NormalSessionManager::$Start$d__82::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormalSessionManager/<Start>d__82.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$Start$d__82::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<Start>d__82.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$Start$d__82::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<Start>d__82.System.IDisposable.Dispose
void GlobalNamespace::NormalSessionManager::$Start$d__82::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<Start>d__82.MoveNext
bool GlobalNamespace::NormalSessionManager::$Start$d__82::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<Start>d__82.System.Collections.IEnumerator.Reset
void GlobalNamespace::NormalSessionManager::$Start$d__82::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$Start$d__82::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NormalSessionManager/<JoinRoom>d__92
#include "GlobalNamespace/NormalSessionManager_-JoinRoom-d__92.hpp"
// Including type: CoroutineWithData
#include "GlobalNamespace/CoroutineWithData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager <>4__this
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CoroutineWithData <isVersionSupported>5__2
::GlobalNamespace::CoroutineWithData*& GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$isVersionSupported$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$isVersionSupported$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isVersionSupported>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CoroutineWithData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CoroutineWithData <cd>5__3
::GlobalNamespace::CoroutineWithData*& GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$cd$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$cd$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cd>5__3"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CoroutineWithData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>5__4
float& GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$time$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::dyn_$time$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormalSessionManager/<JoinRoom>d__92.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<JoinRoom>d__92.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<JoinRoom>d__92.System.IDisposable.Dispose
void GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<JoinRoom>d__92.MoveNext
bool GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<JoinRoom>d__92.System.Collections.IEnumerator.Reset
void GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NormalSessionManager/<BackToMenu>d__95
#include "GlobalNamespace/NormalSessionManager_-BackToMenu-d__95.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager <>4__this
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormalSessionManager/<BackToMenu>d__95.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<BackToMenu>d__95.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<BackToMenu>d__95.System.IDisposable.Dispose
void GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<BackToMenu>d__95.MoveNext
bool GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<BackToMenu>d__95.System.Collections.IEnumerator.Reset
void GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NormalSessionManager/<DownloadBricksFromDatastore>d__103
#include "GlobalNamespace/NormalSessionManager_-DownloadBricksFromDatastore-d__103.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager <>4__this
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormalSessionManager/<DownloadBricksFromDatastore>d__103.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<DownloadBricksFromDatastore>d__103.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<DownloadBricksFromDatastore>d__103.System.IDisposable.Dispose
void GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<DownloadBricksFromDatastore>d__103.MoveNext
bool GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<DownloadBricksFromDatastore>d__103.System.Collections.IEnumerator.Reset
void GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NormalSessionManager/<>c__DisplayClass105_0
#include "GlobalNamespace/NormalSessionManager_--c__DisplayClass105_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BrickDestroyer
#include "GlobalNamespace/BrickDestroyer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager <>4__this
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject brick4x2
::UnityEngine::GameObject*& GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::dyn_brick4x2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::dyn_brick4x2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brick4x2"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BrickDestroyer destroyer
::GlobalNamespace::BrickDestroyer*& GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::dyn_destroyer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::dyn_destroyer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickDestroyer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormalSessionManager/<>c__DisplayClass105_0.<WarmOtherCaches>b__0
void GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::$WarmOtherCaches$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::<WarmOtherCaches>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WarmOtherCaches>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NormalSessionManager/<PlayTutorialIEnum>d__113
#include "GlobalNamespace/NormalSessionManager_-PlayTutorialIEnum-d__113.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormalSessionManager <>4__this
::GlobalNamespace::NormalSessionManager*& GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormalSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormalSessionManager/<PlayTutorialIEnum>d__113.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<PlayTutorialIEnum>d__113.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<PlayTutorialIEnum>d__113.System.IDisposable.Dispose
void GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<PlayTutorialIEnum>d__113.MoveNext
bool GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NormalSessionManager/<PlayTutorialIEnum>d__113.System.Collections.IEnumerator.Reset
void GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NormcoreRPC
#include "GlobalNamespace/NormcoreRPC.hpp"
// Including type: NormcoreRPC/RPCMessage
#include "GlobalNamespace/NormcoreRPC_RPCMessage.hpp"
// Including type: NormcoreRPC/Brick
#include "GlobalNamespace/NormcoreRPC_Brick.hpp"
// Including type: Normal.Realtime.Realtime
#include "Normal/Realtime/Realtime.hpp"
// Including type: Normal.Realtime.Room
#include "Normal/Realtime/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Normal.Realtime.Realtime _realtime
::Normal::Realtime::Realtime*& GlobalNamespace::NormcoreRPC::dyn__realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::dyn__realtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_realtime"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Realtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NormcoreRPC.Start
void GlobalNamespace::NormcoreRPC::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NormcoreRPC.RpcMessageReceived
void GlobalNamespace::NormcoreRPC::RpcMessageReceived(::Normal::Realtime::Room* room, int senderId, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::RpcMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RpcMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(senderId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room, senderId, data, reliable);
}
// Autogenerated method: NormcoreRPC.<Start>b__1_0
void GlobalNamespace::NormcoreRPC::$Start$b__1_0(::Normal::Realtime::Realtime* realtime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::<Start>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realtime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realtime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NormcoreRPC/RPCMessage
#include "GlobalNamespace/NormcoreRPC_RPCMessage.hpp"
// Including type: NormcoreRPC/Brick
#include "GlobalNamespace/NormcoreRPC_Brick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String type
::StringW& GlobalNamespace::NormcoreRPC::RPCMessage::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::RPCMessage::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NormcoreRPC/Brick brick
::GlobalNamespace::NormcoreRPC::Brick*& GlobalNamespace::NormcoreRPC::RPCMessage::dyn_brick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::RPCMessage::dyn_brick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NormcoreRPC::Brick**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NormcoreRPC/Brick
#include "GlobalNamespace/NormcoreRPC_Brick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String uuid
::StringW& GlobalNamespace::NormcoreRPC::Brick::dyn_uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_uuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uuid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 matId
int& GlobalNamespace::NormcoreRPC::Brick::dyn_matId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_matId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 color
int& GlobalNamespace::NormcoreRPC::Brick::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String type
::StringW& GlobalNamespace::NormcoreRPC::Brick::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 pos
::UnityEngine::Vector3& GlobalNamespace::NormcoreRPC::Brick::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rot
::UnityEngine::Quaternion& GlobalNamespace::NormcoreRPC::Brick::dyn_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usingNewColor
bool& GlobalNamespace::NormcoreRPC::Brick::dyn_usingNewColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_usingNewColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingNewColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 headClientId
int& GlobalNamespace::NormcoreRPC::Brick::dyn_headClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_headClientId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headClientId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usingHeadStuff
bool& GlobalNamespace::NormcoreRPC::Brick::dyn_usingHeadStuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormcoreRPC::Brick::dyn_usingHeadStuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingHeadStuff"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInputUpdater
#include "GlobalNamespace/OVRInputUpdater.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRInputUpdater.Update
void GlobalNamespace::OVRInputUpdater::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInputUpdater::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInputUpdater.FixedUpdate
void GlobalNamespace::OVRInputUpdater::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInputUpdater::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnOffControl
#include "GlobalNamespace/OnOffControl.hpp"
// Including type: OnOffControl/SerializableBoolEvent
#include "GlobalNamespace/OnOffControl_SerializableBoolEvent.hpp"
// Including type: UIButtonEvents
#include "GlobalNamespace/UIButtonEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UIButtonEvents onButtonEvents
::GlobalNamespace::UIButtonEvents*& GlobalNamespace::OnOffControl::dyn_onButtonEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::dyn_onButtonEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onButtonEvents"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UIButtonEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UIButtonEvents offButtonEvents
::GlobalNamespace::UIButtonEvents*& GlobalNamespace::OnOffControl::dyn_offButtonEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::dyn_offButtonEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offButtonEvents"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UIButtonEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OnOffControl/SerializableBoolEvent valueUpdated
::GlobalNamespace::OnOffControl::SerializableBoolEvent*& GlobalNamespace::OnOffControl::dyn_valueUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::dyn_valueUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueUpdated"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OnOffControl::SerializableBoolEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _on
bool& GlobalNamespace::OnOffControl::dyn__on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::dyn__on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_on"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::OnOffControl::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OnOffControl.Start
void GlobalNamespace::OnOffControl::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnOffControl.OnEnable
void GlobalNamespace::OnOffControl::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnOffControl.ToggleChanged
void GlobalNamespace::OnOffControl::ToggleChanged(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::ToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: OnOffControl.UpdateButtonStates
void GlobalNamespace::OnOffControl::UpdateButtonStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::UpdateButtonStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtonStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnOffControl/SerializableBoolEvent
#include "GlobalNamespace/OnOffControl_SerializableBoolEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OptionsTabSystem
#include "GlobalNamespace/OptionsTabSystem.hpp"
// Including type: OptionsTabSystem/Tab
#include "GlobalNamespace/OptionsTabSystem_Tab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OptionsTabSystem/Tab[] tabs
::ArrayW<::GlobalNamespace::OptionsTabSystem::Tab*>& GlobalNamespace::OptionsTabSystem::dyn_tabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::dyn_tabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tabs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OptionsTabSystem::Tab*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 defaultTab
int& GlobalNamespace::OptionsTabSystem::dyn_defaultTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::dyn_defaultTab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultTab"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedTab
int& GlobalNamespace::OptionsTabSystem::dyn__selectedTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::dyn__selectedTab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedTab"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OptionsTabSystem.Start
void GlobalNamespace::OptionsTabSystem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OptionsTabSystem.SelectTab
void GlobalNamespace::OptionsTabSystem::SelectTab(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::SelectTab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectTab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: OptionsTabSystem.DisableTab
void GlobalNamespace::OptionsTabSystem::DisableTab(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::DisableTab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableTab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: OptionsTabSystem.EnableTab
void GlobalNamespace::OptionsTabSystem::EnableTab(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::EnableTab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableTab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OptionsTabSystem/Tab
#include "GlobalNamespace/OptionsTabSystem_Tab.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UIButtonEvents
#include "GlobalNamespace/UIButtonEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject tabObject
::UnityEngine::GameObject*& GlobalNamespace::OptionsTabSystem::Tab::dyn_tabObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::Tab::dyn_tabObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tabObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UIButtonEvents tabButtonEvents
::GlobalNamespace::UIButtonEvents*& GlobalNamespace::OptionsTabSystem::Tab::dyn_tabButtonEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsTabSystem::Tab::dyn_tabButtonEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tabButtonEvents"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UIButtonEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
