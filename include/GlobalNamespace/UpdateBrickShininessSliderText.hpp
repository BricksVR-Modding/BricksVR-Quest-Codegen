// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: UpdateBrickShininessSliderText
  class UpdateBrickShininessSliderText;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::UpdateBrickShininessSliderText);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::UpdateBrickShininessSliderText*, "", "UpdateBrickShininessSliderText");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UpdateBrickShininessSliderText
  // [TokenAttribute] Offset: FFFFFFFF
  class UpdateBrickShininessSliderText : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public TMPro.TextMeshProUGUI sliderLabel
    // Size: 0x8
    // Offset: 0x18
    ::TMPro::TextMeshProUGUI* sliderLabel;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public TMPro.TextMeshProUGUI sliderLabel
    [[deprecated]] ::TMPro::TextMeshProUGUI*& dyn_sliderLabel();
    // private System.Void OnEnable()
    // Offset: 0x924310
    void OnEnable();
    // public System.Void SliderValueSet(System.Single value)
    // Offset: 0x924450
    void SliderValueSet(float value);
    // public System.Void .ctor()
    // Offset: 0x1DDE30
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UpdateBrickShininessSliderText* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateBrickShininessSliderText::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UpdateBrickShininessSliderText*, creationType>()));
    }
  }; // UpdateBrickShininessSliderText
  #pragma pack(pop)
  static check_size<sizeof(UpdateBrickShininessSliderText), 24 + sizeof(::TMPro::TextMeshProUGUI*)> __GlobalNamespace_UpdateBrickShininessSliderTextSizeCheck;
  static_assert(sizeof(UpdateBrickShininessSliderText) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::UpdateBrickShininessSliderText::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UpdateBrickShininessSliderText::*)()>(&GlobalNamespace::UpdateBrickShininessSliderText::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UpdateBrickShininessSliderText*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UpdateBrickShininessSliderText::SliderValueSet
// Il2CppName: SliderValueSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::UpdateBrickShininessSliderText::*)(float)>(&GlobalNamespace::UpdateBrickShininessSliderText::SliderValueSet)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::UpdateBrickShininessSliderText*), "SliderValueSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::UpdateBrickShininessSliderText::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
