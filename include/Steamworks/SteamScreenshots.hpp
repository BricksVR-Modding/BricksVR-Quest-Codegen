// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Steamworks.SteamClientClass`1
#include "Steamworks/SteamClientClass_1.hpp"
// Including type: Steamworks.Data.Screenshot
#include "Steamworks/Data/Screenshot.hpp"
// Including type: Steamworks.Result
#include "Steamworks/Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Steamworks
namespace Steamworks {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: SteamScreenshots
  class SteamScreenshots;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Steamworks::SteamScreenshots);
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::SteamScreenshots*, "Steamworks", "SteamScreenshots");
// Type namespace: Steamworks
namespace Steamworks {
  // WARNING Size may be invalid!
  // Autogenerated type: Steamworks.SteamScreenshots
  // [TokenAttribute] Offset: FFFFFFFF
  class SteamScreenshots : public ::Steamworks::SteamClientClass_1<::Steamworks::SteamScreenshots*> {
    public:
    // Nested type: ::Steamworks::SteamScreenshots::$$c
    class $$c;
    // [DebuggerBrowsableAttribute] Offset: 0x71EA58
    // Get static field: static private System.Action OnScreenshotRequested
    static ::System::Action* _get_OnScreenshotRequested();
    // Set static field: static private System.Action OnScreenshotRequested
    static void _set_OnScreenshotRequested(::System::Action* value);
    // [DebuggerBrowsableAttribute] Offset: 0x71EA94
    // Get static field: static private System.Action`1<Steamworks.Data.Screenshot> OnScreenshotReady
    static ::System::Action_1<::Steamworks::Data::Screenshot>* _get_OnScreenshotReady();
    // Set static field: static private System.Action`1<Steamworks.Data.Screenshot> OnScreenshotReady
    static void _set_OnScreenshotReady(::System::Action_1<::Steamworks::Data::Screenshot>* value);
    // [DebuggerBrowsableAttribute] Offset: 0x71EAD0
    // Get static field: static private System.Action`1<Steamworks.Result> OnScreenshotFailed
    static ::System::Action_1<::Steamworks::Result>* _get_OnScreenshotFailed();
    // Set static field: static private System.Action`1<Steamworks.Result> OnScreenshotFailed
    static void _set_OnScreenshotFailed(::System::Action_1<::Steamworks::Result>* value);
    // static System.Void InstallEvents()
    // Offset: 0xE3E1FC
    static void InstallEvents();
    // public System.Void .ctor()
    // Offset: 0xE3E3BC
    // Implemented from: Steamworks.SteamClientClass`1
    // Base method: System.Void SteamClientClass_1::.ctor()
    // Base method: System.Void SteamClass::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SteamScreenshots* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Steamworks::SteamScreenshots::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SteamScreenshots*, creationType>()));
    }
    // override System.Void InitializeInterface(System.Boolean server)
    // Offset: 0xE3E16C
    // Implemented from: Steamworks.SteamClientClass`1
    // Base method: System.Void SteamClientClass_1::InitializeInterface(System.Boolean server)
    void InitializeInterface(bool server);
  }; // Steamworks.SteamScreenshots
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Steamworks::SteamScreenshots::InstallEvents
// Il2CppName: InstallEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Steamworks::SteamScreenshots::InstallEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamScreenshots*), "InstallEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Steamworks::SteamScreenshots::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Steamworks::SteamScreenshots::InitializeInterface
// Il2CppName: InitializeInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::SteamScreenshots::*)(bool)>(&Steamworks::SteamScreenshots::InitializeInterface)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::SteamScreenshots*), "InitializeInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server});
  }
};
