// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AdvancedColorPicker.ColorComponent
#include "AdvancedColorPicker/ColorComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Graphic
  class Graphic;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color32
  struct Color32;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Skipping declaration: UIBehaviour because it is already included!
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: PreviewGraphic
  class PreviewGraphic;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::PreviewGraphic);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::PreviewGraphic*, "AdvancedColorPicker", "PreviewGraphic");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0x2A
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.PreviewGraphic
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: EA040
  // [RequireComponent] Offset: EA040
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class PreviewGraphic : public ::AdvancedColorPicker::ColorComponent {
    public:
    public:
    // private UnityEngine.UI.Graphic graphic
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Graphic* graphic;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Graphic*) == 0x8);
    // private System.Boolean alphaIsFixed
    // Size: 0x1
    // Offset: 0x28
    bool alphaIsFixed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Byte fixedAlpha
    // Size: 0x1
    // Offset: 0x29
    uint8_t fixedAlpha;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Get instance field reference: private UnityEngine.UI.Graphic graphic
    [[deprecated]] ::UnityEngine::UI::Graphic*& dyn_graphic();
    // Get instance field reference: private System.Boolean alphaIsFixed
    [[deprecated]] bool& dyn_alphaIsFixed();
    // Get instance field reference: private System.Byte fixedAlpha
    [[deprecated]] uint8_t& dyn_fixedAlpha();
    // public System.Boolean get_AlphaIsFixed()
    // Offset: 0x21B7D0
    bool get_AlphaIsFixed();
    // public System.Void set_AlphaIsFixed(System.Boolean value)
    // Offset: 0x5B82C0
    void set_AlphaIsFixed(bool value);
    // public System.Byte get_FixedAlpha()
    // Offset: 0x553160
    uint8_t get_FixedAlpha();
    // public System.Void set_FixedAlpha(System.Byte value)
    // Offset: 0x5B82E0
    void set_FixedAlpha(uint8_t value);
    // private UnityEngine.Color32 GetColor()
    // Offset: 0x5B81E0
    ::UnityEngine::Color32 GetColor();
    // public System.Void .ctor()
    // Offset: 0x5B82B0
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PreviewGraphic* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::PreviewGraphic::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PreviewGraphic*, creationType>()));
    }
    // protected override System.Void Awake()
    // Offset: 0x5B8050
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Awake()
    void Awake();
    // protected override System.Void DisplayNewColor()
    // Offset: 0x5B80B0
    // Implemented from: AdvancedColorPicker.ColorComponent
    // Base method: System.Void ColorComponent::DisplayNewColor()
    void DisplayNewColor();
  }; // AdvancedColorPicker.PreviewGraphic
  #pragma pack(pop)
  static check_size<sizeof(PreviewGraphic), 41 + sizeof(uint8_t)> __AdvancedColorPicker_PreviewGraphicSizeCheck;
  static_assert(sizeof(PreviewGraphic) == 0x2A);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::get_AlphaIsFixed
// Il2CppName: get_AlphaIsFixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AdvancedColorPicker::PreviewGraphic::*)()>(&AdvancedColorPicker::PreviewGraphic::get_AlphaIsFixed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::PreviewGraphic*), "get_AlphaIsFixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::set_AlphaIsFixed
// Il2CppName: set_AlphaIsFixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::PreviewGraphic::*)(bool)>(&AdvancedColorPicker::PreviewGraphic::set_AlphaIsFixed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::PreviewGraphic*), "set_AlphaIsFixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::get_FixedAlpha
// Il2CppName: get_FixedAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (AdvancedColorPicker::PreviewGraphic::*)()>(&AdvancedColorPicker::PreviewGraphic::get_FixedAlpha)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::PreviewGraphic*), "get_FixedAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::set_FixedAlpha
// Il2CppName: set_FixedAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::PreviewGraphic::*)(uint8_t)>(&AdvancedColorPicker::PreviewGraphic::set_FixedAlpha)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::PreviewGraphic*), "set_FixedAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color32 (AdvancedColorPicker::PreviewGraphic::*)()>(&AdvancedColorPicker::PreviewGraphic::GetColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::PreviewGraphic*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::PreviewGraphic::*)()>(&AdvancedColorPicker::PreviewGraphic::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::PreviewGraphic*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::PreviewGraphic::DisplayNewColor
// Il2CppName: DisplayNewColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::PreviewGraphic::*)()>(&AdvancedColorPicker::PreviewGraphic::DisplayNewColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::PreviewGraphic*), "DisplayNewColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
