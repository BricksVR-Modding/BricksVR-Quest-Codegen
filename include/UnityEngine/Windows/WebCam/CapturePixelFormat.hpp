// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.Windows.WebCam
namespace UnityEngine::Windows::WebCam {
  // Forward declaring type: CapturePixelFormat
  struct CapturePixelFormat;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Windows::WebCam::CapturePixelFormat, "UnityEngine.Windows.WebCam", "CapturePixelFormat");
// Type namespace: UnityEngine.Windows.WebCam
namespace UnityEngine::Windows::WebCam {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Windows.WebCam.CapturePixelFormat
  // [TokenAttribute] Offset: FFFFFFFF
  // [MovedFromAttribute] Offset: C8F80
  struct CapturePixelFormat/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: CapturePixelFormat
    constexpr CapturePixelFormat(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.Windows.WebCam.CapturePixelFormat BGRA32
    static constexpr const int BGRA32 = 0;
    // Get static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat BGRA32
    static ::UnityEngine::Windows::WebCam::CapturePixelFormat _get_BGRA32();
    // Set static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat BGRA32
    static void _set_BGRA32(::UnityEngine::Windows::WebCam::CapturePixelFormat value);
    // static field const value: static public UnityEngine.Windows.WebCam.CapturePixelFormat NV12
    static constexpr const int NV12 = 1;
    // Get static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat NV12
    static ::UnityEngine::Windows::WebCam::CapturePixelFormat _get_NV12();
    // Set static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat NV12
    static void _set_NV12(::UnityEngine::Windows::WebCam::CapturePixelFormat value);
    // static field const value: static public UnityEngine.Windows.WebCam.CapturePixelFormat JPEG
    static constexpr const int JPEG = 2;
    // Get static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat JPEG
    static ::UnityEngine::Windows::WebCam::CapturePixelFormat _get_JPEG();
    // Set static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat JPEG
    static void _set_JPEG(::UnityEngine::Windows::WebCam::CapturePixelFormat value);
    // static field const value: static public UnityEngine.Windows.WebCam.CapturePixelFormat PNG
    static constexpr const int PNG = 3;
    // Get static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat PNG
    static ::UnityEngine::Windows::WebCam::CapturePixelFormat _get_PNG();
    // Set static field: static public UnityEngine.Windows.WebCam.CapturePixelFormat PNG
    static void _set_PNG(::UnityEngine::Windows::WebCam::CapturePixelFormat value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.Windows.WebCam.CapturePixelFormat
  #pragma pack(pop)
  static check_size<sizeof(CapturePixelFormat), 0 + sizeof(int)> __UnityEngine_Windows_WebCam_CapturePixelFormatSizeCheck;
  static_assert(sizeof(CapturePixelFormat) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
