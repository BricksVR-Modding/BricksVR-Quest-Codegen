// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI::ProceduralImage
namespace UnityEngine::UI::ProceduralImage {
  // Forward declaring type: ProceduralImageModifier
  class ProceduralImageModifier;
  // Forward declaring type: ProceduralImageInfo
  struct ProceduralImageInfo;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Canvas
  class Canvas;
  // Skipping declaration: Vector4 because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: VertexHelper
  class VertexHelper;
}
// Completed forward declares
// Type namespace: UnityEngine.UI.ProceduralImage
namespace UnityEngine::UI::ProceduralImage {
  // Forward declaring type: ProceduralImage
  class ProceduralImage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UI::ProceduralImage::ProceduralImage);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::ProceduralImage::ProceduralImage*, "UnityEngine.UI.ProceduralImage", "ProceduralImage");
// Type namespace: UnityEngine.UI.ProceduralImage
namespace UnityEngine::UI::ProceduralImage {
  // Size: 0x114
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.ProceduralImage.ProceduralImage
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 10A150
  class ProceduralImage : public ::UnityEngine::UI::Image {
    public:
    public:
    // private System.Single borderWidth
    // Size: 0x4
    // Offset: 0x100
    float borderWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: borderWidth and: modifier
    char __padding0[0x4] = {};
    // private UnityEngine.UI.ProceduralImage.ProceduralImageModifier modifier
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::UI::ProceduralImage::ProceduralImageModifier* modifier;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ProceduralImage::ProceduralImageModifier*) == 0x8);
    // private System.Single falloffDistance
    // Size: 0x4
    // Offset: 0x110
    float falloffDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get static field: static private UnityEngine.Material materialInstance
    static ::UnityEngine::Material* _get_materialInstance();
    // Set static field: static private UnityEngine.Material materialInstance
    static void _set_materialInstance(::UnityEngine::Material* value);
    // Get instance field reference: private System.Single borderWidth
    [[deprecated("Use field access instead!")]] float& dyn_borderWidth();
    // Get instance field reference: private UnityEngine.UI.ProceduralImage.ProceduralImageModifier modifier
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ProceduralImage::ProceduralImageModifier*& dyn_modifier();
    // Get instance field reference: private System.Single falloffDistance
    [[deprecated("Use field access instead!")]] float& dyn_falloffDistance();
    // static private UnityEngine.Material get_DefaultProceduralImageMaterial()
    // Offset: 0x921C10
    static ::UnityEngine::Material* get_DefaultProceduralImageMaterial();
    // static private System.Void set_DefaultProceduralImageMaterial(UnityEngine.Material value)
    // Offset: 0x921F70
    static void set_DefaultProceduralImageMaterial(::UnityEngine::Material* value);
    // public System.Single get_BorderWidth()
    // Offset: 0x5BC780
    float get_BorderWidth();
    // public System.Void set_BorderWidth(System.Single value)
    // Offset: 0x921F50
    void set_BorderWidth(float value);
    // public System.Single get_FalloffDistance()
    // Offset: 0x4E2E60
    float get_FalloffDistance();
    // public System.Void set_FalloffDistance(System.Single value)
    // Offset: 0x921FC0
    void set_FalloffDistance(float value);
    // protected UnityEngine.UI.ProceduralImage.ProceduralImageModifier get_Modifier()
    // Offset: 0x921D10
    ::UnityEngine::UI::ProceduralImage::ProceduralImageModifier* get_Modifier();
    // protected System.Void set_Modifier(UnityEngine.UI.ProceduralImage.ProceduralImageModifier value)
    // Offset: 0x9221C0
    void set_Modifier(::UnityEngine::UI::ProceduralImage::ProceduralImageModifier* value);
    // public System.Type get_ModifierType()
    // Offset: 0x921CE0
    ::System::Type* get_ModifierType();
    // public System.Void set_ModifierType(System.Type value)
    // Offset: 0x921FE0
    void set_ModifierType(::System::Type* value);
    // public System.Void .ctor()
    // Offset: 0x921BB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ProceduralImage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ProceduralImage*, creationType>()));
    }
    // private System.Void Init()
    // Offset: 0x921770
    void Init();
    // protected System.Void OnVerticesDirty()
    // Offset: 0x921B30
    void OnVerticesDirty();
    // protected System.Void FixTexCoordsInCanvas()
    // Offset: 0x9216D0
    void FixTexCoordsInCanvas();
    // protected System.Void FixTexCoordsInCanvas(UnityEngine.Canvas c)
    // Offset: 0x921690
    void FixTexCoordsInCanvas(::UnityEngine::Canvas* c);
    // private UnityEngine.Vector4 FixRadius(UnityEngine.Vector4 vec)
    // Offset: 0x921460
    ::UnityEngine::Vector4 FixRadius(::UnityEngine::Vector4 vec);
    // private UnityEngine.UI.ProceduralImage.ProceduralImageInfo CalculateInfo()
    // Offset: 0x920D20
    ::UnityEngine::UI::ProceduralImage::ProceduralImageInfo CalculateInfo();
    // private System.Void EncodeAllInfoIntoVertices(UnityEngine.UI.VertexHelper vh, UnityEngine.UI.ProceduralImage.ProceduralImageInfo info)
    // Offset: 0x920FA0
    void EncodeAllInfoIntoVertices(::UnityEngine::UI::VertexHelper* vh, ::UnityEngine::UI::ProceduralImage::ProceduralImageInfo info);
    // private System.Single EncodeFloats_0_1_16_16(System.Single a, System.Single b)
    // Offset: 0x921340
    float EncodeFloats_0_1_16_16(float a, float b);
    // public override UnityEngine.Material get_material()
    // Offset: 0x921E20
    // Implemented from: UnityEngine.UI.Image
    // Base method: UnityEngine.Material Image::get_material()
    ::UnityEngine::Material* get_material();
    // public override System.Void set_material(UnityEngine.Material value)
    // Offset: 0x9221D0
    // Implemented from: UnityEngine.UI.Image
    // Base method: System.Void Image::set_material(UnityEngine.Material value)
    void set_material(::UnityEngine::Material* value);
    // protected override System.Void OnEnable()
    // Offset: 0x921960
    // Implemented from: UnityEngine.UI.Image
    // Base method: System.Void Image::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x9218A0
    // Implemented from: UnityEngine.UI.Image
    // Base method: System.Void Image::OnDisable()
    void OnDisable();
    // protected override System.Void OnPopulateMesh(UnityEngine.UI.VertexHelper toFill)
    // Offset: 0x921AA0
    // Implemented from: UnityEngine.UI.Image
    // Base method: System.Void Image::OnPopulateMesh(UnityEngine.UI.VertexHelper toFill)
    void OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill);
    // protected override System.Void OnTransformParentChanged()
    // Offset: 0x921B10
    // Implemented from: UnityEngine.UI.MaskableGraphic
    // Base method: System.Void MaskableGraphic::OnTransformParentChanged()
    void OnTransformParentChanged();
  }; // UnityEngine.UI.ProceduralImage.ProceduralImage
  #pragma pack(pop)
  static check_size<sizeof(ProceduralImage), 272 + sizeof(float)> __UnityEngine_UI_ProceduralImage_ProceduralImageSizeCheck;
  static_assert(sizeof(ProceduralImage) == 0x114);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::get_DefaultProceduralImageMaterial
// Il2CppName: get_DefaultProceduralImageMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::get_DefaultProceduralImageMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "get_DefaultProceduralImageMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::set_DefaultProceduralImageMaterial
// Il2CppName: set_DefaultProceduralImageMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::set_DefaultProceduralImageMaterial)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "set_DefaultProceduralImageMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::get_BorderWidth
// Il2CppName: get_BorderWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::get_BorderWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "get_BorderWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::set_BorderWidth
// Il2CppName: set_BorderWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(float)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::set_BorderWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "set_BorderWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::get_FalloffDistance
// Il2CppName: get_FalloffDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::get_FalloffDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "get_FalloffDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::set_FalloffDistance
// Il2CppName: set_FalloffDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(float)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::set_FalloffDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "set_FalloffDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::get_Modifier
// Il2CppName: get_Modifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::ProceduralImage::ProceduralImageModifier* (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::get_Modifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "get_Modifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::set_Modifier
// Il2CppName: set_Modifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(::UnityEngine::UI::ProceduralImage::ProceduralImageModifier*)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::set_Modifier)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI.ProceduralImage", "ProceduralImageModifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "set_Modifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::get_ModifierType
// Il2CppName: get_ModifierType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::get_ModifierType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "get_ModifierType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::set_ModifierType
// Il2CppName: set_ModifierType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(::System::Type*)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::set_ModifierType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "set_ModifierType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::OnVerticesDirty
// Il2CppName: OnVerticesDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::OnVerticesDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "OnVerticesDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas
// Il2CppName: FixTexCoordsInCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "FixTexCoordsInCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas
// Il2CppName: FixTexCoordsInCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(::UnityEngine::Canvas*)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Canvas")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "FixTexCoordsInCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::FixRadius
// Il2CppName: FixRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector4 (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(::UnityEngine::Vector4)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::FixRadius)> {
  static const MethodInfo* get() {
    static auto* vec = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "FixRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vec});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::CalculateInfo
// Il2CppName: CalculateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::ProceduralImage::ProceduralImageInfo (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::CalculateInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "CalculateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeAllInfoIntoVertices
// Il2CppName: EncodeAllInfoIntoVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(::UnityEngine::UI::VertexHelper*, ::UnityEngine::UI::ProceduralImage::ProceduralImageInfo)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeAllInfoIntoVertices)> {
  static const MethodInfo* get() {
    static auto* vh = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "VertexHelper")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("UnityEngine.UI.ProceduralImage", "ProceduralImageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "EncodeAllInfoIntoVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vh, info});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeFloats_0_1_16_16
// Il2CppName: EncodeFloats_0_1_16_16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(float, float)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeFloats_0_1_16_16)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "EncodeFloats_0_1_16_16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::get_material
// Il2CppName: get_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::get_material)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "get_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::set_material
// Il2CppName: set_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(::UnityEngine::Material*)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::set_material)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "set_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)(::UnityEngine::UI::VertexHelper*)>(&UnityEngine::UI::ProceduralImage::ProceduralImage::OnPopulateMesh)> {
  static const MethodInfo* get() {
    static auto* toFill = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "VertexHelper")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{toFill});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ProceduralImage::ProceduralImage::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ProceduralImage::ProceduralImage::*)()>(&UnityEngine::UI::ProceduralImage::ProceduralImage::OnTransformParentChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ProceduralImage::ProceduralImage*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
