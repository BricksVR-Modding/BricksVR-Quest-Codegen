// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Steamworks::Data
namespace Steamworks::Data {
  // Forward declaring type: ConnectionInfo
  struct ConnectionInfo;
}
// Completed forward declares
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: IConnectionManager
  class IConnectionManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Steamworks::IConnectionManager);
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::IConnectionManager*, "Steamworks", "IConnectionManager");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Steamworks.IConnectionManager
  // [TokenAttribute] Offset: FFFFFFFF
  class IConnectionManager {
    public:
    // public System.Void OnConnecting(Steamworks.Data.ConnectionInfo info)
    // Offset: 0xFFFFFFFF
    void OnConnecting(::Steamworks::Data::ConnectionInfo info);
    // public System.Void OnConnected(Steamworks.Data.ConnectionInfo info)
    // Offset: 0xFFFFFFFF
    void OnConnected(::Steamworks::Data::ConnectionInfo info);
    // public System.Void OnDisconnected(Steamworks.Data.ConnectionInfo info)
    // Offset: 0xFFFFFFFF
    void OnDisconnected(::Steamworks::Data::ConnectionInfo info);
  }; // Steamworks.IConnectionManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Steamworks::IConnectionManager::OnConnecting
// Il2CppName: OnConnecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::IConnectionManager::*)(::Steamworks::Data::ConnectionInfo)>(&Steamworks::IConnectionManager::OnConnecting)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "ConnectionInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::IConnectionManager*), "OnConnecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: Steamworks::IConnectionManager::OnConnected
// Il2CppName: OnConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::IConnectionManager::*)(::Steamworks::Data::ConnectionInfo)>(&Steamworks::IConnectionManager::OnConnected)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "ConnectionInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::IConnectionManager*), "OnConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: Steamworks::IConnectionManager::OnDisconnected
// Il2CppName: OnDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Steamworks::IConnectionManager::*)(::Steamworks::Data::ConnectionInfo)>(&Steamworks::IConnectionManager::OnDisconnected)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("Steamworks.Data", "ConnectionInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Steamworks::IConnectionManager*), "OnDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
