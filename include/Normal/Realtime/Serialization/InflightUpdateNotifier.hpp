// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
}
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: IConfirmedProperty
  class IConfirmedProperty;
}
// Forward declaring namespace: Normal::Realtime::Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: InflightUpdateSubscription
  struct InflightUpdateSubscription;
}
// Completed forward declares
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: InflightUpdateNotifier
  class InflightUpdateNotifier;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::Serialization::InflightUpdateNotifier);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Serialization::InflightUpdateNotifier*, "Normal.Realtime.Serialization", "InflightUpdateNotifier");
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Serialization.InflightUpdateNotifier
  // [TokenAttribute] Offset: FFFFFFFF
  class InflightUpdateNotifier : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Collections.Generic.Dictionary`2<System.UInt32,System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _properties
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>* properties;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*) == 0x8);
    // private readonly System.Collections.Generic.Stack`1<System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _pool
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Stack_1<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>* pool;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*) == 0x8);
    // private System.Boolean _lock
    // Size: 0x1
    // Offset: 0x20
    bool lock;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.UInt32,System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _properties
    [[deprecated]] ::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*& dyn__properties();
    // Get instance field reference: private readonly System.Collections.Generic.Stack`1<System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _pool
    [[deprecated]] ::System::Collections::Generic::Stack_1<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*& dyn__pool();
    // Get instance field reference: private System.Boolean _lock
    [[deprecated]] bool& dyn__lock();
    // private System.Void ThrowIfLocked()
    // Offset: 0x88C8E0
    void ThrowIfLocked();
    // public Normal.Realtime.Serialization.InflightUpdateSubscription Subscribe(System.UInt32 updateID, Normal.Realtime.IConfirmedProperty property)
    // Offset: 0x88C6A0
    ::Normal::Realtime::Serialization::InflightUpdateSubscription Subscribe(uint updateID, ::Normal::Realtime::IConfirmedProperty* property);
    // public System.Void Unsubscribe(System.UInt32 updateID, Normal.Realtime.IConfirmedProperty property)
    // Offset: 0x88C950
    void Unsubscribe(uint updateID, ::Normal::Realtime::IConfirmedProperty* property);
    // public System.Void AckUpdateID(System.UInt32 updateID)
    // Offset: 0x88C330
    void AckUpdateID(uint updateID);
    // static private System.Void SafeInvokeAck(Normal.Realtime.IConfirmedProperty prop, System.UInt32 updateID)
    // Offset: 0x88C520
    static void SafeInvokeAck(::Normal::Realtime::IConfirmedProperty* prop, uint updateID);
    // private System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty> TakePropertyList()
    // Offset: 0x88C860
    ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>* TakePropertyList();
    // private System.Void ReleasePropertyList(System.UInt32 updateID)
    // Offset: 0x88C470
    void ReleasePropertyList(uint updateID);
    // public System.Void .ctor()
    // Offset: 0x88CA50
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InflightUpdateNotifier* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InflightUpdateNotifier*, creationType>()));
    }
  }; // Normal.Realtime.Serialization.InflightUpdateNotifier
  #pragma pack(pop)
  static check_size<sizeof(InflightUpdateNotifier), 32 + sizeof(bool)> __Normal_Realtime_Serialization_InflightUpdateNotifierSizeCheck;
  static_assert(sizeof(InflightUpdateNotifier) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::ThrowIfLocked
// Il2CppName: ThrowIfLocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Serialization::InflightUpdateNotifier::*)()>(&Normal::Realtime::Serialization::InflightUpdateNotifier::ThrowIfLocked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::InflightUpdateNotifier*), "ThrowIfLocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::Subscribe
// Il2CppName: Subscribe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Normal::Realtime::Serialization::InflightUpdateSubscription (Normal::Realtime::Serialization::InflightUpdateNotifier::*)(uint, ::Normal::Realtime::IConfirmedProperty*)>(&Normal::Realtime::Serialization::InflightUpdateNotifier::Subscribe)> {
  static const MethodInfo* get() {
    static auto* updateID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "IConfirmedProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::InflightUpdateNotifier*), "Subscribe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateID, property});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::Unsubscribe
// Il2CppName: Unsubscribe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Serialization::InflightUpdateNotifier::*)(uint, ::Normal::Realtime::IConfirmedProperty*)>(&Normal::Realtime::Serialization::InflightUpdateNotifier::Unsubscribe)> {
  static const MethodInfo* get() {
    static auto* updateID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "IConfirmedProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::InflightUpdateNotifier*), "Unsubscribe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateID, property});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::AckUpdateID
// Il2CppName: AckUpdateID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Serialization::InflightUpdateNotifier::*)(uint)>(&Normal::Realtime::Serialization::InflightUpdateNotifier::AckUpdateID)> {
  static const MethodInfo* get() {
    static auto* updateID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::InflightUpdateNotifier*), "AckUpdateID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::SafeInvokeAck
// Il2CppName: SafeInvokeAck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Normal::Realtime::IConfirmedProperty*, uint)>(&Normal::Realtime::Serialization::InflightUpdateNotifier::SafeInvokeAck)> {
  static const MethodInfo* get() {
    static auto* prop = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "IConfirmedProperty")->byval_arg;
    static auto* updateID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::InflightUpdateNotifier*), "SafeInvokeAck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop, updateID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::TakePropertyList
// Il2CppName: TakePropertyList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>* (Normal::Realtime::Serialization::InflightUpdateNotifier::*)()>(&Normal::Realtime::Serialization::InflightUpdateNotifier::TakePropertyList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::InflightUpdateNotifier*), "TakePropertyList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::ReleasePropertyList
// Il2CppName: ReleasePropertyList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::Serialization::InflightUpdateNotifier::*)(uint)>(&Normal::Realtime::Serialization::InflightUpdateNotifier::ReleasePropertyList)> {
  static const MethodInfo* get() {
    static auto* updateID = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::InflightUpdateNotifier*), "ReleasePropertyList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateID});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::Serialization::InflightUpdateNotifier::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
