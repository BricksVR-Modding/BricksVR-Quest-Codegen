// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NormcoreRPC
#include "GlobalNamespace/NormcoreRPC.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NormalSessionManager
  class NormalSessionManager;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PlacedBrickCreator
  class PlacedBrickCreator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PlacedBrickCreator);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PlacedBrickCreator*, "", "PlacedBrickCreator");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PlacedBrickCreator
  // [TokenAttribute] Offset: FFFFFFFF
  class PlacedBrickCreator : public ::Il2CppObject {
    public:
    // Get static field: static private NormalSessionManager _sessionManager
    static ::GlobalNamespace::NormalSessionManager* _get__sessionManager();
    // Set static field: static private NormalSessionManager _sessionManager
    static void _set__sessionManager(::GlobalNamespace::NormalSessionManager* value);
    // static public UnityEngine.GameObject CreateFromBrickObject(NormcoreRPC/Brick brick, System.Boolean recalculateMesh)
    // Offset: 0x678730
    static ::UnityEngine::GameObject* CreateFromBrickObject(::GlobalNamespace::NormcoreRPC::Brick* brick, bool recalculateMesh);
    // static private UnityEngine.GameObject CreateFromAttributes(System.Int32 matId, System.String type, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, System.String uuid, System.Int32 color, System.Boolean usingNewColor, System.Int32 headClientId, System.Boolean recalculateMesh)
    // Offset: 0x6782E0
    static ::UnityEngine::GameObject* CreateFromAttributes(int matId, ::StringW type, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, ::StringW uuid, int color, bool usingNewColor, int headClientId, bool recalculateMesh);
  }; // PlacedBrickCreator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickCreator::CreateFromBrickObject
// Il2CppName: CreateFromBrickObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::GlobalNamespace::NormcoreRPC::Brick*, bool)>(&GlobalNamespace::PlacedBrickCreator::CreateFromBrickObject)> {
  static const MethodInfo* get() {
    static auto* brick = &::il2cpp_utils::GetClassFromName("", "NormcoreRPC/Brick")->byval_arg;
    static auto* recalculateMesh = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlacedBrickCreator*), "CreateFromBrickObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{brick, recalculateMesh});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickCreator::CreateFromAttributes
// Il2CppName: CreateFromAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(int, ::StringW, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::StringW, int, bool, int, bool)>(&GlobalNamespace::PlacedBrickCreator::CreateFromAttributes)> {
  static const MethodInfo* get() {
    static auto* matId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* usingNewColor = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* headClientId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* recalculateMesh = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlacedBrickCreator*), "CreateFromAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matId, type, pos, rot, uuid, color, usingNewColor, headClientId, recalculateMesh});
  }
};
