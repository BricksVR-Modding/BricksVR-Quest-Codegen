// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Steamworks
namespace Steamworks {
  // Forward declaring type: SteamItemFlags
  struct SteamItemFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Steamworks::SteamItemFlags, "Steamworks", "SteamItemFlags");
// Type namespace: Steamworks
namespace Steamworks {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Steamworks.SteamItemFlags
  // [TokenAttribute] Offset: FFFFFFFF
  struct SteamItemFlags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SteamItemFlags
    constexpr SteamItemFlags(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Steamworks.SteamItemFlags NoTrade
    static constexpr const int NoTrade = 1;
    // Get static field: static public Steamworks.SteamItemFlags NoTrade
    static ::Steamworks::SteamItemFlags _get_NoTrade();
    // Set static field: static public Steamworks.SteamItemFlags NoTrade
    static void _set_NoTrade(::Steamworks::SteamItemFlags value);
    // static field const value: static public Steamworks.SteamItemFlags Removed
    static constexpr const int Removed = 256;
    // Get static field: static public Steamworks.SteamItemFlags Removed
    static ::Steamworks::SteamItemFlags _get_Removed();
    // Set static field: static public Steamworks.SteamItemFlags Removed
    static void _set_Removed(::Steamworks::SteamItemFlags value);
    // static field const value: static public Steamworks.SteamItemFlags Consumed
    static constexpr const int Consumed = 512;
    // Get static field: static public Steamworks.SteamItemFlags Consumed
    static ::Steamworks::SteamItemFlags _get_Consumed();
    // Set static field: static public Steamworks.SteamItemFlags Consumed
    static void _set_Consumed(::Steamworks::SteamItemFlags value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Steamworks.SteamItemFlags
  #pragma pack(pop)
  static check_size<sizeof(SteamItemFlags), 0 + sizeof(int)> __Steamworks_SteamItemFlagsSizeCheck;
  static_assert(sizeof(SteamItemFlags) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
