// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime::Native
namespace Normal::Realtime::Native {
  // Forward declaring type: AudioPreprocessor
  class AudioPreprocessor;
}
// Completed forward declares
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Forward declaring type: AudioPreprocessorPlaybackListener
  class AudioPreprocessorPlaybackListener;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::AudioPreprocessorPlaybackListener);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::AudioPreprocessorPlaybackListener*, "Normal.Realtime", "AudioPreprocessorPlaybackListener");
// Type namespace: Normal.Realtime
namespace Normal::Realtime {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.AudioPreprocessorPlaybackListener
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioPreprocessorPlaybackListener : public ::UnityEngine::MonoBehaviour {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public Normal.Realtime.Native.AudioPreprocessor audioPreprocessor
    // Size: 0x8
    // Offset: 0x18
    ::Normal::Realtime::Native::AudioPreprocessor* audioPreprocessor;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::Native::AudioPreprocessor*) == 0x8);
    // private System.Boolean didLogChannelWarning
    // Size: 0x1
    // Offset: 0x20
    bool didLogChannelWarning;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public Normal.Realtime.Native.AudioPreprocessor audioPreprocessor
    ::Normal::Realtime::Native::AudioPreprocessor*& dyn_audioPreprocessor();
    // Get instance field reference: private System.Boolean didLogChannelWarning
    bool& dyn_didLogChannelWarning();
    // private System.Void OnAudioFilterRead(System.Single[] samples, System.Int32 channels)
    // Offset: 0xFEE470
    void OnAudioFilterRead(::ArrayW<float> samples, int channels);
    // public System.Void .ctor()
    // Offset: 0xFEE52C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioPreprocessorPlaybackListener* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::AudioPreprocessorPlaybackListener::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioPreprocessorPlaybackListener*, creationType>()));
    }
  }; // Normal.Realtime.AudioPreprocessorPlaybackListener
  #pragma pack(pop)
  static check_size<sizeof(AudioPreprocessorPlaybackListener), 32 + sizeof(bool)> __Normal_Realtime_AudioPreprocessorPlaybackListenerSizeCheck;
  static_assert(sizeof(AudioPreprocessorPlaybackListener) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::AudioPreprocessorPlaybackListener::OnAudioFilterRead
// Il2CppName: OnAudioFilterRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Normal::Realtime::AudioPreprocessorPlaybackListener::*)(::ArrayW<float>, int)>(&Normal::Realtime::AudioPreprocessorPlaybackListener::OnAudioFilterRead)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::AudioPreprocessorPlaybackListener*), "OnAudioFilterRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channels});
  }
};
// Writing MetadataGetter for method: Normal::Realtime::AudioPreprocessorPlaybackListener::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
