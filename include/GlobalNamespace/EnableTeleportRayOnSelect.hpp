// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRRayInteractor
  class XRRayInteractor;
  // Forward declaring type: XRInteractorLineVisual
  class XRInteractorLineVisual;
  // Forward declaring type: XRBaseInteractable
  class XRBaseInteractable;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: EnableTeleportRayOnSelect
  class EnableTeleportRayOnSelect;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::EnableTeleportRayOnSelect);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::EnableTeleportRayOnSelect*, "", "EnableTeleportRayOnSelect");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: EnableTeleportRayOnSelect
  // [TokenAttribute] Offset: FFFFFFFF
  class EnableTeleportRayOnSelect : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor _interactor
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor* interactor;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual _lineVisual
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual* lineVisual;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor _interactor
    [[deprecated]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*& dyn__interactor();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual _lineVisual
    [[deprecated]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*& dyn__lineVisual();
    // private System.Void OnEnable()
    // Offset: 0x6B39D0
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x6B38F0
    void OnDisable();
    // private System.Void OnEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable _)
    // Offset: 0x6B3B00
    void OnEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* _);
    // private System.Void OnExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable _)
    // Offset: 0x6B3B30
    void OnExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* _);
    // public System.Void .ctor()
    // Offset: 0x1DDE30
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnableTeleportRayOnSelect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableTeleportRayOnSelect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnableTeleportRayOnSelect*, creationType>()));
    }
  }; // EnableTeleportRayOnSelect
  #pragma pack(pop)
  static check_size<sizeof(EnableTeleportRayOnSelect), 32 + sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*)> __GlobalNamespace_EnableTeleportRayOnSelectSizeCheck;
  static_assert(sizeof(EnableTeleportRayOnSelect) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::EnableTeleportRayOnSelect::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EnableTeleportRayOnSelect::*)()>(&GlobalNamespace::EnableTeleportRayOnSelect::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EnableTeleportRayOnSelect*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EnableTeleportRayOnSelect::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EnableTeleportRayOnSelect::*)()>(&GlobalNamespace::EnableTeleportRayOnSelect::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EnableTeleportRayOnSelect*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EnableTeleportRayOnSelect::OnEnter
// Il2CppName: OnEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EnableTeleportRayOnSelect::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&GlobalNamespace::EnableTeleportRayOnSelect::OnEnter)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EnableTeleportRayOnSelect*), "OnEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EnableTeleportRayOnSelect::OnExit
// Il2CppName: OnExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EnableTeleportRayOnSelect::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&GlobalNamespace::EnableTeleportRayOnSelect::OnExit)> {
  static const MethodInfo* get() {
    static auto* _ = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EnableTeleportRayOnSelect*), "OnExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EnableTeleportRayOnSelect::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
