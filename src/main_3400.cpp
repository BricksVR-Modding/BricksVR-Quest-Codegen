// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError None
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError None
void OVR::OpenVR::EVRInitError::_set_None(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Unknown
void OVR::OpenVR::EVRInitError::_set_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
void OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FileNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
void OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
void OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
void OVR::OpenVR::EVRInitError::_set_Init_NotInitialized(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
void OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoLogPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoLogPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
void OVR::OpenVR::EVRInitError::_set_Init_NoLogPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoLogPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoLogPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Retry
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Retry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Retry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Retry"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Retry
void OVR::OpenVR::EVRInitError::_set_Init_Retry(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Retry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Retry", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
void OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
void OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
void OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
void OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
void OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
void OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Internal
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Internal
void OVR::OpenVR::EVRInitError::_set_Init_Internal(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
void OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
void OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
void OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
void OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
void OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
void OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Failed
void OVR::OpenVR::EVRInitError::_set_Driver_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
void OVR::OpenVR::EVRInitError::_set_Driver_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
void OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
void OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
void OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
void OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
void OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_Failed
void OVR::OpenVR::EVRInitError::_set_IPC_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
void OVR::OpenVR::EVRInitError::_set_Compositor_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
void OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
void OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
void OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRInitError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotType
#include "OVR/OpenVR/EVRScreenshotType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType None
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType None
void OVR::OpenVR::EVRScreenshotType::_set_None(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Mono
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Mono
void OVR::OpenVR::EVRScreenshotType::_set_Mono(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Stereo
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Stereo
void OVR::OpenVR::EVRScreenshotType::_set_Stereo(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
void OVR::OpenVR::EVRScreenshotType::_set_Cubemap(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRScreenshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotPropertyFilenames
#include "OVR/OpenVR/EVRScreenshotPropertyFilenames.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraError
#include "OVR/OpenVR/EVRTrackedCameraError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError None
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError None
void OVR::OpenVR::EVRTrackedCameraError::_set_None(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
void OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
void OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
void OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
void OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRTrackedCameraError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameLayout
#include "OVR/OpenVR/EVRTrackedCameraFrameLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameType
#include "OVR/OpenVR/EVRTrackedCameraFrameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVSync
#include "OVR/OpenVR/EVSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync None
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync None
void OVR::OpenVR::EVSync::_set_None(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync WaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_WaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_WaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "WaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync WaitRender
void OVR::OpenVR::EVSync::_set_WaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_WaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "WaitRender", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync NoWaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_NoWaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_NoWaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "NoWaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync NoWaitRender
void OVR::OpenVR::EVSync::_set_NoWaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_NoWaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "NoWaitRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVSync::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRMuraCorrectionMode
#include "OVR/OpenVR/EVRMuraCorrectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
void OVR::OpenVR::EVRMuraCorrectionMode::_set_Default(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
void OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.Imu_OffScaleFlags
#include "OVR/OpenVR/Imu_OffScaleFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::Imu_OffScaleFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError None
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError None
void OVR::OpenVR::EVRApplicationError::_set_None(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
void OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoManifest
void OVR::OpenVR::EVRApplicationError::_set_NoManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoApplication
void OVR::OpenVR::EVRApplicationError::_set_NoApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidIndex"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
void OVR::OpenVR::EVRApplicationError::_set_InvalidIndex(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidIndex", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
void OVR::OpenVR::EVRApplicationError::_set_UnknownApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
void OVR::OpenVR::EVRApplicationError::_set_IPCFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
void OVR::OpenVR::EVRApplicationError::_set_InvalidManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
void OVR::OpenVR::EVRApplicationError::_set_InvalidApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
void OVR::OpenVR::EVRApplicationError::_set_LaunchFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
void OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
void OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_TransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_TransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "TransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
void OVR::OpenVR::EVRApplicationError::_set_TransitionAborted(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_TransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "TransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IsTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IsTemplate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IsTemplate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
void OVR::OpenVR::EVRApplicationError::_set_IsTemplate(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IsTemplate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IsTemplate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
void OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
void OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
void OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
void OVR::OpenVR::EVRApplicationError::_set_UnknownProperty(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
void OVR::OpenVR::EVRApplicationError::_set_InvalidParameter(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidParameter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRApplicationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Name_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Name_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Name_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
void OVR::OpenVR::EVRApplicationProperty::_set_Name_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Name_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Name_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
void OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
void OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
void OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
void OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_URL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_URL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "URL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
void OVR::OpenVR::EVRApplicationProperty::_set_URL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_URL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "URL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Description_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Description_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Description_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
void OVR::OpenVR::EVRApplicationProperty::_set_Description_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Description_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Description_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
void OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Source_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Source_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Source_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
void OVR::OpenVR::EVRApplicationProperty::_set_Source_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Source_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Source_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
void OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRApplicationProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationTransitionState
#include "OVR/OpenVR/EVRApplicationTransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRApplicationTransitionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ChaperoneCalibrationState
#include "OVR/OpenVR/ChaperoneCalibrationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
void OVR::OpenVR::ChaperoneCalibrationState::_set_OK(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ChaperoneCalibrationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneConfigFile
#include "OVR/OpenVR/EChaperoneConfigFile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Live
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Live() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Live");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Live"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Live
void OVR::OpenVR::EChaperoneConfigFile::_set_Live(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Live");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Live", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Temp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Temp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
void OVR::OpenVR::EChaperoneConfigFile::_set_Temp(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Temp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Temp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EChaperoneConfigFile::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneImportFlags
#include "OVR/OpenVR/EChaperoneImportFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
::OVR::OpenVR::EChaperoneImportFlags OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneImportFlags>("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
void OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly(::OVR::OpenVR::EChaperoneImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EChaperoneImportFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError None
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError None
void OVR::OpenVR::EVRCompositorError::_set_None(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
void OVR::OpenVR::EVRCompositorError::_set_RequestFailed(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
void OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
void OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
void OVR::OpenVR::EVRCompositorError::_set_InvalidTexture(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
void OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
void OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
void OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
void OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
void OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
void OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
void OVR::OpenVR::EVRCompositorError::_set_InvalidBounds(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRCompositorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorTimingMode
#include "OVR/OpenVR/EVRCompositorTimingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
void OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRCompositorTimingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod None
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod None
void OVR::OpenVR::VROverlayInputMethod::_set_None(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
void OVR::OpenVR::VROverlayInputMethod::_set_Mouse(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
void OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VROverlayInputMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayTransformType
#include "OVR/OpenVR/VROverlayTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VROverlayTransformType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags None
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags None
void OVR::OpenVR::VROverlayFlags::_set_None(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Curved
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Curved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Curved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Curved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Curved
void OVR::OpenVR::VROverlayFlags::_set_Curved(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Curved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Curved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_RGSS4X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_RGSS4X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "RGSS4X"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
void OVR::OpenVR::VROverlayFlags::_set_RGSS4X(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_RGSS4X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "RGSS4X", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
void OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
void OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
void OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
void OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
void OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Panorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Panorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Panorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Panorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Panorama
void OVR::OpenVR::VROverlayFlags::_set_Panorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Panorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Panorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
void OVR::OpenVR::VROverlayFlags::_set_StereoPanorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "StereoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
void OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
void OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VROverlayFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
void OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VRMessageOverlayResponse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputMode
#include "OVR/OpenVR/EGamepadTextInputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EGamepadTextInputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputLineMode
#include "OVR/OpenVR/EGamepadTextInputLineMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Up
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Up
void OVR::OpenVR::EOverlayDirection::_set_Up(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Down
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Down
void OVR::OpenVR::EOverlayDirection::_set_Down(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Left
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Left
void OVR::OpenVR::EOverlayDirection::_set_Left(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Right
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Right
void OVR::OpenVR::EOverlayDirection::_set_Right(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Count
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Count
void OVR::OpenVR::EOverlayDirection::_set_Count(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EOverlayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType
#include "OVR/OpenVR/EVROverlayIntersectionMaskPrimitiveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError None
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError None
void OVR::OpenVR::EVRRenderModelError::_set_None(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError Loading
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError Loading
void OVR::OpenVR::EVRRenderModelError::_set_Loading(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
void OVR::OpenVR::EVRRenderModelError::_set_NotSupported(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidArg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidArg"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
void OVR::OpenVR::EVRRenderModelError::_set_InvalidArg(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidArg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidArg", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidModel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
void OVR::OpenVR::EVRRenderModelError::_set_InvalidModel(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidModel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NoShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NoShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NoShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
void OVR::OpenVR::EVRRenderModelError::_set_NoShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NoShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NoShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
void OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
void OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
void OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
void OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
void OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRRenderModelError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRComponentProperty
#include "OVR/OpenVR/EVRComponentProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsStatic"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
void OVR::OpenVR::EVRComponentProperty::_set_IsStatic(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsStatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
void OVR::OpenVR::EVRComponentProperty::_set_IsVisible(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsTouched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsTouched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
void OVR::OpenVR::EVRComponentProperty::_set_IsTouched(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsTouched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsTouched", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsPressed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
void OVR::OpenVR::EVRComponentProperty::_set_IsPressed(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsPressed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsScrolled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsScrolled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsScrolled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
void OVR::OpenVR::EVRComponentProperty::_set_IsScrolled(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsScrolled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsScrolled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRComponentProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationType
#include "OVR/OpenVR/EVRNotificationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient
void OVR::OpenVR::EVRNotificationType::_set_Transient(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Persistent
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Persistent
void OVR::OpenVR::EVRNotificationType::_set_Persistent(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
void OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRNotificationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationStyle
#include "OVR/OpenVR/EVRNotificationStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle None
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle None
void OVR::OpenVR::EVRNotificationStyle::_set_None(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Application
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Application"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Application
void OVR::OpenVR::EVRNotificationStyle::_set_Application(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRNotificationStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError None
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError None
void OVR::OpenVR::EVRSettingsError::_set_None(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
void OVR::OpenVR::EVRSettingsError::_set_IPCFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_WriteFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_WriteFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "WriteFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
void OVR::OpenVR::EVRSettingsError::_set_WriteFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_WriteFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "WriteFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_ReadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_ReadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "ReadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
void OVR::OpenVR::EVRSettingsError::_set_ReadFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_ReadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "ReadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
void OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
void OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRSettingsError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError None
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError None
void OVR::OpenVR::EVRScreenshotError::_set_None(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
void OVR::OpenVR::EVRScreenshotError::_set_RequestFailed(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
void OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError NotFound
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError NotFound
void OVR::OpenVR::EVRScreenshotError::_set_NotFound(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
void OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
void OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRScreenshotError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputFilterCancelType
#include "OVR/OpenVR/EVRInputFilterCancelType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRInputFilterCancelType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EIOBufferError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Read
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Read
void OVR::OpenVR::EIOBufferMode::_set_Read(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Write
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Write
void OVR::OpenVR::EIOBufferMode::_set_Write(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Create
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Create
void OVR::OpenVR::EIOBufferMode::_set_Create(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Create", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EIOBufferMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_Keyboard_t
#include "OVR/OpenVR/VREvent_Keyboard_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput0
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput1
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput2
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput3
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput4
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput5
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput6
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput7
uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 uUserValue
uint64_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uUserValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_Keyboard_t.get_cNewInput
::StringW OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_cNewInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_t_Packed
#include "OVR/OpenVR/VREvent_t_Packed.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 eventType
uint& OVR::OpenVR::VREvent_t_Packed::dyn_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventType"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
uint& OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eventAgeSeconds
float& OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventAgeSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VREvent_Data_t data
::OVR::OpenVR::VREvent_Data_t& OVR::OpenVR::VREvent_t_Packed::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VREvent_Data_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed..ctor
OVR::OpenVR::VREvent_t_Packed::VREvent_t_Packed(::OVR::OpenVR::VREvent_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed.Unpack
void OVR::OpenVR::VREvent_t_Packed::Unpack(ByRef<::OVR::OpenVR::VREvent_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRControllerState_t_Packed
#include "OVR/OpenVR/VRControllerState_t_Packed.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unPacketNum
uint& OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unPacketNum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonPressed
uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonPressed"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonTouched
uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonTouched"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis0
::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis0"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis1
::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis1"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis2
::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis2"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis3
::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis3"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis4
::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis4"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed..ctor
OVR::OpenVR::VRControllerState_t_Packed::VRControllerState_t_Packed(::OVR::OpenVR::VRControllerState_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed.Unpack
void OVR::OpenVR::VRControllerState_t_Packed::Unpack(ByRef<::OVR::OpenVR::VRControllerState_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_TextureMap_t_Packed
#include "OVR/OpenVR/RenderModel_TextureMap_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_TextureMap_t
#include "OVR/OpenVR/RenderModel_TextureMap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unWidth
uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unWidth"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unHeight
uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unHeight"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rubTextureMapData
::System::IntPtr& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rubTextureMapData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed..ctor
OVR::OpenVR::RenderModel_TextureMap_t_Packed::RenderModel_TextureMap_t_Packed(::OVR::OpenVR::RenderModel_TextureMap_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed.Unpack
void OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_TextureMap_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_t_Packed
#include "OVR/OpenVR/RenderModel_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_t
#include "OVR/OpenVR/RenderModel_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rVertexData
::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rVertexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unVertexCount
uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unVertexCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rIndexData
::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rIndexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unTriangleCount
uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unTriangleCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 diffuseTextureId
int& OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diffuseTextureId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed..ctor
OVR::OpenVR::RenderModel_t_Packed::RenderModel_t_Packed(::OVR::OpenVR::RenderModel_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed.Unpack
void OVR::OpenVR::RenderModel_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.InputOriginInfo_t
#include "OVR/OpenVR/InputOriginInfo_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 devicePath
uint64_t& OVR::OpenVR::InputOriginInfo_t::dyn_devicePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_devicePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devicePath"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
uint& OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName0
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName1
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName2
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName3
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName4
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName5
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName6
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName7
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName8
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName8"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName9
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName9"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName10
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName10"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName11
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName11"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName12
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName12"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName13
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName13"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName14
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName14"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName15
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName15"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName16
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName16"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName17
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName17"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName18
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName18"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName19
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName19"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName20
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName20"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName21
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName21"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName22
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName22"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName23
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName23"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName24
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName24"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName25
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName25"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName26
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName26"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName27
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName27"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName28
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName28"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName29
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName29"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName30
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName30"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName31
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName31"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName32
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName32"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName33
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName33"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName34
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName34"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName35
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName35"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName36
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName36"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName37
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName37"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName38
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName38"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName39
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName39"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName40
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName40"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName41
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName41"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName42
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName42"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName43
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName43"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName44
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName44"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName45
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName45"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName46
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName46"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName47
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName47"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName48
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName48"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName49
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName49"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName50
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName50"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName51
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName51"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName52
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName52"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName53
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName53"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName54
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName54"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName55
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName55"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName56
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName56"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName57
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName57"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName58
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName58"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName59
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName59"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName60
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName60"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName61
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName61"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName62
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName62"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName63
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName63"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName64
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName64"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName65
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName65"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName66
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName66"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName67
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName67"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName68
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName68"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName69
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName69"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName70
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName70"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName71
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName71"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName72
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName72"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName73
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName73"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName74
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName74"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName75
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName75"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName76
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName76"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName77
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName77"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName78
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName78"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName79
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName79"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName80
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName80"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName81
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName81"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName82
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName82"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName83
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName83"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName84
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName84"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName85
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName85"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName86
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName86"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName87
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName87"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName88
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName88"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName89
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName89"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName90
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName90"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName91
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName91"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName92
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName92"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName93
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName93"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName94
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName94"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName95
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName95"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName96
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName96"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName97
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName97"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName98
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName98"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName99
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName99"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName100
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName100"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName101
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName101"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName102
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName102"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName103
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName103"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName104
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName104"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName105
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName105"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName106
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName106"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName107
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName107"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName108
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName108"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName109
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName109"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName110
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName110"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName111
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName111"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName112
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName112"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName113
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName113"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName114
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName114"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName115
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName115"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName116
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName116"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName117
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName117"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName118
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName118"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName119
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName119"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName120
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName120"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName121
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName121"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName122
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName122"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName123
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName123"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName124
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName124"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName125
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName125"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName126
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName126"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName127
uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName127"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.InputOriginInfo_t.get_rchRenderModelComponentName
::StringW OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rchRenderModelComponentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR
#include "OVR/OpenVR/OpenVR.hpp"
// Including type: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_nDriverNone
uint OVR::OpenVR::OpenVR::_get_k_nDriverNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_nDriverNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_nDriverNone"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_nDriverNone
void OVR::OpenVR::OpenVR::_set_k_nDriverNone(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_nDriverNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_nDriverNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
void OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxTrackedDeviceCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxTrackedDeviceCount
void OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexOther
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexOther
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidPropertyContainer
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidPropertyContainer
void OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInvalidPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInvalidPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidDriverHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidDriverHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unFloatPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unFloatPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInt32PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInt32PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unUint64PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unUint64PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unBoolPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unBoolPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unStringPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unStringPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector3PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector3PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector4PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector4PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHiddenAreaPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHiddenAreaPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unPathHandleInfoTag
uint OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unPathHandleInfoTag
void OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unActionPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unActionPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInputValuePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInputValuePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unWildcardPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unWildcardPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHapticVibrationPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHapticVibrationPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSkeletonPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSkeletonPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_End
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_End
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxPropertyStringSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxPropertyStringSize
void OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionSetHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionSetHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidInputValueHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidInputValueHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unControllerStateAxisCount
uint OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unControllerStateAxisCount
void OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulOverlayHandleInvalid
uint64_t OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulOverlayHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unScreenshotHandleInvalid
uint OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unScreenshotHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSystem_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSystem_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSystem_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSystem_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSystem_Version
void OVR::OpenVR::OpenVR::_set_IVRSystem_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSystem_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSystem_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRExtendedDisplay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRExtendedDisplay_Version
void OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRTrackedCamera_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRTrackedCamera_Version
void OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxApplicationKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxApplicationKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_HomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_HomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_GameTheater
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_GameTheater
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRApplications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRApplications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRApplications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRApplications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRApplications_Version
void OVR::OpenVR::OpenVR::_set_IVRApplications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRApplications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRApplications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperone_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperone_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperone_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperone_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperone_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperone_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperone_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperone_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperoneSetup_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperoneSetup_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRCompositor_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRCompositor_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRCompositor_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRCompositor_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRCompositor_Version
void OVR::OpenVR::OpenVR::_set_IVRCompositor_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRCompositor_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRCompositor_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxKeyLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxNameLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxNameLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVROverlay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVROverlay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVROverlay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVROverlay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVROverlay_Version
void OVR::OpenVR::OpenVR::_set_IVROverlay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVROverlay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVROverlay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_GDC2015
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_GDC2015
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Base
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Base
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Tip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Tip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_HandGrip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_HandGrip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Status
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Status
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRRenderModels_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRRenderModels_Version
void OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unNotificationTextMaxSize
uint OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unNotificationTextMaxSize
void OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRNotifications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRNotifications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRNotifications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRNotifications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRNotifications_Version
void OVR::OpenVR::OpenVR::_set_IVRNotifications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRNotifications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRNotifications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxSettingsKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxSettingsKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSettings_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSettings_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSettings_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSettings_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSettings_Version
void OVR::OpenVR::OpenVR::_set_IVRSettings_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSettings_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSettings_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Section
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RequireHmd_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RequireHmd_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LogLevel_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LogLevel_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IPD_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IPD_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Background_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Background_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_GridColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_GridColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowStage_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowStage_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableHomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableHomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IpdOffset_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IpdOffset_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInput
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInput
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInputBinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInputBinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RenderCameraMode
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RenderCameraMode
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Null_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SerialNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SerialNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_ModelNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_ModelNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_DisplayFrequency_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_DisplayFrequency_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Screenshots_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Screenshots_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_TutorialCompletions
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_TutorialCompletions
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetLeftX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetLeftX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetRightX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetRightX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Smoothing
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Smoothing
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_HeuristicActive_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_HeuristicActive_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_TestData_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_TestData_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Section
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Style_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Style_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCamera_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCamera_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsStrength_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsStrength_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_RoomViewMode_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_RoomViewMode_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_Section
void OVR::OpenVR::OpenVR::_set_k_pch_audio_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_VIVEHDMIGain
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_VIVEHDMIGain
void OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Power_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
void OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUI
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUI
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_modelskin_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_modelskin_Section
void OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Driver_Enable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Driver_Enable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebEnable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebEnable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebPort_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebPort_String
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_TrackingOverride_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_TrackingOverride_Section
void OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_ActionManifestURL_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_ActionManifestURL_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Trackers_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Trackers_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRScreenshots_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRScreenshots_Version
void OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRResources_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRResources_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRResources_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRResources_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRResources_Version
void OVR::OpenVR::OpenVR::_set_IVRResources_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRResources_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRResources_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRDriverManager_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRDriverManager_Version
void OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionSetNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionSetNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionOriginCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionOriginCount
void OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRInput_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRInput_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRInput_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRInput_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRInput_Version
void OVR::OpenVR::OpenVR::_set_IVRInput_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRInput_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRInput_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidIOBufferHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidIOBufferHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRIOBuffer_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRIOBuffer_Version
void OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
uint OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSpatialAnchors_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSpatialAnchors_Version
void OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 <VRToken>k__BackingField
uint OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 <VRToken>k__BackingField
void OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FnTable_Prefix
::StringW OVR::OpenVR::OpenVR::_get_FnTable_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_FnTable_Prefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "FnTable_Prefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String FnTable_Prefix
void OVR::OpenVR::OpenVR::_set_FnTable_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_FnTable_Prefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "FnTable_Prefix", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext _OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::OpenVR::COpenVRContext*>("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext"));
}
// Autogenerated static field setter
// Set static field: static private OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext _OpenVRInternal_ModuleContext
void OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext(::OVR::OpenVR::OpenVR::COpenVRContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext", value));
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_VRToken
uint OVR::OpenVR::OpenVR::get_VRToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.set_VRToken
void OVR::OpenVR::OpenVR::set_VRToken(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::set_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "set_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_OpenVRInternal_ModuleContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::OpenVR::COpenVRContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_System
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Chaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::get_Chaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Chaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Chaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::get_ChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Compositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::get_Compositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Overlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_RenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::get_RenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_RenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_RenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::get_ExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Settings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Applications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::get_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Applications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Applications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Screenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::get_Screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_TrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::get_TrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_TrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_TrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Input
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_SpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::get_SpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_SpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_SpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR..cctor
void OVR::OpenVR::OpenVR::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal
uint OVR::OpenVR::OpenVR::InitInternal(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal2
uint OVR::OpenVR::OpenVR::InitInternal2(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.ShutdownInternal
void OVR::OpenVR::OpenVR::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsHmdPresent
bool OVR::OpenVR::OpenVR::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsRuntimeInstalled
bool OVR::OpenVR::OpenVR::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetStringForHmdError
::StringW OVR::OpenVR::OpenVR::GetStringForHmdError(::OVR::OpenVR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetGenericInterface
::System::IntPtr OVR::OpenVR::OpenVR::GetGenericInterface(::StringW pchInterfaceVersion, ByRef<::OVR::OpenVR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion, byref(peError));
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsInterfaceVersionValid
bool OVR::OpenVR::OpenVR::IsInterfaceVersionValid(::StringW pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetInitToken
uint OVR::OpenVR::OpenVR::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Init
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::Init(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Shutdown
void OVR::OpenVR::OpenVR::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSystem m_pVRSystem
::OVR::OpenVR::CVRSystem*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSystem"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperone m_pVRChaperone
::OVR::OpenVR::CVRChaperone*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperone"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperoneSetup m_pVRChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperoneSetup"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperoneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRCompositor m_pVRCompositor
::OVR::OpenVR::CVRCompositor*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRCompositor"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRCompositor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVROverlay m_pVROverlay
::OVR::OpenVR::CVROverlay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVROverlay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRRenderModels m_pVRRenderModels
::OVR::OpenVR::CVRRenderModels*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRRenderModels"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRRenderModels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRExtendedDisplay m_pVRExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRExtendedDisplay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRExtendedDisplay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSettings m_pVRSettings
::OVR::OpenVR::CVRSettings*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSettings"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRApplications m_pVRApplications
::OVR::OpenVR::CVRApplications*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRApplications"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRApplications**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRScreenshots m_pVRScreenshots
::OVR::OpenVR::CVRScreenshots*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRScreenshots"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRScreenshots**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRTrackedCamera m_pVRTrackedCamera
::OVR::OpenVR::CVRTrackedCamera*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRTrackedCamera"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRTrackedCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRInput m_pVRInput
::OVR::OpenVR::CVRInput*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRInput"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSpatialAnchors m_pVRSpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSpatialAnchors"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSpatialAnchors**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.Clear
void OVR::OpenVR::OpenVR::COpenVRContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.CheckClear
void OVR::OpenVR::OpenVR::COpenVRContext::CheckClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::CheckClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSystem
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::COpenVRContext::VRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRChaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRCompositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRCompositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VROverlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::COpenVRContext::VROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRRenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRRenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSettings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::COpenVRContext::VRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRApplications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::COpenVRContext::VRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRScreenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRScreenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRTrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRTrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRInput
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::COpenVRContext::VRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Array
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Array
void OVRSimpleJSON::JSONNodeType::_set_Array(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Object
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Object
void OVRSimpleJSON::JSONNodeType::_set_Object(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType String
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "String"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType String
void OVRSimpleJSON::JSONNodeType::_set_String(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Number
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Number
void OVRSimpleJSON::JSONNodeType::_set_Number(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType NullValue
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_NullValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_NullValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "NullValue"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType NullValue
void OVRSimpleJSON::JSONNodeType::_set_NullValue(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_NullValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "NullValue", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Boolean
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Boolean
void OVRSimpleJSON::JSONNodeType::_set_Boolean(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType None
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType None
void OVRSimpleJSON::JSONNodeType::_set_None(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Custom
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Custom
void OVRSimpleJSON::JSONNodeType::_set_Custom(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVRSimpleJSON::JSONNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONTextMode Compact
::OVRSimpleJSON::JSONTextMode OVRSimpleJSON::JSONTextMode::_get_Compact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_get_Compact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONTextMode>("OVRSimpleJSON", "JSONTextMode", "Compact"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONTextMode Compact
void OVRSimpleJSON::JSONTextMode::_set_Compact(::OVRSimpleJSON::JSONTextMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_set_Compact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONTextMode", "Compact", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONTextMode Indent
::OVRSimpleJSON::JSONTextMode OVRSimpleJSON::JSONTextMode::_get_Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_get_Indent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONTextMode>("OVRSimpleJSON", "JSONTextMode", "Indent"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONTextMode Indent
void OVRSimpleJSON::JSONTextMode::_set_Indent(::OVRSimpleJSON::JSONTextMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_set_Indent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONTextMode", "Indent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVRSimpleJSON::JSONTextMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator
#include "OVRSimpleJSON/JSONNode_ValueEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator
#include "OVRSimpleJSON/JSONNode_KeyEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator
#include "OVRSimpleJSON/JSONNode_LinqEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40
#include "OVRSimpleJSON/JSONNode_-get_Children-d__40.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42
#include "OVRSimpleJSON/JSONNode_-get_DeepChildren-d__42.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectOffset
#include "UnityEngine/RectOffset.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean forceASCII
bool OVRSimpleJSON::JSONNode::_get_forceASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_forceASCII");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNode", "forceASCII"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean forceASCII
void OVRSimpleJSON::JSONNode::_set_forceASCII(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_forceASCII");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "forceASCII", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean longAsString
bool OVRSimpleJSON::JSONNode::_get_longAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_longAsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNode", "longAsString"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean longAsString
void OVRSimpleJSON::JSONNode::_set_longAsString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_longAsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "longAsString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder m_EscapeBuilder
::System::Text::StringBuilder* OVRSimpleJSON::JSONNode::_get_m_EscapeBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_m_EscapeBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("OVRSimpleJSON", "JSONNode", "m_EscapeBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder m_EscapeBuilder
void OVRSimpleJSON::JSONNode::_set_m_EscapeBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_m_EscapeBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "m_EscapeBuilder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType VectorContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_VectorContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_VectorContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "VectorContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType VectorContainerType
void OVRSimpleJSON::JSONNode::_set_VectorContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_VectorContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "VectorContainerType", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType QuaternionContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_QuaternionContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_QuaternionContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "QuaternionContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType QuaternionContainerType
void OVRSimpleJSON::JSONNode::_set_QuaternionContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_QuaternionContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "QuaternionContainerType", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType RectContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_RectContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_RectContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "RectContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType RectContainerType
void OVRSimpleJSON::JSONNode::_set_RectContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_RectContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "RectContainerType", value));
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNode::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Item
void OVRSimpleJSON::JSONNode::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Item
void OVRSimpleJSON::JSONNode::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Value
::StringW OVRSimpleJSON::JSONNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Value
void OVRSimpleJSON::JSONNode::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Count
int OVRSimpleJSON::JSONNode::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsNumber
bool OVRSimpleJSON::JSONNode::get_IsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsString
bool OVRSimpleJSON::JSONNode::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsBoolean
bool OVRSimpleJSON::JSONNode::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsNull
bool OVRSimpleJSON::JSONNode::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsArray
bool OVRSimpleJSON::JSONNode::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsObject
bool OVRSimpleJSON::JSONNode::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Inline
bool OVRSimpleJSON::JSONNode::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Inline
void OVRSimpleJSON::JSONNode::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_DeepChildren
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::get_DeepChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_DeepChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeepChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Linq
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>* OVRSimpleJSON::JSONNode::get_Linq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Linq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Linq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Keys
::OVRSimpleJSON::JSONNode::KeyEnumerator OVRSimpleJSON::JSONNode::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::KeyEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Values
::OVRSimpleJSON::JSONNode::ValueEnumerator OVRSimpleJSON::JSONNode::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::ValueEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsDouble
double OVRSimpleJSON::JSONNode::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsDouble
void OVRSimpleJSON::JSONNode::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsInt
int OVRSimpleJSON::JSONNode::get_AsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsInt
void OVRSimpleJSON::JSONNode::set_AsInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsFloat
float OVRSimpleJSON::JSONNode::get_AsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsFloat
void OVRSimpleJSON::JSONNode::set_AsFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsBool
bool OVRSimpleJSON::JSONNode::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsBool
void OVRSimpleJSON::JSONNode::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsLong
int64_t OVRSimpleJSON::JSONNode::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsLong
void OVRSimpleJSON::JSONNode::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsArray
::OVRSimpleJSON::JSONArray* OVRSimpleJSON::JSONNode::get_AsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONArray*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsObject
::OVRSimpleJSON::JSONObject* OVRSimpleJSON::JSONNode::get_AsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_EscapeBuilder
::System::Text::StringBuilder* OVRSimpleJSON::JSONNode::get_EscapeBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_EscapeBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "get_EscapeBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode..cctor
void OVRSimpleJSON::JSONNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Add
void OVRSimpleJSON::JSONNode::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Add
void OVRSimpleJSON::JSONNode::Add(::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ToString
::StringW OVRSimpleJSON::JSONNode::ToString(int aIndent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndent)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, aIndent);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteToStringBuilder
void OVRSimpleJSON::JSONNode::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNode::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Escape
::StringW OVRSimpleJSON::JSONNode::Escape(::StringW aText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aText)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aText);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ParseElement
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::ParseElement(::StringW token, bool quoted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "ParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(quoted)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token, quoted);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Parse
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Parse(::StringW aJSON) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aJSON)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aJSON);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetContainer
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::GetContainer(::OVRSimpleJSON::JSONContainerType aType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "GetContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aType)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aType);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2(::UnityEngine::Vector2 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2(::StringW aXName, ::StringW aYName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, aXName, aYName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector2
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector2(::UnityEngine::Vector2 aVec, ::StringW aXName, ::StringW aYName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec), ::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec, aXName, aYName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3(::UnityEngine::Vector3 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3(::StringW aXName, ::StringW aYName, ::StringW aZName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName), ::il2cpp_utils::ExtractType(aZName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, aXName, aYName, aZName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector3
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector3(::UnityEngine::Vector3 aVec, ::StringW aXName, ::StringW aYName, ::StringW aZName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec), ::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName), ::il2cpp_utils::ExtractType(aZName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec, aXName, aYName, aZName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector4
::UnityEngine::Vector4 OVRSimpleJSON::JSONNode::ReadVector4(::UnityEngine::Vector4 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector4
::UnityEngine::Vector4 OVRSimpleJSON::JSONNode::ReadVector4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector4
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector4(::UnityEngine::Vector4 aVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadQuaternion
::UnityEngine::Quaternion OVRSimpleJSON::JSONNode::ReadQuaternion(::UnityEngine::Quaternion aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadQuaternion
::UnityEngine::Quaternion OVRSimpleJSON::JSONNode::ReadQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteQuaternion
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteQuaternion(::UnityEngine::Quaternion aRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRot)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRot);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRect
::UnityEngine::Rect OVRSimpleJSON::JSONNode::ReadRect(::UnityEngine::Rect aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRect
::UnityEngine::Rect OVRSimpleJSON::JSONNode::ReadRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteRect
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteRect(::UnityEngine::Rect aRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRect);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRectOffset
::UnityEngine::RectOffset* OVRSimpleJSON::JSONNode::ReadRectOffset(::UnityEngine::RectOffset* aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectOffset*, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRectOffset
::UnityEngine::RectOffset* OVRSimpleJSON::JSONNode::ReadRectOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectOffset*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteRectOffset
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteRectOffset(::UnityEngine::RectOffset* aRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRect);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadMatrix
::UnityEngine::Matrix4x4 OVRSimpleJSON::JSONNode::ReadMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteMatrix
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteMatrix(::UnityEngine::Matrix4x4 aMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aMatrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aMatrix);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ToString
::StringW OVRSimpleJSON::JSONNode::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Equals
bool OVRSimpleJSON::JSONNode::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetHashCode
int OVRSimpleJSON::JSONNode::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.op_Equality
bool OVRSimpleJSON::operator ==(::OVRSimpleJSON::JSONNode* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.op_Inequality
bool OVRSimpleJSON::operator !=(::OVRSimpleJSON::JSONNode* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type type
::OVRSimpleJSON::JSONNode::Enumerator::Type& OVRSimpleJSON::JSONNode::Enumerator::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,OVRSimpleJSON.JSONNode> m_Object
typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Object");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Object"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<OVRSimpleJSON.JSONNode> m_Array
typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Array"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.get_IsValid
bool OVRSimpleJSON::JSONNode::Enumerator::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> OVRSimpleJSON::JSONNode::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator..ctor
OVRSimpleJSON::JSONNode::Enumerator::Enumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator..ctor
OVRSimpleJSON::JSONNode::Enumerator::Enumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.MoveNext
bool OVRSimpleJSON::JSONNode::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type None
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type None
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_None(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Array
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Array
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Array(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Object
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Object
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Object(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Object", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVRSimpleJSON::JSONNode::Enumerator::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator
#include "OVRSimpleJSON/JSONNode_ValueEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::ValueEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::ValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
// ABORTED elsewhere.  OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(::OVRSimpleJSON::JSONNode::Enumerator aEnumerator)
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::ValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.GetEnumerator
::OVRSimpleJSON::JSONNode::ValueEnumerator OVRSimpleJSON::JSONNode::ValueEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::ValueEnumerator, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator
#include "OVRSimpleJSON/JSONNode_KeyEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.get_Current
::StringW OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
// ABORTED elsewhere.  OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(::OVRSimpleJSON::JSONNode::Enumerator aEnumerator)
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.GetEnumerator
::OVRSimpleJSON::JSONNode::KeyEnumerator OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::KeyEnumerator, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator
#include "OVRSimpleJSON/JSONNode_LinqEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Dispose
void OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>* OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Reset
void OVRSimpleJSON::JSONNode::LinqEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40
#include "OVRSimpleJSON/JSONNode_-get_Children-d__40.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.MoveNext
bool OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42
#include "OVRSimpleJSON/JSONNode_-get_DeepChildren-d__42.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode <>4__this
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap1
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap2
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.MoveNext
bool OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally1
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally2
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRSimpleJSON.JSONNode> m_List
::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONArray::dyn_m_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_m_List");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_List"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
bool& OVRSimpleJSON::JSONArray::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Inline
bool OVRSimpleJSON::JSONArray::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Inline
void OVRSimpleJSON::JSONArray::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONArray::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_IsArray
bool OVRSimpleJSON::JSONArray::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_IsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Count
int OVRSimpleJSON::JSONArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Add
void OVRSimpleJSON::JSONArray::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.WriteToStringBuilder
void OVRSimpleJSON::JSONArray::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONArray <>4__this
::OVRSimpleJSON::JSONArray*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<OVRSimpleJSON.JSONNode> <>7__wrap1
typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.IDisposable.Dispose
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.MoveNext
bool OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.<>m__Finally1
void OVRSimpleJSON::JSONArray::$get_Children$d__22::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVRSimpleJSON.JSONNode> m_Dict
::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONObject::dyn_m_Dict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_m_Dict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
bool& OVRSimpleJSON::JSONObject::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Inline
bool OVRSimpleJSON::JSONObject::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Inline
void OVRSimpleJSON::JSONObject::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONObject::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_IsObject
bool OVRSimpleJSON::JSONObject::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_IsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Count
int OVRSimpleJSON::JSONObject::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Add
void OVRSimpleJSON::JSONObject::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.WriteToStringBuilder
void OVRSimpleJSON::JSONObject::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode aNode
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aNode"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0.<Remove>b__0
bool OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::$Remove$b__0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONObject <>4__this
::OVRSimpleJSON::JSONObject*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,OVRSimpleJSON.JSONNode> <>7__wrap1
typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.IDisposable.Dispose
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.MoveNext
bool OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.<>m__Finally1
void OVRSimpleJSON::JSONObject::$get_Children$d__23::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONString
#include "OVRSimpleJSON/JSONString.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Data
::StringW& OVRSimpleJSON::JSONString::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONString::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_IsString
bool OVRSimpleJSON::JSONString::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_IsString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Value
::StringW OVRSimpleJSON::JSONString::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.set_Value
void OVRSimpleJSON::JSONString::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONString::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.WriteToStringBuilder
void OVRSimpleJSON::JSONString::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONString.Equals
bool OVRSimpleJSON::JSONString::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetHashCode
int OVRSimpleJSON::JSONString::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNumber
#include "OVRSimpleJSON/JSONNumber.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double m_Data
double& OVRSimpleJSON::JSONNumber::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.IsNumeric
bool OVRSimpleJSON::JSONNumber::IsNumeric(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNumber", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNumber::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_IsNumber
bool OVRSimpleJSON::JSONNumber::get_IsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_IsNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Value
::StringW OVRSimpleJSON::JSONNumber::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_Value
void OVRSimpleJSON::JSONNumber::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsDouble
double OVRSimpleJSON::JSONNumber::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsDouble
void OVRSimpleJSON::JSONNumber::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsLong
int64_t OVRSimpleJSON::JSONNumber::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsLong
void OVRSimpleJSON::JSONNumber::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNumber::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.WriteToStringBuilder
void OVRSimpleJSON::JSONNumber::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.Equals
bool OVRSimpleJSON::JSONNumber::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetHashCode
int OVRSimpleJSON::JSONNumber::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONBool
#include "OVRSimpleJSON/JSONBool.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Data
bool& OVRSimpleJSON::JSONBool::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONBool::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_IsBoolean
bool OVRSimpleJSON::JSONBool::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Value
::StringW OVRSimpleJSON::JSONBool::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_Value
void OVRSimpleJSON::JSONBool::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_AsBool
bool OVRSimpleJSON::JSONBool::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_AsBool
void OVRSimpleJSON::JSONBool::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONBool::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.WriteToStringBuilder
void OVRSimpleJSON::JSONBool::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.Equals
bool OVRSimpleJSON::JSONBool::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetHashCode
int OVRSimpleJSON::JSONBool::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNull
#include "OVRSimpleJSON/JSONNull.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::_get_m_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_m_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNull*>("OVRSimpleJSON", "JSONNull", "m_StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
void OVRSimpleJSON::JSONNull::_set_m_StaticInstance(::OVRSimpleJSON::JSONNull* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_m_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "m_StaticInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean reuseSameInstance
bool OVRSimpleJSON::JSONNull::_get_reuseSameInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_reuseSameInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNull", "reuseSameInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean reuseSameInstance
void OVRSimpleJSON::JSONNull::_set_reuseSameInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_reuseSameInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "reuseSameInstance", value));
}
// Autogenerated method: OVRSimpleJSON.JSONNull.CreateOrGet
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::CreateOrGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::CreateOrGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", "CreateOrGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNull*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNull::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_IsNull
bool OVRSimpleJSON::JSONNull::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_IsNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Value
::StringW OVRSimpleJSON::JSONNull::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_Value
void OVRSimpleJSON::JSONNull::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_AsBool
bool OVRSimpleJSON::JSONNull::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_AsBool
void OVRSimpleJSON::JSONNull::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull..cctor
void OVRSimpleJSON::JSONNull::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNull::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.Equals
bool OVRSimpleJSON::JSONNull::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetHashCode
int OVRSimpleJSON::JSONNull::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.WriteToStringBuilder
void OVRSimpleJSON::JSONNull::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONLazyCreator
#include "OVRSimpleJSON/JSONLazyCreator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONLazyCreator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Key
::StringW& OVRSimpleJSON::JSONLazyCreator::dyn_m_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONLazyCreator::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsInt
int OVRSimpleJSON::JSONLazyCreator::get_AsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsInt
void OVRSimpleJSON::JSONLazyCreator::set_AsInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsFloat
float OVRSimpleJSON::JSONLazyCreator::get_AsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsFloat
void OVRSimpleJSON::JSONLazyCreator::set_AsFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsDouble
double OVRSimpleJSON::JSONLazyCreator::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsDouble
void OVRSimpleJSON::JSONLazyCreator::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsLong
int64_t OVRSimpleJSON::JSONLazyCreator::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsLong
void OVRSimpleJSON::JSONLazyCreator::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsBool
bool OVRSimpleJSON::JSONLazyCreator::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsBool
void OVRSimpleJSON::JSONLazyCreator::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsArray
::OVRSimpleJSON::JSONArray* OVRSimpleJSON::JSONLazyCreator::get_AsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONArray*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsObject
::OVRSimpleJSON::JSONObject* OVRSimpleJSON::JSONLazyCreator::get_AsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONLazyCreator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Equals
bool OVRSimpleJSON::JSONLazyCreator::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetHashCode
int OVRSimpleJSON::JSONLazyCreator::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.WriteToStringBuilder
void OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Equality
bool OVRSimpleJSON::operator ==(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Inequality
bool OVRSimpleJSON::operator !=(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSON
#include "OVRSimpleJSON/JSON.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSimpleJSON.JSON.Parse
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSON::Parse(::StringW aJSON) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSON::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSON", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aJSON)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aJSON);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONContainerType
#include "OVRSimpleJSON/JSONContainerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Array
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Array
void OVRSimpleJSON::JSONContainerType::_set_Array(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Object
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Object
void OVRSimpleJSON::JSONContainerType::_set_Object(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Object", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVRSimpleJSON::JSONContainerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.Record
#include "Assets/OVR/Scripts/Record.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String category
::StringW& Assets::OVR::Scripts::Record::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
::StringW& Assets::OVR::Scripts::Record::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.RangedRecord
#include "Assets/OVR/Scripts/RangedRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single value
float& Assets::OVR::Scripts::RangedRecord::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
float& Assets::OVR::Scripts::RangedRecord::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
float& Assets::OVR::Scripts::RangedRecord::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.Invoke
void Assets::OVR::Scripts::FixMethodDelegate::Invoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isLastInSet), ::il2cpp_utils::ExtractType(selectedIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, isLastInSet, selectedIndex);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.BeginInvoke
::System::IAsyncResult* Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isLastInSet), ::il2cpp_utils::ExtractType(selectedIndex), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, isLastInSet, selectedIndex, callback, object);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.EndInvoke
void Assets::OVR::Scripts::FixMethodDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.FixRecord
#include "Assets/OVR/Scripts/FixRecord.hpp"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Assets.OVR.Scripts.FixMethodDelegate fixMethod
::Assets::OVR::Scripts::FixMethodDelegate*& Assets::OVR::Scripts::FixRecord::dyn_fixMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_fixMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixMethod"))->offset;
  return *reinterpret_cast<::Assets::OVR::Scripts::FixMethodDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object targetObject
::UnityEngine::Object*& Assets::OVR::Scripts::FixRecord::dyn_targetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_targetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] buttonNames
::ArrayW<::StringW>& Assets::OVR::Scripts::FixRecord::dyn_buttonNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_buttonNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean editModeRequired
bool& Assets::OVR::Scripts::FixRecord::dyn_editModeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_editModeRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editModeRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean complete
bool& Assets::OVR::Scripts::FixRecord::dyn_complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: OVRRaycaster
#include "GlobalNamespace/OVRRaycaster.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState
#include "UnityEngine/EventSystems/PointerInputModule_MouseState.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rayTransform
::UnityEngine::Transform*& UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCursor m_Cursor
::GlobalNamespace::OVRCursor*& UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cursor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCursor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Button joyPadClickButton
::GlobalNamespace::OVRInput::Button& UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joyPadClickButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode gazeClickKey
::UnityEngine::KeyCode& UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gazeClickKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean performSphereCastForGazepointer
bool& UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performSphereCastForGazepointer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRightStickScroll
bool& UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRightStickScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightStickDeadZone
float& UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightStickDeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useSwipeScroll
bool& UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSwipeScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragThreshold
float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragScale
float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertSwipeXAxis
bool& UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertSwipeXAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRRaycaster activeGraphicRaycaster
::GlobalNamespace::OVRRaycaster*& UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeGraphicRaycaster"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleDragThreshold
float& UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SpherecastRadius
float& UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NextAction
float& UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextAction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastMousePosition
::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_MousePosition
::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_HorizontalAxis
::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_VerticalAxis
::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SubmitButton
::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubmitButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_CancelButton
::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CancelButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InputActionsPerSecond
float& UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputActionsPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowActivationOnMobileDevice
bool& UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowActivationOnMobileDevice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.EventSystems.OVRPointerEventData> m_VRRayPointerData
::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>*& UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VRRayPointerData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState m_MouseState
::UnityEngine::EventSystems::PointerInputModule::MouseState*& UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MouseState"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerInputModule::MouseState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputMode
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::get_inputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::OVRInputModule::InputMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_allowActivationOnMobileDevice
bool UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_allowActivationOnMobileDevice
void UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputActionsPerSecond
float UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_inputActionsPerSecond
void UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_horizontalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_horizontalAxis
void UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_verticalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_verticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_verticalAxis
void UnityEngine::EventSystems::OVRInputModule::set_verticalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_submitButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_submitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_submitButton
void UnityEngine::EventSystems::OVRInputModule::set_submitButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_cancelButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_cancelButton
void UnityEngine::EventSystems::OVRInputModule::set_cancelButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendSubmitEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSubmitEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.AllowMoveEventProcessing
bool UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowMoveEventProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRawMoveVector
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMoveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendMoveEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMoveEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendUpdateEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMousePress
void UnityEngine::EventSystems::OVRInputModule::ProcessMousePress(::UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMouseEvent
void UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent(::UnityEngine::EventSystems::PointerInputModule::MouseState* mouseData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UseMouse
bool UnityEngine::EventSystems::OVRInputModule::UseMouse(bool pressed, bool released, ::UnityEngine::EventSystems::PointerEventData* pointerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UseMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "UseMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released), ::il2cpp_utils::ExtractType(pointerData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pressed, released, pointerData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::OVRPointerEventData* from, ::UnityEngine::EventSystems::OVRPointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetPointerData
bool UnityEngine::EventSystems::OVRInputModule::GetPointerData(int id, ByRef<::UnityEngine::EventSystems::OVRPointerEventData*> data, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::OVRPointerEventData*&>(), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(data), create);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRectTransformNormal
::UnityEngine::Vector3 UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal(::UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "GetRectTransformNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazePointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetGazePointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazePointerData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGazePointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetCanvasPointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldStartDrag
bool UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsPointerMoving
bool UnityEngine::EventSystems::OVRInputModule::IsPointerMoving(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsPointerMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "IsPointerMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SwipeAdjustedPosition
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition(::UnityEngine::Vector2 originalPosition, ::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwipeAdjustedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPosition), ::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, originalPosition, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazeButtonState
::UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGazeButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData::FramePressState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetExtraScrollDelta
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtraScrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UpdateModule
void UnityEngine::EventSystems::OVRInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsModuleSupported
bool UnityEngine::EventSystems::OVRInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModuleSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ActivateModule
void UnityEngine::EventSystems::OVRInputModule::ActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.DeactivateModule
void UnityEngine::EventSystems::OVRInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.Process
void UnityEngine::EventSystems::OVRInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::Process");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::PointerEventData* from, ::UnityEngine::EventSystems::PointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ClearSelection
void UnityEngine::EventSystems::OVRInputModule::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessDrag
void UnityEngine::EventSystems::OVRInputModule::ProcessDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.LayerMask m_EventMask
::UnityEngine::LayerMask& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortOrder
int& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_depth
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_finalEventMask
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalEventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventMask
::UnityEngine::LayerMask UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.set_eventMask
void UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Spherecast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Spherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList, radius);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.GetScreenPos
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_sortOrderPriority
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Raycast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9(::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0", value)));
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c..cctor
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Raycast>b__15_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Raycast$b__15_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Raycast>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Raycast>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Spherecast>b__16_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Spherecast$b__16_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Spherecast>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Spherecast>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Ray worldSpaceRay
::UnityEngine::Ray& UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldSpaceRay"))->offset;
  return *reinterpret_cast<::UnityEngine::Ray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 swipeStart
::UnityEngine::Vector2& UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPointerEventData.ToString
::StringW UnityEngine::EventSystems::OVRPointerEventData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventDataExtension
#include "UnityEngine/EventSystems/PointerEventDataExtension.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.IsVRPointer
bool UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "IsVRPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetRay
::UnityEngine::Ray UnityEngine::EventSystems::PointerEventDataExtension::GetRay(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetSwipeStart
::UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.SetSwipeStart
void UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData, ::UnityEngine::Vector2 start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "SetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData, start);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder
#include "GlobalNamespace/DebugUIBuilder.hpp"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
// Including type: DebugUIBuilder/ActiveUpdate
#include "GlobalNamespace/DebugUIBuilder_ActiveUpdate.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass35_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass35_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass37_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass37_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass39_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass39_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass40_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass40_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass41_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass41_0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_CENTER
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_CENTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_CENTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_CENTER"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_CENTER
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_CENTER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_CENTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_CENTER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_RIGHT
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_RIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_RIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_RIGHT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_RIGHT
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_RIGHT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_RIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_RIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_LEFT
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_LEFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_LEFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_LEFT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_LEFT
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_LEFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_LEFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_LEFT", value));
}
// Autogenerated static field getter
// Get static field: static public DebugUIBuilder instance
::GlobalNamespace::DebugUIBuilder* GlobalNamespace::DebugUIBuilder::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DebugUIBuilder*>("", "DebugUIBuilder", "instance"));
}
// Autogenerated static field setter
// Set static field: static public DebugUIBuilder instance
void GlobalNamespace::DebugUIBuilder::_set_instance(::GlobalNamespace::DebugUIBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single elementSpacing
float GlobalNamespace::DebugUIBuilder::_get_elementSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_elementSpacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "elementSpacing"));
}
// Autogenerated static field setter
// Set static field: static private System.Single elementSpacing
void GlobalNamespace::DebugUIBuilder::_set_elementSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_elementSpacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "elementSpacing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single marginH
float GlobalNamespace::DebugUIBuilder::_get_marginH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_marginH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "marginH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single marginH
void GlobalNamespace::DebugUIBuilder::_set_marginH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_marginH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "marginH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single marginV
float GlobalNamespace::DebugUIBuilder::_get_marginV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_marginV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "marginV"));
}
// Autogenerated static field setter
// Set static field: static private System.Single marginV
void GlobalNamespace::DebugUIBuilder::_set_marginV(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_marginV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "marginV", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform buttonPrefab
::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_buttonPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_buttonPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform labelPrefab
::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_labelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_labelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "labelPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform sliderPrefab
::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_sliderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_sliderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform dividerPrefab
::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_dividerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_dividerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dividerPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform togglePrefab
::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_togglePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_togglePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "togglePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform radioPrefab
::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_radioPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_radioPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radioPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject uiHelpersToInstantiate
::UnityEngine::GameObject*& GlobalNamespace::DebugUIBuilder::dyn_uiHelpersToInstantiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_uiHelpersToInstantiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiHelpersToInstantiate"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] targetContentPanels
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::DebugUIBuilder::dyn_targetContentPanels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_targetContentPanels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetContentPanels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] reEnable
::ArrayW<bool>& GlobalNamespace::DebugUIBuilder::dyn_reEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_reEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reEnable"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> toEnable
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::DebugUIBuilder::dyn_toEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_toEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toEnable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> toDisable
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::DebugUIBuilder::dyn_toDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_toDisable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDisable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] insertPositions
::ArrayW<::UnityEngine::Vector2>& GlobalNamespace::DebugUIBuilder::dyn_insertPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_insertPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "insertPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.RectTransform>[] insertedElements
::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*>& GlobalNamespace::DebugUIBuilder::dyn_insertedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_insertedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "insertedElements"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 menuOffset
::UnityEngine::Vector3& GlobalNamespace::DebugUIBuilder::dyn_menuOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_menuOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig rig
::GlobalNamespace::OVRCameraRig*& GlobalNamespace::DebugUIBuilder::dyn_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UI.ToggleGroup> radioGroups
::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UI::ToggleGroup*>*& GlobalNamespace::DebugUIBuilder::dyn_radioGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_radioGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radioGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UI::ToggleGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LaserPointer lp
::GlobalNamespace::LaserPointer*& GlobalNamespace::DebugUIBuilder::dyn_lp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_lp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer lr
::UnityEngine::LineRenderer*& GlobalNamespace::DebugUIBuilder::dyn_lr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_lr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lr"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LaserPointer/LaserBeamBehavior laserBeamBehavior
::GlobalNamespace::LaserPointer::LaserBeamBehavior& GlobalNamespace::DebugUIBuilder::dyn_laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_laserBeamBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laserBeamBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer::LaserBeamBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder.Awake
void GlobalNamespace::DebugUIBuilder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Show
void GlobalNamespace::DebugUIBuilder::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Hide
void GlobalNamespace::DebugUIBuilder::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Relayout
void GlobalNamespace::DebugUIBuilder::Relayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Relayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Relayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.AddRect
void GlobalNamespace::DebugUIBuilder::AddRect(::UnityEngine::RectTransform* r, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(targetCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddButton
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddButton(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnClick* handler, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, handler, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddLabel
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddLabel(::StringW label, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddSlider
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddSlider(::StringW label, float min, float max, ::GlobalNamespace::DebugUIBuilder::OnSlider* onValueChanged, bool wholeNumbersOnly, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(wholeNumbersOnly), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, min, max, onValueChanged, wholeNumbersOnly, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddDivider
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddDivider(int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddDivider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDivider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddToggle
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddToggle(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* onValueChanged, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, onValueChanged, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddToggle
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddToggle(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* onValueChanged, bool defaultValue, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, onValueChanged, defaultValue, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddRadio
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddRadio(::StringW label, ::StringW group, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* handler, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddRadio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRadio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, group, handler, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.ToggleLaserPointer
void GlobalNamespace::DebugUIBuilder::ToggleLaserPointer(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ToggleLaserPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleLaserPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnClick.Invoke
void GlobalNamespace::DebugUIBuilder::OnClick::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder/OnClick.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnClick::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnClick.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnClick::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.Invoke
void GlobalNamespace::DebugUIBuilder::OnToggleValueChange::Invoke(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnToggleValueChange::BeginInvoke(::UnityEngine::UI::Toggle* t, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, t, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnToggleValueChange::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnSlider.Invoke
void GlobalNamespace::DebugUIBuilder::OnSlider::Invoke(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: DebugUIBuilder/OnSlider.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnSlider::BeginInvoke(float f, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, f, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnSlider.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnSlider::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/ActiveUpdate
#include "GlobalNamespace/DebugUIBuilder_ActiveUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/ActiveUpdate.Invoke
bool GlobalNamespace::DebugUIBuilder::ActiveUpdate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder/ActiveUpdate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::ActiveUpdate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: DebugUIBuilder/ActiveUpdate.EndInvoke
bool GlobalNamespace::DebugUIBuilder::ActiveUpdate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass35_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass35_0.hpp"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnClick handler
::GlobalNamespace::DebugUIBuilder::OnClick*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnClick**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass35_0.<AddButton>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::$AddButton$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::<AddButton>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddButton>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass37_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass37_0.hpp"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnSlider onValueChanged
::GlobalNamespace::DebugUIBuilder::OnSlider*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass37_0.<AddSlider>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::$AddSlider$b__0(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::<AddSlider>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSlider>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass39_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass39_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange onValueChanged
::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle t
::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass39_0.<AddToggle>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::$AddToggle$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::<AddToggle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddToggle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass40_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass40_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange onValueChanged
::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle t
::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass40_0.<AddToggle>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::$AddToggle$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::<AddToggle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddToggle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass41_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass41_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange handler
::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle tb
::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tb"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass41_0.<AddRadio>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::$AddRadio$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::<AddRadio>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddRadio>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandedInputSelector
#include "GlobalNamespace/HandedInputSelector.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig m_CameraRig
::GlobalNamespace::OVRCameraRig*& GlobalNamespace::HandedInputSelector::dyn_m_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::dyn_m_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.OVRInputModule m_InputModule
::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::HandedInputSelector::dyn_m_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::dyn_m_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandedInputSelector.Start
void GlobalNamespace::HandedInputSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandedInputSelector.Update
void GlobalNamespace::HandedInputSelector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandedInputSelector.SetActiveController
void GlobalNamespace::HandedInputSelector::SetActiveController(::GlobalNamespace::OVRInput::Controller c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::SetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LaserPointer
#include "GlobalNamespace/LaserPointer.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cursorVisual
::UnityEngine::GameObject*& GlobalNamespace::LaserPointer::dyn_cursorVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_cursorVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cursorVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxLength
float& GlobalNamespace::LaserPointer::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LaserPointer/LaserBeamBehavior _laserBeamBehavior
::GlobalNamespace::LaserPointer::LaserBeamBehavior& GlobalNamespace::LaserPointer::dyn__laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__laserBeamBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserBeamBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer::LaserBeamBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
bool& GlobalNamespace::LaserPointer::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPoint
::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__startPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _forward
::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__forward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPoint
::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hitTarget
bool& GlobalNamespace::LaserPointer::dyn__hitTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__hitTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer lineRenderer
::UnityEngine::LineRenderer*& GlobalNamespace::LaserPointer::dyn_lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LaserPointer.get_laserBeamBehavior
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::get_laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::get_laserBeamBehavior");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_laserBeamBehavior", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LaserPointer::LaserBeamBehavior, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.set_laserBeamBehavior
void GlobalNamespace::LaserPointer::set_laserBeamBehavior(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::set_laserBeamBehavior");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_laserBeamBehavior", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LaserPointer.Awake
void GlobalNamespace::LaserPointer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.Start
void GlobalNamespace::LaserPointer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.LateUpdate
void GlobalNamespace::LaserPointer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.UpdateLaserBeam
void GlobalNamespace::LaserPointer::UpdateLaserBeam(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::UpdateLaserBeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLaserBeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end);
}
// Autogenerated method: LaserPointer.OnDisable
void GlobalNamespace::LaserPointer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnInputFocusLost
void GlobalNamespace::LaserPointer::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnInputFocusAcquired
void GlobalNamespace::LaserPointer::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnDestroy
void GlobalNamespace::LaserPointer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.SetCursorStartDest
void GlobalNamespace::LaserPointer::SetCursorStartDest(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 dest, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::SetCursorStartDest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorStartDest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(normal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, dest, normal);
}
// Autogenerated method: LaserPointer.SetCursorRay
void GlobalNamespace::LaserPointer::SetCursorRay(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::SetCursorRay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LaserPointer/LaserBeamBehavior
#include "GlobalNamespace/LaserPointer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior On
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "On"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior On
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_On(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "On", value));
}
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior Off
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "Off"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior Off
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_Off(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior OnWhenHitTarget
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_OnWhenHitTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_OnWhenHitTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "OnWhenHitTarget"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior OnWhenHitTarget
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_OnWhenHitTarget(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_OnWhenHitTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "OnWhenHitTarget", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LaserPointer::LaserBeamBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoundsLockedObject
#include "GlobalNamespace/BoundsLockedObject.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: GuardianBoundaryEnforcer
#include "GlobalNamespace/GuardianBoundaryEnforcer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_initialOffset
::UnityEngine::Vector3& GlobalNamespace::BoundsLockedObject::dyn_m_initialOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_initialOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_initialOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig m_playerOrigin
::GlobalNamespace::OVRCameraRig*& GlobalNamespace::BoundsLockedObject::dyn_m_playerOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_playerOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerOrigin"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GuardianBoundaryEnforcer m_enforcer
::GlobalNamespace::GuardianBoundaryEnforcer*& GlobalNamespace::BoundsLockedObject::dyn_m_enforcer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_enforcer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enforcer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GuardianBoundaryEnforcer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Bounds> m_bounds
::System::Nullable_1<::UnityEngine::Bounds>& GlobalNamespace::BoundsLockedObject::dyn_m_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::dyn_m_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bounds"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Bounds>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoundsLockedObject.Start
void GlobalNamespace::BoundsLockedObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoundsLockedObject.RefreshDisplay
void GlobalNamespace::BoundsLockedObject::RefreshDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoundsLockedObject::RefreshDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GuardianBoundaryDisplay
#include "GlobalNamespace/GuardianBoundaryDisplay.hpp"
// Including type: GuardianBoundaryEnforcer
#include "GlobalNamespace/GuardianBoundaryEnforcer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GuardianBoundaryEnforcer m_enforcer
::GlobalNamespace::GuardianBoundaryEnforcer*& GlobalNamespace::GuardianBoundaryDisplay::dyn_m_enforcer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::dyn_m_enforcer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enforcer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GuardianBoundaryEnforcer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRBoundary/BoundaryType m_boundaryType
::GlobalNamespace::OVRBoundary::BoundaryType& GlobalNamespace::GuardianBoundaryDisplay::dyn_m_boundaryType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::dyn_m_boundaryType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_boundaryType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBoundary::BoundaryType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_errorDisplay
::UnityEngine::GameObject*& GlobalNamespace::GuardianBoundaryDisplay::dyn_m_errorDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::dyn_m_errorDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_errorDisplay"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GuardianBoundaryDisplay.Start
void GlobalNamespace::GuardianBoundaryDisplay::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryDisplay.RefreshDisplay
void GlobalNamespace::GuardianBoundaryDisplay::RefreshDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryDisplay::RefreshDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GuardianBoundaryEnforcer
#include "GlobalNamespace/GuardianBoundaryEnforcer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action TrackingChanged
::System::Action*& GlobalNamespace::GuardianBoundaryEnforcer::dyn_TrackingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_TrackingChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingChanged"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_AllowRecenter
bool& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_AllowRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_AllowRecenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowRecenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig m_mainCamera
::GlobalNamespace::OVRCameraRig*& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mainCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_originalTrackerOrientation
::UnityEngine::Quaternion& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_originalTrackerOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_originalTrackerOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalTrackerOrientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_framecount
int& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_framecount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_framecount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_framecount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_orientToOriginalForward
::UnityEngine::Quaternion& GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_orientToOriginalForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::dyn_m_orientToOriginalForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_orientToOriginalForward"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GuardianBoundaryEnforcer.get_OrientToOriginalForward
::UnityEngine::Quaternion GlobalNamespace::GuardianBoundaryEnforcer::get_OrientToOriginalForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::get_OrientToOriginalForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OrientToOriginalForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryEnforcer.add_TrackingChanged
void GlobalNamespace::GuardianBoundaryEnforcer::add_TrackingChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::add_TrackingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_TrackingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuardianBoundaryEnforcer.remove_TrackingChanged
void GlobalNamespace::GuardianBoundaryEnforcer::remove_TrackingChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::remove_TrackingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_TrackingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuardianBoundaryEnforcer.Start
void GlobalNamespace::GuardianBoundaryEnforcer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryEnforcer.Update
void GlobalNamespace::GuardianBoundaryEnforcer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuardianBoundaryEnforcer.Recentered
void GlobalNamespace::GuardianBoundaryEnforcer::Recentered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuardianBoundaryEnforcer::Recentered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recentered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CharacterCameraConstraint
#include "GlobalNamespace/CharacterCameraConstraint.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
::GlobalNamespace::OVRCameraRig*& GlobalNamespace::CharacterCameraConstraint::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableCollision
bool& GlobalNamespace::CharacterCameraConstraint::dyn_EnableCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_EnableCollision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableCollision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask CollideLayers
::UnityEngine::LayerMask& GlobalNamespace::CharacterCameraConstraint::dyn_CollideLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_CollideLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollideLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxFade
float& GlobalNamespace::CharacterCameraConstraint::dyn_MaxFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_MaxFade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxFade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FadeMinDistance
float& GlobalNamespace::CharacterCameraConstraint::dyn_FadeMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_FadeMinDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeMinDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PreferredHeight
float& GlobalNamespace::CharacterCameraConstraint::dyn_PreferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_PreferredHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreferredHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FadeMaxDistance
float& GlobalNamespace::CharacterCameraConstraint::dyn_FadeMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_FadeMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _cameraUpdateAction
::System::Action*& GlobalNamespace::CharacterCameraConstraint::dyn__cameraUpdateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__cameraUpdateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraUpdateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _preCharacterMovementAction
::System::Action*& GlobalNamespace::CharacterCameraConstraint::dyn__preCharacterMovementAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__preCharacterMovementAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preCharacterMovementAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CapsuleCollider _character
::UnityEngine::CapsuleCollider*& GlobalNamespace::CharacterCameraConstraint::dyn__character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_character"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleCapsuleWithStickMovement _simplePlayerController
::GlobalNamespace::SimpleCapsuleWithStickMovement*& GlobalNamespace::CharacterCameraConstraint::dyn__simplePlayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__simplePlayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simplePlayerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleCapsuleWithStickMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CharacterCameraConstraint.Awake
void GlobalNamespace::CharacterCameraConstraint::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.Start
void GlobalNamespace::CharacterCameraConstraint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.OnEnable
void GlobalNamespace::CharacterCameraConstraint::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.OnDisable
void GlobalNamespace::CharacterCameraConstraint::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.CameraUpdate
void GlobalNamespace::CharacterCameraConstraint::CameraUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::CameraUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CameraUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
::GlobalNamespace::OVRCameraRig*& GlobalNamespace::LocomotionController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CapsuleCollider CharacterController
::UnityEngine::CapsuleCollider*& GlobalNamespace::LocomotionController::dyn_CharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_CharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharacterController"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleCapsuleWithStickMovement PlayerController
::GlobalNamespace::SimpleCapsuleWithStickMovement*& GlobalNamespace::LocomotionController::dyn_PlayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_PlayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleCapsuleWithStickMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionController.Start
void GlobalNamespace::LocomotionController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
// Including type: LocomotionTeleport/<ReadyStateCoroutine>d__52
#include "GlobalNamespace/LocomotionTeleport_-ReadyStateCoroutine-d__52.hpp"
// Including type: LocomotionTeleport/<AimStateCoroutine>d__64
#include "GlobalNamespace/LocomotionTeleport_-AimStateCoroutine-d__64.hpp"
// Including type: LocomotionTeleport/<CancelAimStateCoroutine>d__68
#include "GlobalNamespace/LocomotionTeleport_-CancelAimStateCoroutine-d__68.hpp"
// Including type: LocomotionTeleport/<PreTeleportStateCoroutine>d__72
#include "GlobalNamespace/LocomotionTeleport_-PreTeleportStateCoroutine-d__72.hpp"
// Including type: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76
#include "GlobalNamespace/LocomotionTeleport_-CancelTeleportStateCoroutine-d__76.hpp"
// Including type: LocomotionTeleport/<TeleportingStateCoroutine>d__80
#include "GlobalNamespace/LocomotionTeleport_-TeleportingStateCoroutine-d__80.hpp"
// Including type: LocomotionTeleport/<PostTeleportStateCoroutine>d__84
#include "GlobalNamespace/LocomotionTeleport_-PostTeleportStateCoroutine-d__84.hpp"
// Including type: TeleportDestination
#include "GlobalNamespace/TeleportDestination.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringReady
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringAim
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringPreTeleport
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringPreTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringPostTeleport
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringPostTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringReady
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringAim
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringPreTeleport
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringPreTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringPostTeleport
bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringPostTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocomotionTeleport/States <CurrentState>k__BackingField
::GlobalNamespace::LocomotionTeleport::States& GlobalNamespace::LocomotionTeleport::dyn_$CurrentState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_$CurrentState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentState>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::States*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportAimHandler AimHandler
::GlobalNamespace::TeleportAimHandler*& GlobalNamespace::LocomotionTeleport::dyn_AimHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportAimHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportDestination TeleportDestinationPrefab
::GlobalNamespace::TeleportDestination*& GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDestinationPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TeleportDestinationLayer
int& GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDestinationLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<UnityEngine.Quaternion>,System.Nullable`1<UnityEngine.Quaternion>> UpdateTeleportDestination
::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>*& GlobalNamespace::LocomotionTeleport::dyn_UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UpdateTeleportDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTeleportDestination"))->offset;
  return *reinterpret_cast<::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler InputHandler
::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::LocomotionTeleport::dyn_InputHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_InputHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/TeleportIntentions CurrentIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions& GlobalNamespace::LocomotionTeleport::dyn_CurrentIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_CurrentIntention");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentIntention"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::TeleportIntentions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPreTeleportRequested
bool& GlobalNamespace::LocomotionTeleport::dyn_IsPreTeleportRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsPreTeleportRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPreTeleportRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsTransitioning
bool& GlobalNamespace::LocomotionTeleport::dyn_IsTransitioning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsTransitioning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsTransitioning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPostTeleportRequested
bool& GlobalNamespace::LocomotionTeleport::dyn_IsPostTeleportRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsPostTeleportRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPostTeleportRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TeleportDestination _teleportDestination
::GlobalNamespace::TeleportDestination*& GlobalNamespace::LocomotionTeleport::dyn__teleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn__teleportDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_teleportDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocomotionController <LocomotionController>k__BackingField
::GlobalNamespace::LocomotionController*& GlobalNamespace::LocomotionTeleport::dyn_$LocomotionController$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_$LocomotionController$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocomotionController>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/AimCollisionTypes AimCollisionType
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseCharacterCollisionData
bool& GlobalNamespace::LocomotionTeleport::dyn_UseCharacterCollisionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UseCharacterCollisionData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseCharacterCollisionData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimCollisionRadius
float& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimCollisionHeight
float& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateReady
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateReady"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateAim
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LocomotionTeleport/AimData> UpdateAimData
::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::LocomotionTeleport::dyn_UpdateAimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UpdateAimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateAimData"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action ExitStateAim
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_ExitStateAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_ExitStateAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExitStateAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateCancelAim
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateCancelAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStatePreTeleport
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStatePreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStatePreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStatePreTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateCancelTeleport
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateCancelTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateTeleporting
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateTeleporting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateTeleporting"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStatePostTeleport
::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStatePostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStatePostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStatePostTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion> Teleported
::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>*& GlobalNamespace::LocomotionTeleport::dyn_Teleported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_Teleported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teleported"))->offset;
  return *reinterpret_cast<::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport.get_CurrentState
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::States, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.set_CurrentState
void GlobalNamespace::LocomotionTeleport::set_CurrentState(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::set_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.get_DestinationRotation
::UnityEngine::Quaternion GlobalNamespace::LocomotionTeleport::get_DestinationRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_DestinationRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DestinationRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.get_LocomotionController
::GlobalNamespace::LocomotionController* GlobalNamespace::LocomotionTeleport::get_LocomotionController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_LocomotionController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocomotionController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionController*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.set_LocomotionController
void GlobalNamespace::LocomotionTeleport::set_LocomotionController(::GlobalNamespace::LocomotionController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::set_LocomotionController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocomotionController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_UpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::add_UpdateTeleportDestination(::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_UpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_UpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::remove_UpdateTeleportDestination(::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_UpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateReady
void GlobalNamespace::LocomotionTeleport::add_EnterStateReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateReady
void GlobalNamespace::LocomotionTeleport::remove_EnterStateReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateAim
void GlobalNamespace::LocomotionTeleport::add_EnterStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateAim
void GlobalNamespace::LocomotionTeleport::remove_EnterStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_UpdateAimData
void GlobalNamespace::LocomotionTeleport::add_UpdateAimData(::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_UpdateAimData
void GlobalNamespace::LocomotionTeleport::remove_UpdateAimData(::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_ExitStateAim
void GlobalNamespace::LocomotionTeleport::add_ExitStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_ExitStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ExitStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_ExitStateAim
void GlobalNamespace::LocomotionTeleport::remove_ExitStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_ExitStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ExitStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateCancelAim
void GlobalNamespace::LocomotionTeleport::add_EnterStateCancelAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateCancelAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateCancelAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateCancelAim
void GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateCancelAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStatePreTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStatePreTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStatePreTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStatePreTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStatePreTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStatePreTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStatePreTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStatePreTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateCancelTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStateCancelTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateCancelTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateCancelTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateCancelTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateCancelTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateTeleporting
void GlobalNamespace::LocomotionTeleport::add_EnterStateTeleporting(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateTeleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateTeleporting
void GlobalNamespace::LocomotionTeleport::remove_EnterStateTeleporting(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateTeleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_EnterStatePostTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStatePostTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStatePostTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStatePostTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStatePostTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStatePostTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStatePostTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStatePostTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_Teleported
void GlobalNamespace::LocomotionTeleport::add_Teleported(::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_Teleported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Teleported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_Teleported
void GlobalNamespace::LocomotionTeleport::remove_Teleported(::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_Teleported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Teleported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.EnableMovement
void GlobalNamespace::LocomotionTeleport::EnableMovement(bool ready, bool aim, bool pre, bool post) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ready), ::il2cpp_utils::ExtractType(aim), ::il2cpp_utils::ExtractType(pre), ::il2cpp_utils::ExtractType(post)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ready, aim, pre, post);
}
// Autogenerated method: LocomotionTeleport.EnableRotation
void GlobalNamespace::LocomotionTeleport::EnableRotation(bool ready, bool aim, bool pre, bool post) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ready), ::il2cpp_utils::ExtractType(aim), ::il2cpp_utils::ExtractType(pre), ::il2cpp_utils::ExtractType(post)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ready, aim, pre, post);
}
// Autogenerated method: LocomotionTeleport.OnUpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::OnUpdateTeleportDestination(bool isValidDestination, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::UnityEngine::Quaternion> rotation, ::System::Nullable_1<::UnityEngine::Quaternion> landingRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnUpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isValidDestination), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(landingRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isValidDestination, position, rotation, landingRotation);
}
// Autogenerated method: LocomotionTeleport.AimCollisionTest
bool GlobalNamespace::LocomotionTeleport::AimCollisionTest(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::LayerMask aimCollisionLayerMask, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AimCollisionTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(aimCollisionLayerMask), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end, aimCollisionLayerMask, byref(hitInfo));
}
// Autogenerated method: LocomotionTeleport.LogState
void GlobalNamespace::LocomotionTeleport::LogState(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::LogState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LocomotionTeleport.CreateNewTeleportDestination
void GlobalNamespace::LocomotionTeleport::CreateNewTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CreateNewTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DeactivateDestination
void GlobalNamespace::LocomotionTeleport::DeactivateDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DeactivateDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.RecycleTeleportDestination
void GlobalNamespace::LocomotionTeleport::RecycleTeleportDestination(::GlobalNamespace::TeleportDestination* oldDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::RecycleTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecycleTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDestination);
}
// Autogenerated method: LocomotionTeleport.EnableMotion
void GlobalNamespace::LocomotionTeleport::EnableMotion(bool enableLinear, bool enableRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableLinear), ::il2cpp_utils::ExtractType(enableRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableLinear, enableRotation);
}
// Autogenerated method: LocomotionTeleport.Awake
void GlobalNamespace::LocomotionTeleport::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnEnable
void GlobalNamespace::LocomotionTeleport::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnDisable
void GlobalNamespace::LocomotionTeleport::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.ReadyStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::ReadyStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::ReadyStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadyStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnUpdateAimData
void GlobalNamespace::LocomotionTeleport::OnUpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* aimData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnUpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aimData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aimData);
}
// Autogenerated method: LocomotionTeleport.AimStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::AimStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AimStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.CancelAimStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::CancelAimStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CancelAimStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAimStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.PreTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::PreTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::PreTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.CancelTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::CancelTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CancelTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.TeleportingStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::TeleportingStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportingStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportingStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.PostTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::PostTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::PostTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DoTeleport
void GlobalNamespace::LocomotionTeleport::DoTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DoTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.GetCharacterPosition
::UnityEngine::Vector3 GlobalNamespace::LocomotionTeleport::GetCharacterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::GetCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.GetHeadRotationY
::UnityEngine::Quaternion GlobalNamespace::LocomotionTeleport::GetHeadRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::GetHeadRotationY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeadRotationY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DoWarp
void GlobalNamespace::LocomotionTeleport::DoWarp(::UnityEngine::Vector3 startPos, float positionPercent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DoWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(positionPercent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startPos, positionPercent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/States
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Ready
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Ready
void GlobalNamespace::LocomotionTeleport::States::_set_Ready(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Aim
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Aim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Aim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Aim
void GlobalNamespace::LocomotionTeleport::States::_set_Aim(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Aim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Aim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States CancelAim
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_CancelAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_CancelAim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "CancelAim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States CancelAim
void GlobalNamespace::LocomotionTeleport::States::_set_CancelAim(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_CancelAim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "CancelAim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States PreTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_PreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_PreTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "PreTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States PreTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_PreTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_PreTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "PreTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States CancelTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_CancelTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_CancelTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "CancelTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States CancelTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_CancelTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_CancelTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "CancelTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Teleporting
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Teleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Teleporting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Teleporting"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Teleporting
void GlobalNamespace::LocomotionTeleport::States::_set_Teleporting(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Teleporting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Teleporting", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States PostTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_PostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_PostTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "PostTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States PostTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_PostTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_PostTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "PostTeleport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LocomotionTeleport::States::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/TeleportIntentions
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions None
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "None"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions None
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_None(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions Aim
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Aim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "Aim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions Aim
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Aim(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Aim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "Aim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions PreTeleport
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_PreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_PreTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "PreTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions PreTeleport
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_PreTeleport(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_PreTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "PreTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions Teleport
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Teleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Teleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "Teleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions Teleport
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Teleport(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Teleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "Teleport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LocomotionTeleport::TeleportIntentions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/AimCollisionTypes
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Point
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Point"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Point
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Point(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Sphere
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Sphere
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Sphere(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Capsule
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Capsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Capsule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Capsule"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Capsule
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Capsule(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Capsule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Capsule", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LocomotionTeleport::AimCollisionTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RaycastHit TargetHitInfo
::UnityEngine::RaycastHit& GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetHitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetHitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TargetValid
bool& GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<UnityEngine.Vector3> Destination
::System::Nullable_1<::UnityEngine::Vector3>& GlobalNamespace::LocomotionTeleport::AimData::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Radius
float& GlobalNamespace::LocomotionTeleport::AimData::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> <Points>k__BackingField
::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::LocomotionTeleport::AimData::dyn_$Points$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_$Points$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Points>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/AimData.get_Points
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GlobalNamespace::LocomotionTeleport::AimData::get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::get_Points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/AimData.set_Points
void GlobalNamespace::LocomotionTeleport::AimData::set_Points(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::set_Points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport/AimData.Reset
void GlobalNamespace::LocomotionTeleport::AimData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<ReadyStateCoroutine>d__52
#include "GlobalNamespace/LocomotionTeleport_-ReadyStateCoroutine-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.MoveNext
bool GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<AimStateCoroutine>d__64
#include "GlobalNamespace/LocomotionTeleport_-AimStateCoroutine-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.MoveNext
bool GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelAimStateCoroutine>d__68
#include "GlobalNamespace/LocomotionTeleport_-CancelAimStateCoroutine-d__68.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PreTeleportStateCoroutine>d__72
#include "GlobalNamespace/LocomotionTeleport_-PreTeleportStateCoroutine-d__72.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76
#include "GlobalNamespace/LocomotionTeleport_-CancelTeleportStateCoroutine-d__76.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<TeleportingStateCoroutine>d__80
#include "GlobalNamespace/LocomotionTeleport_-TeleportingStateCoroutine-d__80.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.MoveNext
bool GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PostTeleportStateCoroutine>d__84
#include "GlobalNamespace/LocomotionTeleport_-PostTeleportStateCoroutine-d__84.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLinearMovement
bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLinearMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotation
bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HMDRotatesPlayer
bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HMDRotatesPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RotationEitherThumbstick
bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationEitherThumbstick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationAngle
float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
::GlobalNamespace::OVRCameraRig*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ReadyToSnapTurn
bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReadyToSnapTurn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
::UnityEngine::Rigidbody*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action CameraUpdated
::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreCharacterMove
::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreCharacterMove"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Awake
void GlobalNamespace::SimpleCapsuleWithStickMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Start
void GlobalNamespace::SimpleCapsuleWithStickMovement::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.FixedUpdate
void GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.RotatePlayerToHMD
void GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotatePlayerToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.StickMovement
void GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StickMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.SnapTurn
void GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnapTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportAimHandler.GetPoints
void GlobalNamespace::TeleportAimHandler::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: TeleportAimHandler.OnEnable
void GlobalNamespace::TeleportAimHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimHandler.OnDisable
void GlobalNamespace::TeleportAimHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerLaser
#include "GlobalNamespace/TeleportAimHandlerLaser.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
float& GlobalNamespace::TeleportAimHandlerLaser::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerLaser.GetPoints
void GlobalNamespace::TeleportAimHandlerLaser::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerParabolic
#include "GlobalNamespace/TeleportAimHandlerParabolic.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinimumElevation
float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumElevation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Gravity
float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimVelocity
float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimStep
float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerParabolic.GetPoints
void GlobalNamespace::TeleportAimHandlerParabolic::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimVisualLaser
#include "GlobalNamespace/TeleportAimVisualLaser.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer LaserPrefab
::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaserPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _enterAimStateAction
::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _exitAimStateAction
::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _linePoints
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimVisualLaser.EnterAimState
void GlobalNamespace::TeleportAimVisualLaser::EnterAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::EnterAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.ExitAimState
void GlobalNamespace::TeleportAimVisualLaser::ExitAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::ExitAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.Awake
void GlobalNamespace::TeleportAimVisualLaser::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.UpdateAimData
void GlobalNamespace::TeleportAimVisualLaser::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: TeleportAimVisualLaser.AddEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.RemoveEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportDestination
#include "GlobalNamespace/TeleportDestination.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsValidDestination>k__BackingField
bool& GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsValidDestination>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform PositionIndicator
::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_PositionIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_PositionIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform OrientationIndicator
::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_OrientationIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_OrientationIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion LandingRotation
::UnityEngine::Quaternion& GlobalNamespace::TeleportDestination::dyn_LandingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LandingRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LandingRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport LocomotionTeleport
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocomotionTeleport"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/States TeleportState
::GlobalNamespace::LocomotionTeleport::States& GlobalNamespace::TeleportDestination::dyn_TeleportState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_TeleportState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::States*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`4<System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<UnityEngine.Quaternion>,System.Nullable`1<UnityEngine.Quaternion>> _updateTeleportDestinationAction
::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>*& GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateTeleportDestinationAction"))->offset;
  return *reinterpret_cast<::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
bool& GlobalNamespace::TeleportDestination::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TeleportDestination> Deactivated
::System::Action_1<::GlobalNamespace::TeleportDestination*>*& GlobalNamespace::TeleportDestination::dyn_Deactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_Deactivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Deactivated"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::TeleportDestination*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportDestination.get_IsValidDestination
bool GlobalNamespace::TeleportDestination::get_IsValidDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::get_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.set_IsValidDestination
void GlobalNamespace::TeleportDestination::set_IsValidDestination(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::set_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.add_Deactivated
void GlobalNamespace::TeleportDestination::add_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::add_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.remove_Deactivated
void GlobalNamespace::TeleportDestination::remove_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::remove_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.OnEnable
void GlobalNamespace::TeleportDestination::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.TryDisableEventHandlers
void GlobalNamespace::TeleportDestination::TryDisableEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::TryDisableEventHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDisableEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.OnDisable
void GlobalNamespace::TeleportDestination::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.OnDeactivated
void GlobalNamespace::TeleportDestination::OnDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDeactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.Recycle
void GlobalNamespace::TeleportDestination::Recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::Recycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.UpdateTeleportDestination
void GlobalNamespace::TeleportDestination::UpdateTeleportDestination(bool isValidDestination, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::UnityEngine::Quaternion> rotation, ::System::Nullable_1<::UnityEngine::Quaternion> landingRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isValidDestination), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(landingRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isValidDestination, position, rotation, landingRotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: LocomotionTeleport/TeleportIntentions
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startReadyAction
::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startReadyAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startReadyAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startReadyAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler.TeleportReadyCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportReadyCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.TeleportAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandler::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetIntention");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetAimData
void GlobalNamespace::TeleportInputHandler::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetAimData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Ray&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_0
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_1
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.AddEventHandlers
void GlobalNamespace::TeleportInputHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.RemoveEventHandlers
void GlobalNamespace::TeleportInputHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerHMD
#include "GlobalNamespace/TeleportInputHandlerHMD.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <Pointer>k__BackingField
::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pointer>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton AimButton
::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton TeleportButton
::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FastTeleport
bool& GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerHMD.get_Pointer
::UnityEngine::Transform* GlobalNamespace::TeleportInputHandlerHMD::get_Pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::get_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.set_Pointer
void GlobalNamespace::TeleportInputHandlerHMD::set_Pointer(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::set_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportInputHandlerHMD.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerHMD::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetIntention");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.GetAimData
void GlobalNamespace::TeleportInputHandlerHMD::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetAimData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Ray&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform LeftHand
::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform RightHand
::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/InputModes InputMode
::GlobalNamespace::TeleportInputHandlerTouch::InputModes& GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::InputModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawButton[] _rawButtons
::ArrayW<::GlobalNamespace::OVRInput::RawButton>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawButton>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawTouch[] _rawTouch
::ArrayW<::GlobalNamespace::OVRInput::RawTouch>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawTouch"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawTouch>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller AimingController
::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller InitiatingController
::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitiatingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/AimCapTouchButtons CapacitiveAimAndTeleportButton
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons& GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacitiveAimAndTeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ThumbstickTeleportThreshold
float& GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThumbstickTeleportThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerTouch.Start
void GlobalNamespace::TeleportInputHandlerTouch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerTouch::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetIntention");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetAimData
void GlobalNamespace::TeleportInputHandlerTouch::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetAimData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Ray&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/InputModes
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/AimCapTouchButtons
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler
#include "GlobalNamespace/TeleportOrientationHandler.hpp"
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _updateOrientationAction
::System::Action*& GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateOrientationAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected LocomotionTeleport/AimData AimData
::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportOrientationHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler.UpdateAimData
void GlobalNamespace::TeleportOrientationHandler::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* aimData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aimData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aimData);
}
// Autogenerated method: TeleportOrientationHandler.UpdateOrientationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOrientationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.GetLandingOrientation
::UnityEngine::Quaternion GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation(::GlobalNamespace::TeleportOrientationHandler::OrientationModes mode, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLandingOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, mode, rotation);
}
// Autogenerated method: TeleportOrientationHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportOrientationHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.AddEventHandlers
void GlobalNamespace::TeleportOrientationHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.RemoveEventHandlers
void GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "HeadRelative"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "HeadRelative", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
