// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NormalSessionManager
#include "GlobalNamespace/NormalSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BrickDestroyer
  class BrickDestroyer;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0*, "", "NormalSessionManager/<>c__DisplayClass105_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: NormalSessionManager/<>c__DisplayClass105_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class NormalSessionManager::$$c__DisplayClass105_0 : public ::Il2CppObject {
    public:
    public:
    // public NormalSessionManager <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::NormalSessionManager* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NormalSessionManager*) == 0x8);
    // public UnityEngine.GameObject brick4x2
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* brick4x2;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public BrickDestroyer destroyer
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::BrickDestroyer* destroyer;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BrickDestroyer*) == 0x8);
    public:
    // Get instance field reference: public NormalSessionManager <>4__this
    [[deprecated]] ::GlobalNamespace::NormalSessionManager*& dyn_$$4__this();
    // Get instance field reference: public UnityEngine.GameObject brick4x2
    [[deprecated]] ::UnityEngine::GameObject*& dyn_brick4x2();
    // Get instance field reference: public BrickDestroyer destroyer
    [[deprecated]] ::GlobalNamespace::BrickDestroyer*& dyn_destroyer();
    // System.Void <WarmOtherCaches>b__0()
    // Offset: 0x819C20
    void $WarmOtherCaches$b__0();
    // public System.Void .ctor()
    // Offset: 0x1DD400
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NormalSessionManager::$$c__DisplayClass105_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NormalSessionManager::$$c__DisplayClass105_0*, creationType>()));
    }
  }; // NormalSessionManager/<>c__DisplayClass105_0
  #pragma pack(pop)
  static check_size<sizeof(NormalSessionManager::$$c__DisplayClass105_0), 32 + sizeof(::GlobalNamespace::BrickDestroyer*)> __GlobalNamespace_NormalSessionManager_$$c__DisplayClass105_0SizeCheck;
  static_assert(sizeof(NormalSessionManager::$$c__DisplayClass105_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::$WarmOtherCaches$b__0
// Il2CppName: <WarmOtherCaches>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::*)()>(&GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::$WarmOtherCaches$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0*), "<WarmOtherCaches>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
