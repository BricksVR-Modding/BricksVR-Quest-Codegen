// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: UIButtonEvents
  class UIButtonEvents;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OnOffControl
  class OnOffControl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OnOffControl);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OnOffControl*, "", "OnOffControl");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x32
  #pragma pack(push, 1)
  // Autogenerated type: OnOffControl
  // [TokenAttribute] Offset: FFFFFFFF
  class OnOffControl : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::OnOffControl::SerializableBoolEvent
    class SerializableBoolEvent;
    public:
    // public UIButtonEvents onButtonEvents
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::UIButtonEvents* onButtonEvents;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::UIButtonEvents*) == 0x8);
    // public UIButtonEvents offButtonEvents
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::UIButtonEvents* offButtonEvents;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::UIButtonEvents*) == 0x8);
    // public OnOffControl/SerializableBoolEvent valueUpdated
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::OnOffControl::SerializableBoolEvent* valueUpdated;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OnOffControl::SerializableBoolEvent*) == 0x8);
    // private System.Boolean _on
    // Size: 0x1
    // Offset: 0x30
    bool on;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x31
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UIButtonEvents onButtonEvents
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::UIButtonEvents*& dyn_onButtonEvents();
    // Get instance field reference: public UIButtonEvents offButtonEvents
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::UIButtonEvents*& dyn_offButtonEvents();
    // Get instance field reference: public OnOffControl/SerializableBoolEvent valueUpdated
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OnOffControl::SerializableBoolEvent*& dyn_valueUpdated();
    // Get instance field reference: private System.Boolean _on
    [[deprecated("Use field access instead!")]] bool& dyn__on();
    // Get instance field reference: private System.Boolean _initialized
    [[deprecated("Use field access instead!")]] bool& dyn__initialized();
    // public System.Void .ctor()
    // Offset: 0x1DDE30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OnOffControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnOffControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OnOffControl*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x7D3090
    void Start();
    // private System.Void OnEnable()
    // Offset: 0x7D3040
    void OnEnable();
    // public System.Void ToggleChanged(System.Boolean on)
    // Offset: 0x7D30E0
    void ToggleChanged(bool on);
    // private System.Void UpdateButtonStates()
    // Offset: 0x7D3170
    void UpdateButtonStates();
  }; // OnOffControl
  #pragma pack(pop)
  static check_size<sizeof(OnOffControl), 49 + sizeof(bool)> __GlobalNamespace_OnOffControlSizeCheck;
  static_assert(sizeof(OnOffControl) == 0x32);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OnOffControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OnOffControl::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OnOffControl::*)()>(&GlobalNamespace::OnOffControl::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OnOffControl*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OnOffControl::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OnOffControl::*)()>(&GlobalNamespace::OnOffControl::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OnOffControl*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OnOffControl::ToggleChanged
// Il2CppName: ToggleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OnOffControl::*)(bool)>(&GlobalNamespace::OnOffControl::ToggleChanged)> {
  static const MethodInfo* get() {
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OnOffControl*), "ToggleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{on});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OnOffControl::UpdateButtonStates
// Il2CppName: UpdateButtonStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OnOffControl::*)()>(&GlobalNamespace::OnOffControl::UpdateButtonStates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OnOffControl*), "UpdateButtonStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
