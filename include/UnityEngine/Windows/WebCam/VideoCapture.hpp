// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Windows::WebCam
namespace UnityEngine::Windows::WebCam {
}
// Completed forward declares
// Type namespace: UnityEngine.Windows.WebCam
namespace UnityEngine::Windows::WebCam {
  // Forward declaring type: VideoCapture
  class VideoCapture;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Windows::WebCam::VideoCapture);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Windows::WebCam::VideoCapture*, "UnityEngine.Windows.WebCam", "VideoCapture");
// Type namespace: UnityEngine.Windows.WebCam
namespace UnityEngine::Windows::WebCam {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Windows.WebCam.VideoCapture
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: C8810
  // [StaticAccessorAttribute] Offset: C8810
  // [MovedFromAttribute] Offset: C8810
  class VideoCapture : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::UnityEngine::Windows::WebCam::VideoCapture::CaptureResultType
    struct CaptureResultType;
    // Nested type: ::UnityEngine::Windows::WebCam::VideoCapture::VideoCaptureResult
    struct VideoCaptureResult;
    // Nested type: ::UnityEngine::Windows::WebCam::VideoCapture::OnVideoCaptureResourceCreatedCallback
    class OnVideoCaptureResourceCreatedCallback;
    // Nested type: ::UnityEngine::Windows::WebCam::VideoCapture::OnVideoModeStartedCallback
    class OnVideoModeStartedCallback;
    // Nested type: ::UnityEngine::Windows::WebCam::VideoCapture::OnVideoModeStoppedCallback
    class OnVideoModeStoppedCallback;
    // Nested type: ::UnityEngine::Windows::WebCam::VideoCapture::OnStartedRecordingVideoCallback
    class OnStartedRecordingVideoCallback;
    // Nested type: ::UnityEngine::Windows::WebCam::VideoCapture::OnStoppedRecordingVideoCallback
    class OnStoppedRecordingVideoCallback;
    public:
    // System.IntPtr m_NativePtr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr m_NativePtr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept {
      return m_NativePtr;
    }
    // Get static field: static private readonly System.Int64 HR_SUCCESS
    static int64_t _get_HR_SUCCESS();
    // Set static field: static private readonly System.Int64 HR_SUCCESS
    static void _set_HR_SUCCESS(int64_t value);
    // Get instance field reference: System.IntPtr m_NativePtr
    [[deprecated]] ::System::IntPtr& dyn_m_NativePtr();
    // private System.Void .ctor(System.IntPtr nativeCaptureObject)
    // Offset: 0x98B3D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VideoCapture* New_ctor(::System::IntPtr nativeCaptureObject) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Windows::WebCam::VideoCapture::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VideoCapture*, creationType>(nativeCaptureObject)));
    }
    // static private System.Void .cctor()
    // Offset: 0xA4B050
    static void _cctor();
    // static private UnityEngine.Windows.WebCam.VideoCapture/UnityEngine.Windows.WebCam.VideoCaptureResult MakeCaptureResult(System.Int64 hResult)
    // Offset: 0xA4AFB0
    static ::UnityEngine::Windows::WebCam::VideoCapture::VideoCaptureResult MakeCaptureResult(int64_t hResult);
    // static private System.Void InvokeOnCreatedVideoCaptureResourceDelegate(UnityEngine.Windows.WebCam.VideoCapture/UnityEngine.Windows.WebCam.OnVideoCaptureResourceCreatedCallback callback, System.IntPtr nativePtr)
    // Offset: 0xA4AB50
    static void InvokeOnCreatedVideoCaptureResourceDelegate(::UnityEngine::Windows::WebCam::VideoCapture::OnVideoCaptureResourceCreatedCallback* callback, ::System::IntPtr nativePtr);
    // static private System.Void InvokeOnVideoModeStartedDelegate(UnityEngine.Windows.WebCam.VideoCapture/UnityEngine.Windows.WebCam.OnVideoModeStartedCallback callback, System.Int64 hResult)
    // Offset: 0xA4ADD0
    static void InvokeOnVideoModeStartedDelegate(::UnityEngine::Windows::WebCam::VideoCapture::OnVideoModeStartedCallback* callback, int64_t hResult);
    // static private System.Void InvokeOnVideoModeStoppedDelegate(UnityEngine.Windows.WebCam.VideoCapture/UnityEngine.Windows.WebCam.OnVideoModeStoppedCallback callback, System.Int64 hResult)
    // Offset: 0xA4AEC0
    static void InvokeOnVideoModeStoppedDelegate(::UnityEngine::Windows::WebCam::VideoCapture::OnVideoModeStoppedCallback* callback, int64_t hResult);
    // static private System.Void InvokeOnStartedRecordingVideoToDiskDelegate(UnityEngine.Windows.WebCam.VideoCapture/UnityEngine.Windows.WebCam.OnStartedRecordingVideoCallback callback, System.Int64 hResult)
    // Offset: 0xA4ABF0
    static void InvokeOnStartedRecordingVideoToDiskDelegate(::UnityEngine::Windows::WebCam::VideoCapture::OnStartedRecordingVideoCallback* callback, int64_t hResult);
    // static private System.Void InvokeOnStoppedRecordingVideoToDiskDelegate(UnityEngine.Windows.WebCam.VideoCapture/UnityEngine.Windows.WebCam.OnStoppedRecordingVideoCallback callback, System.Int64 hResult)
    // Offset: 0xA4ACE0
    static void InvokeOnStoppedRecordingVideoToDiskDelegate(::UnityEngine::Windows::WebCam::VideoCapture::OnStoppedRecordingVideoCallback* callback, int64_t hResult);
    // public System.Void Dispose()
    // Offset: 0xA4AA00
    void Dispose();
    // private System.Void Dispose_Internal()
    // Offset: 0xA4A9C0
    void Dispose_Internal();
    // private System.Void DisposeThreaded_Internal()
    // Offset: 0xA4A980
    void DisposeThreaded_Internal();
    // protected override System.Void Finalize()
    // Offset: 0xA4AA90
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.Windows.WebCam.VideoCapture
  #pragma pack(pop)
  static check_size<sizeof(VideoCapture), 16 + sizeof(::System::IntPtr)> __UnityEngine_Windows_WebCam_VideoCaptureSizeCheck;
  static_assert(sizeof(VideoCapture) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Windows::WebCam::VideoCapture::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::MakeCaptureResult
// Il2CppName: MakeCaptureResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Windows::WebCam::VideoCapture::VideoCaptureResult (*)(int64_t)>(&UnityEngine::Windows::WebCam::VideoCapture::MakeCaptureResult)> {
  static const MethodInfo* get() {
    static auto* hResult = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "MakeCaptureResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hResult});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::InvokeOnCreatedVideoCaptureResourceDelegate
// Il2CppName: InvokeOnCreatedVideoCaptureResourceDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Windows::WebCam::VideoCapture::OnVideoCaptureResourceCreatedCallback*, ::System::IntPtr)>(&UnityEngine::Windows::WebCam::VideoCapture::InvokeOnCreatedVideoCaptureResourceDelegate)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Windows.WebCam", "VideoCapture/OnVideoCaptureResourceCreatedCallback")->byval_arg;
    static auto* nativePtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "InvokeOnCreatedVideoCaptureResourceDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, nativePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::InvokeOnVideoModeStartedDelegate
// Il2CppName: InvokeOnVideoModeStartedDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Windows::WebCam::VideoCapture::OnVideoModeStartedCallback*, int64_t)>(&UnityEngine::Windows::WebCam::VideoCapture::InvokeOnVideoModeStartedDelegate)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Windows.WebCam", "VideoCapture/OnVideoModeStartedCallback")->byval_arg;
    static auto* hResult = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "InvokeOnVideoModeStartedDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, hResult});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::InvokeOnVideoModeStoppedDelegate
// Il2CppName: InvokeOnVideoModeStoppedDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Windows::WebCam::VideoCapture::OnVideoModeStoppedCallback*, int64_t)>(&UnityEngine::Windows::WebCam::VideoCapture::InvokeOnVideoModeStoppedDelegate)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Windows.WebCam", "VideoCapture/OnVideoModeStoppedCallback")->byval_arg;
    static auto* hResult = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "InvokeOnVideoModeStoppedDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, hResult});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::InvokeOnStartedRecordingVideoToDiskDelegate
// Il2CppName: InvokeOnStartedRecordingVideoToDiskDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Windows::WebCam::VideoCapture::OnStartedRecordingVideoCallback*, int64_t)>(&UnityEngine::Windows::WebCam::VideoCapture::InvokeOnStartedRecordingVideoToDiskDelegate)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Windows.WebCam", "VideoCapture/OnStartedRecordingVideoCallback")->byval_arg;
    static auto* hResult = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "InvokeOnStartedRecordingVideoToDiskDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, hResult});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::InvokeOnStoppedRecordingVideoToDiskDelegate
// Il2CppName: InvokeOnStoppedRecordingVideoToDiskDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Windows::WebCam::VideoCapture::OnStoppedRecordingVideoCallback*, int64_t)>(&UnityEngine::Windows::WebCam::VideoCapture::InvokeOnStoppedRecordingVideoToDiskDelegate)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Windows.WebCam", "VideoCapture/OnStoppedRecordingVideoCallback")->byval_arg;
    static auto* hResult = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "InvokeOnStoppedRecordingVideoToDiskDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, hResult});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Windows::WebCam::VideoCapture::*)()>(&UnityEngine::Windows::WebCam::VideoCapture::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::Dispose_Internal
// Il2CppName: Dispose_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Windows::WebCam::VideoCapture::*)()>(&UnityEngine::Windows::WebCam::VideoCapture::Dispose_Internal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "Dispose_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::DisposeThreaded_Internal
// Il2CppName: DisposeThreaded_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Windows::WebCam::VideoCapture::*)()>(&UnityEngine::Windows::WebCam::VideoCapture::DisposeThreaded_Internal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "DisposeThreaded_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Windows::WebCam::VideoCapture::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Windows::WebCam::VideoCapture::*)()>(&UnityEngine::Windows::WebCam::VideoCapture::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Windows::WebCam::VideoCapture*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
