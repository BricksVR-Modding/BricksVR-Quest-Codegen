// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.MatchOrientation
#include "UnityEngine/XR/Interaction/Toolkit/MatchOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Skipping declaration: TeleportTrigger because it is already included!
  // Forward declaring type: TeleportationProvider
  class TeleportationProvider;
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
  // Forward declaring type: TeleportRequest
  struct TeleportRequest;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RaycastHit
  struct RaycastHit;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: BaseTeleportationInteractable
  class BaseTeleportationInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*, "UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseTeleportationInteractable : public ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger
    struct TeleportTrigger;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger
    // [TokenAttribute] Offset: FFFFFFFF
    struct TeleportTrigger/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TeleportTrigger
      constexpr TeleportTrigger(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectExit
      static constexpr const int OnSelectExit = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectExit
      static ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger _get_OnSelectExit();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectExit
      static void _set_OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectEnter
      static constexpr const int OnSelectEnter = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectEnter
      static ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger _get_OnSelectEnter();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger OnSelectEnter
      static void _set_OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger
    #pragma pack(pop)
    static check_size<sizeof(BaseTeleportationInteractable::TeleportTrigger), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_BaseTeleportationInteractable_TeleportTriggerSizeCheck;
    static_assert(sizeof(BaseTeleportationInteractable::TeleportTrigger) == 0x4);
    public:
    // [HeaderAttribute] Offset: 0xD76C0
    // [TooltipAttribute] Offset: 0xD76C0
    // protected UnityEngine.XR.Interaction.Toolkit.TeleportationProvider m_TeleportationProvider
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* m_TeleportationProvider;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*) == 0x8);
    // [TooltipAttribute] Offset: 0xD8B10
    // protected UnityEngine.XR.Interaction.Toolkit.MatchOrientation m_MatchOrientation
    // Size: 0x4
    // Offset: 0xA0
    ::UnityEngine::XR::Interaction::Toolkit::MatchOrientation m_MatchOrientation;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation) == 0x4);
    // [TooltipAttribute] Offset: 0xD8B90
    // protected UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger m_TeleportTrigger
    // Size: 0x4
    // Offset: 0xA4
    ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger m_TeleportTrigger;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger) == 0x4);
    public:
    // Get instance field reference: protected UnityEngine.XR.Interaction.Toolkit.TeleportationProvider m_TeleportationProvider
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*& dyn_m_TeleportationProvider();
    // Get instance field reference: protected UnityEngine.XR.Interaction.Toolkit.MatchOrientation m_MatchOrientation
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::MatchOrientation& dyn_m_MatchOrientation();
    // Get instance field reference: protected UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger m_TeleportTrigger
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger& dyn_m_TeleportTrigger();
    // public UnityEngine.XR.Interaction.Toolkit.TeleportationProvider get_teleportationProvider()
    // Offset: 0x2F4B70
    ::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* get_teleportationProvider();
    // public System.Void set_teleportationProvider(UnityEngine.XR.Interaction.Toolkit.TeleportationProvider value)
    // Offset: 0x2F4BA0
    void set_teleportationProvider(::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* value);
    // public UnityEngine.XR.Interaction.Toolkit.MatchOrientation get_matchOrientation()
    // Offset: 0x2F4B50
    ::UnityEngine::XR::Interaction::Toolkit::MatchOrientation get_matchOrientation();
    // public System.Void set_matchOrientation(UnityEngine.XR.Interaction.Toolkit.MatchOrientation value)
    // Offset: 0x2F4B80
    void set_matchOrientation(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation value);
    // public UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger get_teleportTrigger()
    // Offset: 0x2F4B60
    ::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger get_teleportTrigger();
    // public System.Void set_teleportTrigger(UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable/UnityEngine.XR.Interaction.Toolkit.TeleportTrigger value)
    // Offset: 0x2F4B90
    void set_teleportTrigger(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger value);
    // protected System.Boolean GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor, UnityEngine.RaycastHit raycastHit, ref UnityEngine.XR.Interaction.Toolkit.TeleportRequest teleportRequest)
    // Offset: 0x28A560
    bool GenerateTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor, ::UnityEngine::RaycastHit raycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest> teleportRequest);
    // private System.Void SendTeleportRequest(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x2F4840
    void SendTeleportRequest(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected System.Void .ctor()
    // Offset: 0x2F4B40
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
    // Base method: System.Void XRBaseInteractable::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseTeleportationInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseTeleportationInteractable*, creationType>()));
    }
    // protected override System.Void Awake()
    // Offset: 0x2F46A0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
    // Base method: System.Void XRBaseInteractable::Awake()
    void Awake();
    // protected internal override System.Void OnSelectEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x2F4760
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
    // Base method: System.Void XRBaseInteractable::OnSelectEnter(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    void OnSelectEnter(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal override System.Void OnSelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0x2F47D0
    // Implemented from: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
    // Base method: System.Void XRBaseInteractable::OnSelectExit(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    void OnSelectExit(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
  }; // UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable
  #pragma pack(pop)
  static check_size<sizeof(BaseTeleportationInteractable), 164 + sizeof(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger)> __UnityEngine_XR_Interaction_Toolkit_BaseTeleportationInteractableSizeCheck;
  static_assert(sizeof(BaseTeleportationInteractable) == 0xA8);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger, "UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportationProvider
// Il2CppName: get_teleportationProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider* (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportationProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "get_teleportationProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportationProvider
// Il2CppName: set_teleportationProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::TeleportationProvider*)>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportationProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "TeleportationProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "set_teleportationProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchOrientation
// Il2CppName: get_matchOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::MatchOrientation (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_matchOrientation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "get_matchOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchOrientation
// Il2CppName: set_matchOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::MatchOrientation)>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_matchOrientation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "MatchOrientation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "set_matchOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportTrigger
// Il2CppName: get_teleportTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::get_teleportTrigger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "get_teleportTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportTrigger
// Il2CppName: set_teleportTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::TeleportTrigger)>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::set_teleportTrigger)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "BaseTeleportationInteractable/TeleportTrigger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "set_teleportTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest
// Il2CppName: GenerateTeleportRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::RaycastHit, ByRef<::UnityEngine::XR::Interaction::Toolkit::TeleportRequest>)>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::GenerateTeleportRequest)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    static auto* raycastHit = &::il2cpp_utils::GetClassFromName("UnityEngine", "RaycastHit")->byval_arg;
    static auto* teleportRequest = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "TeleportRequest")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "GenerateTeleportRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor, raycastHit, teleportRequest});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::SendTeleportRequest
// Il2CppName: SendTeleportRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::SendTeleportRequest)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "SendTeleportRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectEnter
// Il2CppName: OnSelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectEnter)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "OnSelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectExit
// Il2CppName: OnSelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable::OnSelectExit)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::BaseTeleportationInteractable*), "OnSelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
