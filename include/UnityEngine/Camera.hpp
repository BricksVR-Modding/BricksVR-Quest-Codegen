// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: CameraClearFlags
  struct CameraClearFlags;
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: StereoTargetEyeMask
  struct StereoTargetEyeMask;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Ray
  struct Ray;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: CameraEvent
  struct CameraEvent;
  // Forward declaring type: CommandBuffer
  class CommandBuffer;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Camera);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Camera*, "UnityEngine", "Camera");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Camera
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 6D6FE8
  // [NativeHeaderAttribute] Offset: 6D6FE8
  // [UsedByNativeCodeAttribute] Offset: 6D6FE8
  // [NativeHeaderAttribute] Offset: 6D6FE8
  // [NativeHeaderAttribute] Offset: 6D6FE8
  // [NativeHeaderAttribute] Offset: 6D6FE8
  // [NativeHeaderAttribute] Offset: 6D6FE8
  // [RequireComponent] Offset: 6D6FE8
  // [NativeHeaderAttribute] Offset: 6D6FE8
  class Camera : public ::UnityEngine::Behaviour {
    public:
    // Nested type: ::UnityEngine::Camera::StereoscopicEye
    struct StereoscopicEye;
    // Nested type: ::UnityEngine::Camera::MonoOrStereoscopicEye
    struct MonoOrStereoscopicEye;
    // Nested type: ::UnityEngine::Camera::CameraCallback
    class CameraCallback;
    // Get static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreCull
    static ::UnityEngine::Camera::CameraCallback* _get_onPreCull();
    // Set static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreCull
    static void _set_onPreCull(::UnityEngine::Camera::CameraCallback* value);
    // Get static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreRender
    static ::UnityEngine::Camera::CameraCallback* _get_onPreRender();
    // Set static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreRender
    static void _set_onPreRender(::UnityEngine::Camera::CameraCallback* value);
    // Get static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPostRender
    static ::UnityEngine::Camera::CameraCallback* _get_onPostRender();
    // Set static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPostRender
    static void _set_onPostRender(::UnityEngine::Camera::CameraCallback* value);
    // public System.Single get_nearClipPlane()
    // Offset: 0xC981E4
    float get_nearClipPlane();
    // public System.Void set_nearClipPlane(System.Single value)
    // Offset: 0xC98224
    void set_nearClipPlane(float value);
    // public System.Single get_farClipPlane()
    // Offset: 0xC98274
    float get_farClipPlane();
    // public System.Void set_farClipPlane(System.Single value)
    // Offset: 0xC982B4
    void set_farClipPlane(float value);
    // public System.Single get_fieldOfView()
    // Offset: 0xC98304
    float get_fieldOfView();
    // public System.Void set_fieldOfView(System.Single value)
    // Offset: 0xC98344
    void set_fieldOfView(float value);
    // public System.Single get_depth()
    // Offset: 0xC98394
    float get_depth();
    // public System.Void set_depth(System.Single value)
    // Offset: 0xC983D4
    void set_depth(float value);
    // public System.Single get_aspect()
    // Offset: 0xC98424
    float get_aspect();
    // public System.Void set_aspect(System.Single value)
    // Offset: 0xC98464
    void set_aspect(float value);
    // public System.Int32 get_cullingMask()
    // Offset: 0xC984B4
    int get_cullingMask();
    // public System.Void set_cullingMask(System.Int32 value)
    // Offset: 0xC984F4
    void set_cullingMask(int value);
    // public System.Int32 get_eventMask()
    // Offset: 0xC98544
    int get_eventMask();
    // public UnityEngine.Color get_backgroundColor()
    // Offset: 0xC98584
    ::UnityEngine::Color get_backgroundColor();
    // public System.Void set_backgroundColor(UnityEngine.Color value)
    // Offset: 0xC98630
    void set_backgroundColor(::UnityEngine::Color value);
    // public UnityEngine.CameraClearFlags get_clearFlags()
    // Offset: 0xC986D8
    ::UnityEngine::CameraClearFlags get_clearFlags();
    // public System.Void set_clearFlags(UnityEngine.CameraClearFlags value)
    // Offset: 0xC98718
    void set_clearFlags(::UnityEngine::CameraClearFlags value);
    // public System.Void set_rect(UnityEngine.Rect value)
    // Offset: 0xC98768
    void set_rect(::UnityEngine::Rect value);
    // public UnityEngine.Rect get_pixelRect()
    // Offset: 0xC98810
    ::UnityEngine::Rect get_pixelRect();
    // public UnityEngine.RenderTexture get_targetTexture()
    // Offset: 0xC988BC
    ::UnityEngine::RenderTexture* get_targetTexture();
    // public System.Void set_targetTexture(UnityEngine.RenderTexture value)
    // Offset: 0xC988FC
    void set_targetTexture(::UnityEngine::RenderTexture* value);
    // public System.Int32 get_targetDisplay()
    // Offset: 0xC9894C
    int get_targetDisplay();
    // static public UnityEngine.Camera get_main()
    // Offset: 0xC98D3C
    static ::UnityEngine::Camera* get_main();
    // static public UnityEngine.Camera get_current()
    // Offset: 0xC98D70
    static ::UnityEngine::Camera* get_current();
    // public System.Boolean get_stereoEnabled()
    // Offset: 0xC98DA4
    bool get_stereoEnabled();
    // public UnityEngine.StereoTargetEyeMask get_stereoTargetEye()
    // Offset: 0xC98DE4
    ::UnityEngine::StereoTargetEyeMask get_stereoTargetEye();
    // public System.Void set_stereoTargetEye(UnityEngine.StereoTargetEyeMask value)
    // Offset: 0xC98E24
    void set_stereoTargetEye(::UnityEngine::StereoTargetEyeMask value);
    // static public System.Int32 get_allCamerasCount()
    // Offset: 0xC99098
    static int get_allCamerasCount();
    // public UnityEngine.Vector3 WorldToScreenPoint(UnityEngine.Vector3 position, UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye eye)
    // Offset: 0xC9898C
    ::UnityEngine::Vector3 WorldToScreenPoint(::UnityEngine::Vector3 position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye);
    // public UnityEngine.Vector3 WorldToScreenPoint(UnityEngine.Vector3 position)
    // Offset: 0xC98A70
    ::UnityEngine::Vector3 WorldToScreenPoint(::UnityEngine::Vector3 position);
    // public UnityEngine.Vector3 ScreenToViewportPoint(UnityEngine.Vector3 position)
    // Offset: 0xC98A78
    ::UnityEngine::Vector3 ScreenToViewportPoint(::UnityEngine::Vector3 position);
    // private UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector2 pos, UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye eye)
    // Offset: 0xC98B3C
    ::UnityEngine::Ray ScreenPointToRay(::UnityEngine::Vector2 pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye);
    // public UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector3 pos, UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye eye)
    // Offset: 0xC98C28
    ::UnityEngine::Ray ScreenPointToRay(::UnityEngine::Vector3 pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye);
    // public UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector3 pos)
    // Offset: 0xC98CF8
    ::UnityEngine::Ray ScreenPointToRay(::UnityEngine::Vector3 pos);
    // public UnityEngine.Matrix4x4 GetStereoViewMatrix(UnityEngine.Camera/UnityEngine.StereoscopicEye eye)
    // Offset: 0xC98E74
    ::UnityEngine::Matrix4x4 GetStereoViewMatrix(::UnityEngine::Camera::StereoscopicEye eye);
    // public UnityEngine.Matrix4x4 GetStereoProjectionMatrix(UnityEngine.Camera/UnityEngine.StereoscopicEye eye)
    // Offset: 0xC98F4C
    ::UnityEngine::Matrix4x4 GetStereoProjectionMatrix(::UnityEngine::Camera::StereoscopicEye eye);
    // static private System.Int32 GetAllCamerasCount()
    // Offset: 0xC99024
    static int GetAllCamerasCount();
    // static private System.Int32 GetAllCamerasImpl(out UnityEngine.Camera[] cam)
    // Offset: 0xC99058
    static int GetAllCamerasImpl(ByRef<::ArrayW<::UnityEngine::Camera*>> cam);
    // static public System.Int32 GetAllCameras(UnityEngine.Camera[] cameras)
    // Offset: 0xC990CC
    static int GetAllCameras(::ArrayW<::UnityEngine::Camera*> cameras);
    // public System.Void Render()
    // Offset: 0xC991C0
    void Render();
    // private System.Void AddCommandBufferImpl(UnityEngine.Rendering.CameraEvent evt, UnityEngine.Rendering.CommandBuffer buffer)
    // Offset: 0xC99200
    void AddCommandBufferImpl(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer);
    // private System.Void RemoveCommandBufferImpl(UnityEngine.Rendering.CameraEvent evt, UnityEngine.Rendering.CommandBuffer buffer)
    // Offset: 0xC99258
    void RemoveCommandBufferImpl(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer);
    // public System.Void AddCommandBuffer(UnityEngine.Rendering.CameraEvent evt, UnityEngine.Rendering.CommandBuffer buffer)
    // Offset: 0xC992B0
    void AddCommandBuffer(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer);
    // public System.Void RemoveCommandBuffer(UnityEngine.Rendering.CameraEvent evt, UnityEngine.Rendering.CommandBuffer buffer)
    // Offset: 0xC99400
    void RemoveCommandBuffer(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer);
    // static private System.Void FireOnPreCull(UnityEngine.Camera cam)
    // Offset: 0xC99550
    static void FireOnPreCull(::UnityEngine::Camera* cam);
    // static private System.Void FireOnPreRender(UnityEngine.Camera cam)
    // Offset: 0xC9994C
    static void FireOnPreRender(::UnityEngine::Camera* cam);
    // static private System.Void FireOnPostRender(UnityEngine.Camera cam)
    // Offset: 0xC999B4
    static void FireOnPostRender(::UnityEngine::Camera* cam);
    // private System.Void get_backgroundColor_Injected(out UnityEngine.Color ret)
    // Offset: 0xC985E0
    void get_backgroundColor_Injected(ByRef<::UnityEngine::Color> ret);
    // private System.Void set_backgroundColor_Injected(ref UnityEngine.Color value)
    // Offset: 0xC98688
    void set_backgroundColor_Injected(ByRef<::UnityEngine::Color> value);
    // private System.Void set_rect_Injected(ref UnityEngine.Rect value)
    // Offset: 0xC987C0
    void set_rect_Injected(ByRef<::UnityEngine::Rect> value);
    // private System.Void get_pixelRect_Injected(out UnityEngine.Rect ret)
    // Offset: 0xC9886C
    void get_pixelRect_Injected(ByRef<::UnityEngine::Rect> ret);
    // private System.Void WorldToScreenPoint_Injected(ref UnityEngine.Vector3 position, UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye eye, out UnityEngine.Vector3 ret)
    // Offset: 0xC98A08
    void WorldToScreenPoint_Injected(ByRef<::UnityEngine::Vector3> position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Vector3> ret);
    // private System.Void ScreenToViewportPoint_Injected(ref UnityEngine.Vector3 position, out UnityEngine.Vector3 ret)
    // Offset: 0xC98AE4
    void ScreenToViewportPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret);
    // private System.Void ScreenPointToRay_Injected(ref UnityEngine.Vector2 pos, UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye eye, out UnityEngine.Ray ret)
    // Offset: 0xC98BC0
    void ScreenPointToRay_Injected(ByRef<::UnityEngine::Vector2> pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Ray> ret);
    // private System.Void GetStereoViewMatrix_Injected(UnityEngine.Camera/UnityEngine.StereoscopicEye eye, out UnityEngine.Matrix4x4 ret)
    // Offset: 0xC98EF4
    void GetStereoViewMatrix_Injected(::UnityEngine::Camera::StereoscopicEye eye, ByRef<::UnityEngine::Matrix4x4> ret);
    // private System.Void GetStereoProjectionMatrix_Injected(UnityEngine.Camera/UnityEngine.StereoscopicEye eye, out UnityEngine.Matrix4x4 ret)
    // Offset: 0xC98FCC
    void GetStereoProjectionMatrix_Injected(::UnityEngine::Camera::StereoscopicEye eye, ByRef<::UnityEngine::Matrix4x4> ret);
    // public System.Void .ctor()
    // Offset: 0xC99A1C
    // Implemented from: UnityEngine.Behaviour
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Camera* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Camera*, creationType>()));
    }
  }; // UnityEngine.Camera
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Camera::get_nearClipPlane
// Il2CppName: get_nearClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_nearClipPlane)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_nearClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_nearClipPlane
// Il2CppName: set_nearClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_nearClipPlane)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_nearClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_farClipPlane
// Il2CppName: get_farClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_farClipPlane)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_farClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_farClipPlane
// Il2CppName: set_farClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_farClipPlane)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_farClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_fieldOfView
// Il2CppName: get_fieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_fieldOfView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_fieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_fieldOfView
// Il2CppName: set_fieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_fieldOfView)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_fieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_depth
// Il2CppName: get_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_depth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_depth
// Il2CppName: set_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_depth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_aspect
// Il2CppName: get_aspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_aspect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_aspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_aspect
// Il2CppName: set_aspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(float)>(&UnityEngine::Camera::set_aspect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_aspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_cullingMask
// Il2CppName: get_cullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_cullingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_cullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_cullingMask
// Il2CppName: set_cullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(int)>(&UnityEngine::Camera::set_cullingMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_cullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_eventMask
// Il2CppName: get_eventMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_eventMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_eventMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_backgroundColor
// Il2CppName: get_backgroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_backgroundColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_backgroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_backgroundColor
// Il2CppName: set_backgroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Color)>(&UnityEngine::Camera::set_backgroundColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_backgroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_clearFlags
// Il2CppName: get_clearFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CameraClearFlags (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_clearFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_clearFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_clearFlags
// Il2CppName: set_clearFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::CameraClearFlags)>(&UnityEngine::Camera::set_clearFlags)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "CameraClearFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_clearFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_rect
// Il2CppName: set_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rect)>(&UnityEngine::Camera::set_rect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_pixelRect
// Il2CppName: get_pixelRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_pixelRect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_pixelRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_targetTexture
// Il2CppName: get_targetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RenderTexture* (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_targetTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_targetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_targetTexture
// Il2CppName: set_targetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::RenderTexture*)>(&UnityEngine::Camera::set_targetTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_targetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_targetDisplay
// Il2CppName: get_targetDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_targetDisplay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_targetDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_main
// Il2CppName: get_main
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (*)()>(&UnityEngine::Camera::get_main)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_main", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (*)()>(&UnityEngine::Camera::get_current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_stereoEnabled
// Il2CppName: get_stereoEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_stereoEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_stereoEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_stereoTargetEye
// Il2CppName: get_stereoTargetEye
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::StereoTargetEyeMask (UnityEngine::Camera::*)()>(&UnityEngine::Camera::get_stereoTargetEye)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_stereoTargetEye", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_stereoTargetEye
// Il2CppName: set_stereoTargetEye
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::StereoTargetEyeMask)>(&UnityEngine::Camera::set_stereoTargetEye)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "StereoTargetEyeMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_stereoTargetEye", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_allCamerasCount
// Il2CppName: get_allCamerasCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Camera::get_allCamerasCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_allCamerasCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::WorldToScreenPoint
// Il2CppName: WorldToScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3, ::UnityEngine::Camera::MonoOrStereoscopicEye)>(&UnityEngine::Camera::WorldToScreenPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "WorldToScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::WorldToScreenPoint
// Il2CppName: WorldToScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3)>(&UnityEngine::Camera::WorldToScreenPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "WorldToScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenToViewportPoint
// Il2CppName: ScreenToViewportPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Camera::*)(::UnityEngine::Vector3)>(&UnityEngine::Camera::ScreenToViewportPoint)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenToViewportPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Ray (UnityEngine::Camera::*)(::UnityEngine::Vector2, ::UnityEngine::Camera::MonoOrStereoscopicEye)>(&UnityEngine::Camera::ScreenPointToRay)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Ray (UnityEngine::Camera::*)(::UnityEngine::Vector3, ::UnityEngine::Camera::MonoOrStereoscopicEye)>(&UnityEngine::Camera::ScreenPointToRay)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Ray (UnityEngine::Camera::*)(::UnityEngine::Vector3)>(&UnityEngine::Camera::ScreenPointToRay)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoViewMatrix
// Il2CppName: GetStereoViewMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye)>(&UnityEngine::Camera::GetStereoViewMatrix)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoViewMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoProjectionMatrix
// Il2CppName: GetStereoProjectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye)>(&UnityEngine::Camera::GetStereoProjectionMatrix)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoProjectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetAllCamerasCount
// Il2CppName: GetAllCamerasCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Camera::GetAllCamerasCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetAllCamerasCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetAllCamerasImpl
// Il2CppName: GetAllCamerasImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::ArrayW<::UnityEngine::Camera*>>)>(&UnityEngine::Camera::GetAllCamerasImpl)> {
  static const MethodInfo* get() {
    static auto* cam = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Camera"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetAllCamerasImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetAllCameras
// Il2CppName: GetAllCameras
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<::UnityEngine::Camera*>)>(&UnityEngine::Camera::GetAllCameras)> {
  static const MethodInfo* get() {
    static auto* cameras = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Camera"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetAllCameras", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cameras});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::Render
// Il2CppName: Render
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)()>(&UnityEngine::Camera::Render)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "Render", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::AddCommandBufferImpl
// Il2CppName: AddCommandBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rendering::CameraEvent, ::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Camera::AddCommandBufferImpl)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CameraEvent")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "AddCommandBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::RemoveCommandBufferImpl
// Il2CppName: RemoveCommandBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rendering::CameraEvent, ::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Camera::RemoveCommandBufferImpl)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CameraEvent")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "RemoveCommandBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::AddCommandBuffer
// Il2CppName: AddCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rendering::CameraEvent, ::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Camera::AddCommandBuffer)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CameraEvent")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "AddCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::RemoveCommandBuffer
// Il2CppName: RemoveCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Rendering::CameraEvent, ::UnityEngine::Rendering::CommandBuffer*)>(&UnityEngine::Camera::RemoveCommandBuffer)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CameraEvent")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.Rendering", "CommandBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "RemoveCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt, buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::FireOnPreCull
// Il2CppName: FireOnPreCull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::FireOnPreCull)> {
  static const MethodInfo* get() {
    static auto* cam = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "FireOnPreCull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::FireOnPreRender
// Il2CppName: FireOnPreRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::FireOnPreRender)> {
  static const MethodInfo* get() {
    static auto* cam = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "FireOnPreRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::FireOnPostRender
// Il2CppName: FireOnPostRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&UnityEngine::Camera::FireOnPostRender)> {
  static const MethodInfo* get() {
    static auto* cam = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "FireOnPostRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cam});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_backgroundColor_Injected
// Il2CppName: get_backgroundColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::Camera::get_backgroundColor_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_backgroundColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_backgroundColor_Injected
// Il2CppName: set_backgroundColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Color>)>(&UnityEngine::Camera::set_backgroundColor_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_backgroundColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::set_rect_Injected
// Il2CppName: set_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::Camera::set_rect_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "set_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::get_pixelRect_Injected
// Il2CppName: get_pixelRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::Camera::get_pixelRect_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "get_pixelRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::WorldToScreenPoint_Injected
// Il2CppName: WorldToScreenPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector3>, ::UnityEngine::Camera::MonoOrStereoscopicEye, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Camera::WorldToScreenPoint_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "WorldToScreenPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenToViewportPoint_Injected
// Il2CppName: ScreenToViewportPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Camera::ScreenToViewportPoint_Injected)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenToViewportPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::ScreenPointToRay_Injected
// Il2CppName: ScreenPointToRay_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(ByRef<::UnityEngine::Vector2>, ::UnityEngine::Camera::MonoOrStereoscopicEye, ByRef<::UnityEngine::Ray>)>(&UnityEngine::Camera::ScreenPointToRay_Injected)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/MonoOrStereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Ray")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "ScreenPointToRay_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoViewMatrix_Injected
// Il2CppName: GetStereoViewMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::GetStereoViewMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoViewMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::GetStereoProjectionMatrix_Injected
// Il2CppName: GetStereoProjectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Camera::*)(::UnityEngine::Camera::StereoscopicEye, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::Camera::GetStereoProjectionMatrix_Injected)> {
  static const MethodInfo* get() {
    static auto* eye = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera/StereoscopicEye")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Camera*), "GetStereoProjectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eye, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Camera::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
