// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorPicker
  class ColorPicker;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Forward declaring type: ColorComponent
  class ColorComponent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AdvancedColorPicker::ColorComponent);
DEFINE_IL2CPP_ARG_TYPE(::AdvancedColorPicker::ColorComponent*, "AdvancedColorPicker", "ColorComponent");
// Type namespace: AdvancedColorPicker
namespace AdvancedColorPicker {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: AdvancedColorPicker.ColorComponent
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class ColorComponent : public ::UnityEngine::EventSystems::UIBehaviour {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private AdvancedColorPicker.ColorPicker picker
    // Size: 0x8
    // Offset: 0x18
    ::AdvancedColorPicker::ColorPicker* picker;
    // Field size check
    static_assert(sizeof(::AdvancedColorPicker::ColorPicker*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private AdvancedColorPicker.ColorPicker picker
    ::AdvancedColorPicker::ColorPicker*& dyn_picker();
    // public AdvancedColorPicker.ColorPicker get_Picker()
    // Offset: 0xE1554C
    ::AdvancedColorPicker::ColorPicker* get_Picker();
    // public System.Void set_Picker(AdvancedColorPicker.ColorPicker value)
    // Offset: 0xE15554
    void set_Picker(::AdvancedColorPicker::ColorPicker* value);
    // public UnityEngine.RectTransform get_rectTransform()
    // Offset: 0xE15720
    ::UnityEngine::RectTransform* get_rectTransform();
    // public System.Void OnColorChanged(UnityEngine.Color color)
    // Offset: 0xE1598C
    void OnColorChanged(::UnityEngine::Color color);
    // protected System.Void DisplayNewColor()
    // Offset: 0xFFFFFFFF
    void DisplayNewColor();
    // protected System.Void .ctor()
    // Offset: 0xE1599C
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorComponent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AdvancedColorPicker::ColorComponent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorComponent*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0xE15788
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0xE15894
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
  }; // AdvancedColorPicker.ColorComponent
  #pragma pack(pop)
  static check_size<sizeof(ColorComponent), 24 + sizeof(::AdvancedColorPicker::ColorPicker*)> __AdvancedColorPicker_ColorComponentSizeCheck;
  static_assert(sizeof(ColorComponent) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::get_Picker
// Il2CppName: get_Picker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AdvancedColorPicker::ColorPicker* (AdvancedColorPicker::ColorComponent::*)()>(&AdvancedColorPicker::ColorComponent::get_Picker)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorComponent*), "get_Picker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::set_Picker
// Il2CppName: set_Picker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorComponent::*)(::AdvancedColorPicker::ColorPicker*)>(&AdvancedColorPicker::ColorComponent::set_Picker)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("AdvancedColorPicker", "ColorPicker")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorComponent*), "set_Picker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (AdvancedColorPicker::ColorComponent::*)()>(&AdvancedColorPicker::ColorComponent::get_rectTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorComponent*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::OnColorChanged
// Il2CppName: OnColorChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorComponent::*)(::UnityEngine::Color)>(&AdvancedColorPicker::ColorComponent::OnColorChanged)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorComponent*), "OnColorChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::DisplayNewColor
// Il2CppName: DisplayNewColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorComponent::*)()>(&AdvancedColorPicker::ColorComponent::DisplayNewColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorComponent*), "DisplayNewColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorComponent::*)()>(&AdvancedColorPicker::ColorComponent::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorComponent*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedColorPicker::ColorComponent::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedColorPicker::ColorComponent::*)()>(&AdvancedColorPicker::ColorComponent::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedColorPicker::ColorComponent*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
