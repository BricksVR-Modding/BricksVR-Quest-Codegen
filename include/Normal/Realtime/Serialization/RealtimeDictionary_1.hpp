// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.RealtimeModel
#include "Normal/Realtime/RealtimeModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: Normal.Realtime.Serialization.ICollection
#include "Normal/Realtime/Serialization/ICollection.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Normal::Realtime::Serialization
namespace Normal::Realtime::Serialization {
  // Skipping declaration: ModelAdded because it is already included!
  // Skipping declaration: ModelReplaced because it is already included!
  // Skipping declaration: ModelRemoved because it is already included!
  // Skipping declaration: Properties because it is already included!
  // Skipping declaration: DictionaryUpdate because it is already included!
  // Skipping declaration: <>c__DisplayClass21_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass23_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass24_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass26_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass27_0 because it is already included!
  // Skipping declaration: <GetEnumerator>d__27 because it is already included!
  // Skipping declaration: <>c__DisplayClass30_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass31_0 because it is already included!
  // Skipping declaration: <>c__DisplayClass35_0 because it is already included!
  // Forward declaring type: LocalChangeCache`1<T>
  template<typename T>
  class LocalChangeCache_1;
  // Forward declaring type: WriteStream
  class WriteStream;
  // Forward declaring type: ReadStream
  class ReadStream;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Skipping declaration: Dictionary`2 because it is already included!
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: RealtimeDictionary`1<TValue>
  template<typename TValue>
  class RealtimeDictionary_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Normal::Realtime::Serialization::RealtimeDictionary_1, "Normal.Realtime.Serialization", "RealtimeDictionary`1");
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 715E54
  template<typename TValue>
  class RealtimeDictionary_1 : public ::Normal::Realtime::RealtimeModel/*, public ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>, public ::Normal::Realtime::Serialization::ICollection*/ {
    public:
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelAdded<TValue>
    class ModelAdded;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelReplaced<TValue>
    class ModelReplaced;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelRemoved<TValue>
    class ModelRemoved;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::Properties<TValue>
    struct Properties;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate<TValue>
    class DictionaryUpdate;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass21_0<TValue>
    class $$c__DisplayClass21_0;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass23_0<TValue>
    class $$c__DisplayClass23_0;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass24_0<TValue>
    class $$c__DisplayClass24_0;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass26_0<TValue>
    class $$c__DisplayClass26_0;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass27_0<TValue>
    class $$c__DisplayClass27_0;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27<TValue>
    class $GetEnumerator$d__27;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass30_0<TValue>
    class $$c__DisplayClass30_0;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass31_0<TValue>
    class $$c__DisplayClass31_0;
    // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass35_0<TValue>
    class $$c__DisplayClass35_0;
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelAdded
    // [TokenAttribute] Offset: FFFFFFFF
    class ModelAdded : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "ModelAdded";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::ModelAdded* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelAdded::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::ModelAdded*, creationType>(object, method)));
      }
      // public System.Void Invoke(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> dictionary, System.UInt32 key, TValue model, System.Boolean remote)
      // Offset: 0xFFFFFFFF
      void Invoke(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* dictionary, uint key, TValue model, bool remote) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelAdded::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionary, key, model, remote);
      }
      // public System.IAsyncResult BeginInvoke(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> dictionary, System.UInt32 key, TValue model, System.Boolean remote, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* dictionary, uint key, TValue model, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelAdded::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, dictionary, key, model, remote, callback, object);
      }
      // public System.Void EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFF
      void EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelAdded::EndInvoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelAdded
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelAdded is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelReplaced
    // [TokenAttribute] Offset: FFFFFFFF
    class ModelReplaced : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "ModelReplaced";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::ModelReplaced* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelReplaced::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::ModelReplaced*, creationType>(object, method)));
      }
      // public System.Void Invoke(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> dictionary, System.UInt32 key, TValue oldModel, TValue newModel, System.Boolean remote)
      // Offset: 0xFFFFFFFF
      void Invoke(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* dictionary, uint key, TValue oldModel, TValue newModel, bool remote) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelReplaced::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(oldModel), ::il2cpp_utils::ExtractType(newModel), ::il2cpp_utils::ExtractType(remote)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionary, key, oldModel, newModel, remote);
      }
      // public System.IAsyncResult BeginInvoke(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> dictionary, System.UInt32 key, TValue oldModel, TValue newModel, System.Boolean remote, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* dictionary, uint key, TValue oldModel, TValue newModel, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelReplaced::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(oldModel), ::il2cpp_utils::ExtractType(newModel), ::il2cpp_utils::ExtractType(remote), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, dictionary, key, oldModel, newModel, remote, callback, object);
      }
      // public System.Void EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFF
      void EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelReplaced::EndInvoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelReplaced
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelReplaced is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelRemoved
    // [TokenAttribute] Offset: FFFFFFFF
    class ModelRemoved : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::System::MulticastDelegate {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "ModelRemoved";
      static constexpr bool IS_VALUE_TYPE = false;
      // public System.Void .ctor(System.Object object, System.IntPtr method)
      // Offset: 0xFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::ModelRemoved* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelRemoved::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::ModelRemoved*, creationType>(object, method)));
      }
      // public System.Void Invoke(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> dictionary, System.UInt32 key, TValue model, System.Boolean remote)
      // Offset: 0xFFFFFFFF
      void Invoke(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* dictionary, uint key, TValue model, bool remote) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelRemoved::Invoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictionary, key, model, remote);
      }
      // public System.IAsyncResult BeginInvoke(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> dictionary, System.UInt32 key, TValue model, System.Boolean remote, System.AsyncCallback callback, System.Object object)
      // Offset: 0xFFFFFFFF
      ::System::IAsyncResult* BeginInvoke(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* dictionary, uint key, TValue model, bool remote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelRemoved::BeginInvoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
        return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, dictionary, key, model, remote, callback, object);
      }
      // public System.Void EndInvoke(System.IAsyncResult result)
      // Offset: 0xFFFFFFFF
      void EndInvoke(::System::IAsyncResult* result) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ModelRemoved::EndInvoke");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelRemoved
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelRemoved is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.Properties
    // [TokenAttribute] Offset: FFFFFFFF
    struct Properties : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::Enum*/ {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "Properties";
      static constexpr bool IS_VALUE_TYPE = true;
      public:
      // public System.UInt32 value__
      // Size: 0x4
      // Offset: 0x0
      uint value;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      public:
      // Creating value type constructor for type: Properties
      constexpr Properties(uint value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint
      constexpr operator uint() const noexcept {
        return value;
      }
      // Autogenerated static field getter
      // Get static field: static public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.Properties<TValue> DictionaryUpdate
      static typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::Properties _get_DictionaryUpdate() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Properties::_get_DictionaryUpdate");
        return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::Properties>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RealtimeDictionary_1<TValue>::Properties>::get(), "DictionaryUpdate"));
      }
      // Autogenerated static field setter
      // Set static field: static public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.Properties<TValue> DictionaryUpdate
      static void _set_DictionaryUpdate(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::Properties value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Properties::_set_DictionaryUpdate");
        THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RealtimeDictionary_1<TValue>::Properties>::get(), "DictionaryUpdate", value));
      }
      // Autogenerated instance field getter
      // Get instance field: public System.UInt32 value__
      uint& dyn_value__() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Properties::dyn_value__");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
        return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.Properties
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.Properties is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate
    // [TokenAttribute] Offset: FFFFFFFF
    class DictionaryUpdate : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::Normal::Realtime::Serialization::IModel*/ {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "DictionaryUpdate";
      static constexpr bool IS_VALUE_TYPE = false;
      // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update<TValue>
      class Update;
      // WARNING Size may be invalid!
      // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update
      // [TokenAttribute] Offset: FFFFFFFF
      class Update : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::Normal::Realtime::Serialization::IModel*/ {
        public:
        using declaring_type = typename RealtimeDictionary_1<TValue>::DictionaryUpdate*;
        static constexpr std::string_view NESTED_NAME = "Update";
        static constexpr bool IS_VALUE_TYPE = false;
        // Nested type: ::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Operation<TValue>
        struct Operation;
        // WARNING Size may be invalid!
        // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation
        // [TokenAttribute] Offset: FFFFFFFF
        struct Operation : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public ::System::Enum*/ {
          public:
          using declaring_type = typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*;
          static constexpr std::string_view NESTED_NAME = "Operation";
          static constexpr bool IS_VALUE_TYPE = true;
          public:
          // public System.UInt32 value__
          // Size: 0x4
          // Offset: 0x0
          uint value;
          // Field size check
          static_assert(sizeof(uint) == 0x4);
          public:
          // Creating value type constructor for type: Operation
          constexpr Operation(uint value_ = {}) noexcept : value{value_} {}
          // Creating interface conversion operator: operator ::System::Enum
          operator ::System::Enum() noexcept {
            return *reinterpret_cast<::System::Enum*>(this);
          }
          // Creating conversion operator: operator uint
          constexpr operator uint() const noexcept {
            return value;
          }
          // Autogenerated static field getter
          // Get static field: static public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation<TValue> Add
          static typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation _get_Add() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Operation::_get_Add");
            return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation>::get(), "Add"));
          }
          // Autogenerated static field setter
          // Set static field: static public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation<TValue> Add
          static void _set_Add(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation value) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Operation::_set_Add");
            THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation>::get(), "Add", value));
          }
          // Autogenerated static field getter
          // Get static field: static public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation<TValue> Remove
          static typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation _get_Remove() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Operation::_get_Remove");
            return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation>::get(), "Remove"));
          }
          // Autogenerated static field setter
          // Set static field: static public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation<TValue> Remove
          static void _set_Remove(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation value) {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Operation::_set_Remove");
            THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation>::get(), "Remove", value));
          }
          // Autogenerated instance field getter
          // Get instance field: public System.UInt32 value__
          uint& dyn_value__() {
            static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Operation::dyn_value__");
            auto ___internal__instance = *this;
            static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
            return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
          }
        }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation
        // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation is generic, or has no fields that are valid for size checks!
        #ifdef USE_CODEGEN_FIELDS
        public:
        #else
        #ifdef CODEGEN_FIELD_ACCESSIBILITY
        CODEGEN_FIELD_ACCESSIBILITY:
        #else
        protected:
        #endif
        #endif
        // private readonly Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> _collection
        // Size: 0x8
        // Offset: 0x0
        ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* collection;
        // Field size check
        static_assert(sizeof(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>*) == 0x8);
        // public System.Boolean createdByServer
        // Size: 0x1
        // Offset: 0x0
        bool createdByServer;
        // Field size check
        static_assert(sizeof(bool) == 0x1);
        // public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation<TValue> operation
        // Size: 0xFFFFFFFF
        // Offset: 0x0
        typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation operation;
        // public System.UInt32 key
        // Size: 0x4
        // Offset: 0x0
        uint key;
        // Field size check
        static_assert(sizeof(uint) == 0x4);
        // public TValue value
        // Size: 0xFFFFFFFF
        // Offset: 0x0
        TValue value;
        public:
        // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IModel
        operator ::Normal::Realtime::Serialization::IModel() noexcept {
          return *reinterpret_cast<::Normal::Realtime::Serialization::IModel*>(this);
        }
        // Autogenerated instance field getter
        // Get instance field: private readonly Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> _collection
        ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>*& dyn__collection() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::dyn__collection");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collection"))->offset;
          return *reinterpret_cast<::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // Autogenerated instance field getter
        // Get instance field: public System.Boolean createdByServer
        bool& dyn_createdByServer() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::dyn_createdByServer");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createdByServer"))->offset;
          return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // Autogenerated instance field getter
        // Get instance field: public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation<TValue> operation
        typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation& dyn_operation() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::dyn_operation");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "operation"))->offset;
          return *reinterpret_cast<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // Autogenerated instance field getter
        // Get instance field: public System.UInt32 key
        uint& dyn_key() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::dyn_key");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
          return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // Autogenerated instance field getter
        // Get instance field: public TValue value
        TValue& dyn_value() {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::dyn_value");
          auto ___internal__instance = this;
          static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
          return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
        }
        // public System.Void .ctor(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> collection, System.Boolean createdByServer)
        // Offset: 0xFFFFFFFF
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update* New_ctor(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* collection, bool createdByServer) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*, creationType>(collection, createdByServer)));
        }
        // public System.Void .ctor(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> collection, Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update/Normal.Realtime.Serialization.Operation<TValue> operation, System.UInt32 key, TValue value)
        // Offset: 0xFFFFFFFF
        template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
        static typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update* New_ctor(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* collection, typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update::Operation operation, uint key, TValue value) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::.ctor");
          return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*, creationType>(collection, operation, key, value)));
        }
        // public System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFF
        int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::WriteLength");
          auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
          return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
        }
        // public System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFF
        void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Write");
          auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
        // public System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
        // Offset: 0xFFFFFFFF
        void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
          static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Update::Read");
          auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
          ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
        }
      }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update
      // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update is generic, or has no fields that are valid for size checks!
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // private readonly Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> _collection
      // Size: 0x8
      // Offset: 0x0
      ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* collection;
      // Field size check
      static_assert(sizeof(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>*) == 0x8);
      // private System.Collections.Generic.List`1<Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update<TValue>> _updates
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::List_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*>* updates;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::List_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*>*) == 0x8);
      public:
      // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IModel
      operator ::Normal::Realtime::Serialization::IModel() noexcept {
        return *reinterpret_cast<::Normal::Realtime::Serialization::IModel*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private readonly Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> _collection
      ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>*& dyn__collection() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::dyn__collection");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collection"))->offset;
        return *reinterpret_cast<::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.List`1<Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update<TValue>> _updates
      ::System::Collections::Generic::List_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*>*& dyn__updates() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::dyn__updates");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updates"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::List_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Collections.Generic.List`1<Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update<TValue>> get_updates()
      // Offset: 0xFFFFFFFF
      ::System::Collections::Generic::List_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*>* get_updates() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::get_updates");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*>*, false>(this, ___internal__method);
      }
      // public System.Boolean get_hasUpdates()
      // Offset: 0xFFFFFFFF
      bool get_hasUpdates() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::get_hasUpdates");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // public System.Void .ctor(Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> collection)
      // Offset: 0xFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::DictionaryUpdate* New_ctor(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* collection) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::DictionaryUpdate*, creationType>(collection)));
      }
      // public System.Void AddValueToDictionary(System.UInt32 key, TValue value)
      // Offset: 0xFFFFFFFF
      void AddValueToDictionary(uint key, TValue value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::AddValueToDictionary");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValueToDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
      }
      // public System.Void RemoveValueFromDictionary(System.UInt32 key)
      // Offset: 0xFFFFFFFF
      void RemoveValueFromDictionary(uint key) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::RemoveValueFromDictionary");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveValueFromDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
      }
      // public System.Boolean ReplaceAddOperationWithRemoveIfExists(System.UInt32 key, ref TValue foundValue)
      // Offset: 0xFFFFFFFF
      bool ReplaceAddOperationWithRemoveIfExists(uint key, ByRef<TValue> foundValue) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::ReplaceAddOperationWithRemoveIfExists");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceAddOperationWithRemoveIfExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(foundValue)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(foundValue));
      }
      // public System.Boolean ReplaceRemoveOperationWithAddIfExists(System.UInt32 key, TValue value)
      // Offset: 0xFFFFFFFF
      bool ReplaceRemoveOperationWithAddIfExists(uint key, TValue value) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::ReplaceRemoveOperationWithAddIfExists");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceRemoveOperationWithAddIfExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, value);
      }
      // public System.Boolean UpdateAddsOrRemovesKey(System.UInt32 key)
      // Offset: 0xFFFFFFFF
      bool UpdateAddsOrRemovesKey(uint key) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::UpdateAddsOrRemovesKey");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAddsOrRemovesKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
      }
      // public System.Boolean UpdateAddsOrRemovesKey(System.UInt32 key, ref TValue value, ref System.Boolean updateWasSetToAddKey)
      // Offset: 0xFFFFFFFF
      bool UpdateAddsOrRemovesKey(uint key, ByRef<TValue> value, ByRef<bool> updateWasSetToAddKey) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::UpdateAddsOrRemovesKey");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAddsOrRemovesKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(updateWasSetToAddKey)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value), byref(updateWasSetToAddKey));
      }
      // public System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
      // Offset: 0xFFFFFFFF
      int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::WriteLength");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
        return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
      }
      // public System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
      // Offset: 0xFFFFFFFF
      void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Write");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
      }
      // public System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
      // Offset: 0xFFFFFFFF
      void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::DictionaryUpdate::Read");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass21_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass21_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass21_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public System.UInt32 key
      // Size: 0x4
      // Offset: 0x0
      uint key;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // public TValue foundValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TValue foundValue;
      // public System.Boolean keyExistsInCache
      // Size: 0x1
      // Offset: 0x0
      bool keyExistsInCache;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean valueExistsInCache
      // Size: 0x1
      // Offset: 0x0
      bool valueExistsInCache;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.UInt32 key
      uint& dyn_key() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass21_0::dyn_key");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
        return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public TValue foundValue
      TValue& dyn_foundValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass21_0::dyn_foundValue");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foundValue"))->offset;
        return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean keyExistsInCache
      bool& dyn_keyExistsInCache() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass21_0::dyn_keyExistsInCache");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyExistsInCache"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean valueExistsInCache
      bool& dyn_valueExistsInCache() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass21_0::dyn_valueExistsInCache");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueExistsInCache"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <TryGetValueForKey>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $TryGetValueForKey$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass21_0::<TryGetValueForKey>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryGetValueForKey>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass21_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass21_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass21_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass21_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass21_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass23_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass23_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass23_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public System.UInt32 key
      // Size: 0x4
      // Offset: 0x0
      uint key;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // public TValue foundValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TValue foundValue;
      // public System.Boolean keyExistsInDictionary
      // Size: 0x1
      // Offset: 0x0
      bool keyExistsInDictionary;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean valueExistsInDictionary
      // Size: 0x1
      // Offset: 0x0
      bool valueExistsInDictionary;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.UInt32 key
      uint& dyn_key() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass23_0::dyn_key");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
        return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public TValue foundValue
      TValue& dyn_foundValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass23_0::dyn_foundValue");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foundValue"))->offset;
        return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean keyExistsInDictionary
      bool& dyn_keyExistsInDictionary() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass23_0::dyn_keyExistsInDictionary");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyExistsInDictionary"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean valueExistsInDictionary
      bool& dyn_valueExistsInDictionary() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass23_0::dyn_valueExistsInDictionary");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueExistsInDictionary"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <Insert>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $Insert$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass23_0::<Insert>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Insert>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass23_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass23_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass23_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass23_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass23_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass24_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass24_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass24_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public System.UInt32 key
      // Size: 0x4
      // Offset: 0x0
      uint key;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // public TValue foundValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TValue foundValue;
      // public System.Boolean keyExistsInDictionary
      // Size: 0x1
      // Offset: 0x0
      bool keyExistsInDictionary;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean valueExistsInDictionary
      // Size: 0x1
      // Offset: 0x0
      bool valueExistsInDictionary;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.UInt32 key
      uint& dyn_key() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass24_0::dyn_key");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
        return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public TValue foundValue
      TValue& dyn_foundValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass24_0::dyn_foundValue");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foundValue"))->offset;
        return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean keyExistsInDictionary
      bool& dyn_keyExistsInDictionary() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass24_0::dyn_keyExistsInDictionary");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyExistsInDictionary"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean valueExistsInDictionary
      bool& dyn_valueExistsInDictionary() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass24_0::dyn_valueExistsInDictionary");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueExistsInDictionary"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <Remove>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $Remove$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass24_0::<Remove>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass24_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass24_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass24_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass24_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass24_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass26_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass26_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass26_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public System.Collections.Generic.HashSet`1<System.UInt32> keys
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::HashSet_1<uint>* keys;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::HashSet_1<uint>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Collections::Generic::HashSet_1<uint>*
      constexpr operator ::System::Collections::Generic::HashSet_1<uint>*() const noexcept {
        return keys;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Collections.Generic.HashSet`1<System.UInt32> keys
      ::System::Collections::Generic::HashSet_1<uint>*& dyn_keys() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass26_0::dyn_keys");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <get_Count>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $get_Count$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass26_0::<get_Count>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Count>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass26_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass26_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass26_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass26_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass26_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass27_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass27_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass27_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public System.Collections.Generic.Dictionary`2<System.UInt32,TValue> dictionary
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::Dictionary_2<uint, TValue>* dictionary;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, TValue>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<uint, TValue>*
      constexpr operator ::System::Collections::Generic::Dictionary_2<uint, TValue>*() const noexcept {
        return dictionary;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Collections.Generic.Dictionary`2<System.UInt32,TValue> dictionary
      ::System::Collections::Generic::Dictionary_2<uint, TValue>*& dyn_dictionary() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass27_0::dyn_dictionary");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dictionary"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <GetEnumerator>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $GetEnumerator$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass27_0::<GetEnumerator>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetEnumerator>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass27_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass27_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass27_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass27_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass27_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<GetEnumerator>d__27
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $GetEnumerator$d__27 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>*/ {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<GetEnumerator>d__27";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // private System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.Collections.Generic.KeyValuePair`2<System.UInt32,TValue> <>2__current
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::System::Collections::Generic::KeyValuePair_2<uint, TValue> $$2__current;
      // public Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>* $$4__this;
      // Field size check
      static_assert(sizeof(::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>*) == 0x8);
      // private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.UInt32,TValue> <>7__wrap1
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      typename ::System::Collections::Generic::Dictionary_2<uint, TValue>::Enumerator $$7__wrap1;
      public:
      // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>
      operator ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>() noexcept {
        return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Int32 <>1__state
      int& dyn_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::dyn_$$1__state");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.KeyValuePair`2<System.UInt32,TValue> <>2__current
      ::System::Collections::Generic::KeyValuePair_2<uint, TValue>& dyn_$$2__current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::dyn_$$2__current");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<uint, TValue>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public Normal.Realtime.Serialization.RealtimeDictionary`1<TValue> <>4__this
      ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.UInt32,TValue> <>7__wrap1
      typename ::System::Collections::Generic::Dictionary_2<uint, TValue>::Enumerator& dyn_$$7__wrap1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::dyn_$$7__wrap1");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
        return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<uint, TValue>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // private System.Collections.Generic.KeyValuePair`2<System.UInt32,TValue> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.UInt32,TValue>>.get_Current()
      // Offset: 0xFFFFFFFF
      ::System::Collections::Generic::KeyValuePair_2<uint, TValue> System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_UInt32_TValue$$_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.UInt32,TValue>>.get_Current");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.UInt32,TValue>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<uint, TValue>, false>(this, ___internal__method);
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xFFFFFFFF
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::System.Collections.IEnumerator.get_Current");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
      }
      // public System.Void .ctor(System.Int32 <>1__state)
      // Offset: 0xFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$GetEnumerator$d__27* New_ctor(int $$1__state) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$GetEnumerator$d__27*, creationType>($$1__state)));
      }
      // private System.Void System.IDisposable.Dispose()
      // Offset: 0xFFFFFFFF
      void System_IDisposable_Dispose() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::System.IDisposable.Dispose");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Boolean MoveNext()
      // Offset: 0xFFFFFFFF
      bool MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::MoveNext");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
      }
      // private System.Void <>m__Finally1()
      // Offset: 0xFFFFFFFF
      void $$m__Finally1() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::<>m__Finally1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
      // private System.Void System.Collections.IEnumerator.Reset()
      // Offset: 0xFFFFFFFF
      void System_Collections_IEnumerator_Reset() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$GetEnumerator$d__27::System.Collections.IEnumerator.Reset");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<GetEnumerator>d__27
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<GetEnumerator>d__27 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass30_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass30_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass30_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public System.UInt32 key
      // Size: 0x4
      // Offset: 0x0
      uint key;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // public TValue foundValue
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      TValue foundValue;
      // public System.Boolean keyExistsInCache
      // Size: 0x1
      // Offset: 0x0
      bool keyExistsInCache;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean valueExistsInCache
      // Size: 0x1
      // Offset: 0x0
      bool valueExistsInCache;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Autogenerated instance field getter
      // Get instance field: public System.UInt32 key
      uint& dyn_key() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass30_0::dyn_key");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
        return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public TValue foundValue
      TValue& dyn_foundValue() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass30_0::dyn_foundValue");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foundValue"))->offset;
        return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean keyExistsInCache
      bool& dyn_keyExistsInCache() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass30_0::dyn_keyExistsInCache");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyExistsInCache"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Boolean valueExistsInCache
      bool& dyn_valueExistsInCache() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass30_0::dyn_valueExistsInCache");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueExistsInCache"))->offset;
        return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <ContainsKey>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $ContainsKey$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass30_0::<ContainsKey>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContainsKey>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass30_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass30_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass30_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass30_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass30_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass31_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass31_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass31_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public System.Collections.Generic.Dictionary`2<System.UInt32,TValue> dictionary
      // Size: 0x8
      // Offset: 0x0
      ::System::Collections::Generic::Dictionary_2<uint, TValue>* dictionary;
      // Field size check
      static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, TValue>*) == 0x8);
      public:
      // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<uint, TValue>*
      constexpr operator ::System::Collections::Generic::Dictionary_2<uint, TValue>*() const noexcept {
        return dictionary;
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Collections.Generic.Dictionary`2<System.UInt32,TValue> dictionary
      ::System::Collections::Generic::Dictionary_2<uint, TValue>*& dyn_dictionary() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass31_0::dyn_dictionary");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dictionary"))->offset;
        return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <Contains>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $Contains$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass31_0::<Contains>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Contains>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass31_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass31_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass31_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass31_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass31_0 is generic, or has no fields that are valid for size checks!
    // WARNING Size may be invalid!
    // Autogenerated type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass35_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    class $$c__DisplayClass35_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = RealtimeDictionary_1<TValue>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass35_0";
      static constexpr bool IS_VALUE_TYPE = false;
      #ifdef USE_CODEGEN_FIELDS
      public:
      #else
      #ifdef CODEGEN_FIELD_ACCESSIBILITY
      CODEGEN_FIELD_ACCESSIBILITY:
      #else
      protected:
      #endif
      #endif
      // public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update<TValue> update
      // Size: 0x8
      // Offset: 0x0
      typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update* update;
      // Field size check
      static_assert(sizeof(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*) == 0x8);
      public:
      // Creating conversion operator: operator typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*
      constexpr operator typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*() const noexcept {
        return update;
      }
      // Autogenerated instance field getter
      // Get instance field: public Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate/Normal.Realtime.Serialization.Update<TValue> update
      typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update*& dyn_update() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass35_0::dyn_update");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "update"))->offset;
        return *reinterpret_cast<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate::Update**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // System.Boolean <Read>b__0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $Read$b__0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass35_0::<Read>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Read>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // System.Boolean <Read>b__1(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
      // Offset: 0xFFFFFFFF
      bool $Read$b__1(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass35_0::<Read>b__1");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Read>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
        return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFF
      // Implemented from: System.Object
      // Base method: System.Void Object::.ctor()
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename RealtimeDictionary_1<TValue>::$$c__DisplayClass35_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::$$c__DisplayClass35_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename RealtimeDictionary_1<TValue>::$$c__DisplayClass35_0*, creationType>()));
      }
    }; // Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass35_0
    // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.<>c__DisplayClass35_0 is generic, or has no fields that are valid for size checks!
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.Collections.Generic.Dictionary`2<System.UInt32,TValue> _storage
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<uint, TValue>* storage;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint, TValue>*) == 0x8);
    // private Normal.Realtime.Serialization.LocalChangeCache`1<Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue>> _cache
    // Size: 0x8
    // Offset: 0x0
    ::Normal::Realtime::Serialization::LocalChangeCache_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate*>* cache;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::Serialization::LocalChangeCache_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate*>*) == 0x8);
    // private Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelAdded<TValue> modelAdded
    // Size: 0x8
    // Offset: 0x0
    typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelAdded* modelAdded;
    // Field size check
    static_assert(sizeof(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelAdded*) == 0x8);
    // private Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelReplaced<TValue> modelReplaced
    // Size: 0x8
    // Offset: 0x0
    typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelReplaced* modelReplaced;
    // Field size check
    static_assert(sizeof(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelReplaced*) == 0x8);
    // private Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelRemoved<TValue> modelRemoved
    // Size: 0x8
    // Offset: 0x0
    typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelRemoved* modelRemoved;
    // Field size check
    static_assert(sizeof(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelRemoved*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>
    operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>*>(this);
    }
    // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::ICollection
    operator ::Normal::Realtime::Serialization::ICollection() noexcept {
      return *reinterpret_cast<::Normal::Realtime::Serialization::ICollection*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt32,TValue> _storage
    ::System::Collections::Generic::Dictionary_2<uint, TValue>*& dyn__storage() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::dyn__storage");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storage"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Serialization.LocalChangeCache`1<Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue>> _cache
    ::Normal::Realtime::Serialization::LocalChangeCache_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate*>*& dyn__cache() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::dyn__cache");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cache"))->offset;
      return *reinterpret_cast<::Normal::Realtime::Serialization::LocalChangeCache_1<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelAdded<TValue> modelAdded
    typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelAdded*& dyn_modelAdded() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::dyn_modelAdded");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modelAdded"))->offset;
      return *reinterpret_cast<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelAdded**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelReplaced<TValue> modelReplaced
    typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelReplaced*& dyn_modelReplaced() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::dyn_modelReplaced");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modelReplaced"))->offset;
      return *reinterpret_cast<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelReplaced**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelRemoved<TValue> modelRemoved
    typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelRemoved*& dyn_modelRemoved() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::dyn_modelRemoved");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modelRemoved"))->offset;
      return *reinterpret_cast<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelRemoved**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public TValue get_Item(System.UInt32 key)
    // Offset: 0xFFFFFFFF
    TValue get_Item(uint key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::get_Item");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, key);
    }
    // public System.Void set_Item(System.UInt32 key, TValue value)
    // Offset: 0xFFFFFFFF
    void set_Item(uint key, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::set_Item");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
    }
    // public System.Int32 get_Count()
    // Offset: 0xFFFFFFFF
    int get_Count() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::get_Count");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Void add_modelAdded(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelAdded<TValue> value)
    // Offset: 0xFFFFFFFF
    void add_modelAdded(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelAdded* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::add_modelAdded");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_modelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_modelAdded(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelAdded<TValue> value)
    // Offset: 0xFFFFFFFF
    void remove_modelAdded(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelAdded* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::remove_modelAdded");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_modelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_modelReplaced(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelReplaced<TValue> value)
    // Offset: 0xFFFFFFFF
    void add_modelReplaced(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelReplaced* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::add_modelReplaced");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_modelReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_modelReplaced(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelReplaced<TValue> value)
    // Offset: 0xFFFFFFFF
    void remove_modelReplaced(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelReplaced* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::remove_modelReplaced");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_modelReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_modelRemoved(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelRemoved<TValue> value)
    // Offset: 0xFFFFFFFF
    void add_modelRemoved(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelRemoved* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::add_modelRemoved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_modelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_modelRemoved(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.ModelRemoved<TValue> value)
    // Offset: 0xFFFFFFFF
    void remove_modelRemoved(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::ModelRemoved* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::remove_modelRemoved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_modelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Void SafeDispatchModelAdded(System.UInt32 key, TValue model, System.Boolean remote)
    // Offset: 0xFFFFFFFF
    void SafeDispatchModelAdded(uint key, TValue model, bool remote) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::SafeDispatchModelAdded");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchModelAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, model, remote);
    }
    // private System.Void SafeDispatchModelReplaced(System.UInt32 key, TValue oldModel, TValue newModel, System.Boolean remote)
    // Offset: 0xFFFFFFFF
    void SafeDispatchModelReplaced(uint key, TValue oldModel, TValue newModel, bool remote) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::SafeDispatchModelReplaced");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchModelReplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(oldModel), ::il2cpp_utils::ExtractType(newModel), ::il2cpp_utils::ExtractType(remote)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, oldModel, newModel, remote);
    }
    // private System.Void SafeDispatchModelRemoved(System.UInt32 key, TValue model, System.Boolean remote)
    // Offset: 0xFFFFFFFF
    void SafeDispatchModelRemoved(uint key, TValue model, bool remote) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::SafeDispatchModelRemoved");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeDispatchModelRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(remote)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, model, remote);
    }
    // private System.Boolean TryGetValueForKey(System.UInt32 key, out TValue value)
    // Offset: 0xFFFFFFFF
    bool TryGetValueForKey(uint key, ByRef<TValue> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::TryGetValueForKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValueForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<TValue&>()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
    }
    // public System.Void Add(System.UInt32 key, TValue value)
    // Offset: 0xFFFFFFFF
    void Add(uint key, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Add");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
    }
    // private System.Void Insert(System.UInt32 key, TValue value, System.Boolean add)
    // Offset: 0xFFFFFFFF
    void Insert(uint key, TValue value, bool add) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Insert");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(add)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value, add);
    }
    // public System.Boolean Remove(System.UInt32 key)
    // Offset: 0xFFFFFFFF
    bool Remove(uint key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Remove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
    }
    // public System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.UInt32,TValue>> GetEnumerator()
    // Offset: 0xFFFFFFFF
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>* GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint, TValue>>*, false>(this, ___internal__method);
    }
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xFFFFFFFF
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::System.Collections.IEnumerable.GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
    }
    // public System.Boolean TryGetValue(System.UInt32 key, out TValue value)
    // Offset: 0xFFFFFFFF
    bool TryGetValue(uint key, ByRef<TValue> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::TryGetValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<TValue&>()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
    }
    // public System.Boolean ContainsKey(System.UInt32 key)
    // Offset: 0xFFFFFFFF
    bool ContainsKey(uint key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::ContainsKey");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
    }
    // public System.Boolean Contains(TValue value)
    // Offset: 0xFFFFFFFF
    bool Contains(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Contains");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
    }
    // public System.UInt32 GetCollectionTypeID()
    // Offset: 0xFFFFFFFF
    uint GetCollectionTypeID() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::GetCollectionTypeID");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCollectionTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
    }
    // private Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> <.ctor>b__17_0()
    // Offset: 0xFFFFFFFF
    typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* $_ctor$b__17_0() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::<.ctor>b__17_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate*, false>(this, ___internal__method);
    }
    // private System.Boolean <WriteLength>b__33_0(Normal.Realtime.Serialization.RealtimeDictionary`1/Normal.Realtime.Serialization.DictionaryUpdate<TValue> entry)
    // Offset: 0xFFFFFFFF
    bool $WriteLength$b__33_0(typename ::Normal::Realtime::Serialization::RealtimeDictionary_1<TValue>::DictionaryUpdate* entry) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::<WriteLength>b__33_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteLength>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RealtimeDictionary_1<TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RealtimeDictionary_1<TValue>*, creationType>()));
    }
    // protected override System.Int32 WriteLength(Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0xFFFFFFFF
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Int32 RealtimeModel::WriteLength(Normal.Realtime.Serialization.StreamContext context)
    int WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::WriteLength");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
    }
    // protected override System.Void Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0xFFFFFFFF
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Void RealtimeModel::Write(Normal.Realtime.Serialization.WriteStream stream, Normal.Realtime.Serialization.StreamContext context)
    void Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Write");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
    }
    // protected override System.Void Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
    // Offset: 0xFFFFFFFF
    // Implemented from: Normal.Realtime.RealtimeModel
    // Base method: System.Void RealtimeModel::Read(Normal.Realtime.Serialization.ReadStream stream, Normal.Realtime.Serialization.StreamContext context)
    void Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::RealtimeDictionary_1::Read");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
    }
  }; // Normal.Realtime.Serialization.RealtimeDictionary`1
  // Could not write size check! Type: Normal.Realtime.Serialization.RealtimeDictionary`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
