// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived
#include "Normal/Realtime/Native/Client_RPCMessageReceived.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived.Invoke
void Normal::Realtime::Native::Client::RPCMessageReceived::Invoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RPCMessageReceived::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, senderID, data, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::RPCMessageReceived::BeginInvoke(::Normal::Realtime::Native::Client* client, int senderID, ::ArrayW<uint8_t> data, bool reliable, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RPCMessageReceived::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, senderID, data, reliable, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.RPCMessageReceived.EndInvoke
void Normal::Realtime::Native::Client::RPCMessageReceived::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::RPCMessageReceived::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated
#include "Normal/Realtime/Native/Client_AudioOutputStreamCreated.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated.Invoke
void Normal::Realtime::Native::Client::AudioOutputStreamCreated::Invoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamCreated::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(audioOutputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::AudioOutputStreamCreated::BeginInvoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamCreated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(audioOutputStream), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, audioOutputStream, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamCreated.EndInvoke
void Normal::Realtime::Native::Client::AudioOutputStreamCreated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamCreated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed
#include "Normal/Realtime/Native/Client_AudioOutputStreamClosed.hpp"
// Including type: Normal.Realtime.Native.AudioOutputStream
#include "Normal/Realtime/Native/AudioOutputStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed.Invoke
void Normal::Realtime::Native::Client::AudioOutputStreamClosed::Invoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamClosed::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(audioOutputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Client::AudioOutputStreamClosed::BeginInvoke(::Normal::Realtime::Native::Client* client, ::Normal::Realtime::Native::AudioOutputStream* audioOutputStream, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamClosed::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(audioOutputStream), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, audioOutputStream, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Client/Normal.Realtime.Native.AudioOutputStreamClosed.EndInvoke
void Normal::Realtime::Native::Client::AudioOutputStreamClosed::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Client::AudioOutputStreamClosed::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.RealtimeNativeException
#include "Normal/Realtime/Native/RealtimeNativeException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.RealtimeNativeException.NativePointerIsNull
::Normal::Realtime::Native::RealtimeNativeException* Normal::Realtime::Native::RealtimeNativeException::NativePointerIsNull(::StringW className) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::RealtimeNativeException::NativePointerIsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "RealtimeNativeException", "NativePointerIsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::RealtimeNativeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, className);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Matcher
#include "Normal/Realtime/Native/Matcher.hpp"
// Including type: Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState
#include "Normal/Realtime/Native/Matcher_RequestState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeMatcher
::System::IntPtr& Normal::Realtime::Native::Matcher::dyn__nativeMatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::dyn__nativeMatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeMatcher"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Dispose
void Normal::Realtime::Native::Matcher::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Dispose
void Normal::Realtime::Native::Matcher::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Connect
void Normal::Realtime::Native::Matcher::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Disconnect
void Normal::Realtime::Native::Matcher::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Tick
void Normal::Realtime::Native::Matcher::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetRequestState
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::GetRequestState(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetRequestState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Native::Matcher::RequestState, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetRequestErrorMessage
::StringW Normal::Realtime::Native::Matcher::GetRequestErrorMessage(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetRequestErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetRequestFailMessage
::StringW Normal::Realtime::Native::Matcher::GetRequestFailMessage(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetRequestFailMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestFailMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.ClearRequest
void Normal::Realtime::Native::Matcher::ClearRequest(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::ClearRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.ConnectToRoom
::StringW Normal::Realtime::Native::Matcher::ConnectToRoom(::StringW appKey, ::StringW roomName, ::StringW clientOffer, ::ArrayW<::Normal::Realtime::Native::Cluster> clusterPingResults, ::ArrayW<::Normal::Realtime::Native::Region> preferredRegions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::ConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(clientOffer), ::il2cpp_utils::ExtractType(clusterPingResults), ::il2cpp_utils::ExtractType(preferredRegions)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, appKey, roomName, clientOffer, clusterPingResults, preferredRegions);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetConnectToRoomRequestResponseType
::StringW Normal::Realtime::Native::Matcher::GetConnectToRoomRequestResponseType(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetConnectToRoomRequestResponseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToRoomRequestResponseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetConnectToRoomRequestClustersToPing
::ArrayW<::Normal::Realtime::Native::Cluster> Normal::Realtime::Native::Matcher::GetConnectToRoomRequestClustersToPing(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetConnectToRoomRequestClustersToPing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToRoomRequestClustersToPing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Normal::Realtime::Native::Cluster>, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.GetConnectToRoomRequestServerAnswer
::StringW Normal::Realtime::Native::Matcher::GetConnectToRoomRequestServerAnswer(::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::GetConnectToRoomRequestServerAnswer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToRoomRequestServerAnswer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Matcher.Finalize
void Normal::Realtime::Native::Matcher::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState
#include "Normal/Realtime/Native/Matcher_RequestState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestCreated
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestCreated"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestCreated
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestCreated(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestCreated", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestSent
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestSent"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestSent
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestSent(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestSent", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedSuccess
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedSuccess"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedSuccess
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedSuccess(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedError
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestReceivedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedError"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestReceivedError
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedError(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestReceivedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestReceivedError", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestFailed
::Normal::Realtime::Native::Matcher::RequestState Normal::Realtime::Native::Matcher::RequestState::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Matcher::RequestState>("Normal.Realtime.Native", "Matcher/RequestState", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Matcher/Normal.Realtime.Native.RequestState RequestFailed
void Normal::Realtime::Native::Matcher::RequestState::_set_RequestFailed(::Normal::Realtime::Native::Matcher::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Matcher/RequestState", "RequestFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::Native::Matcher::RequestState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Matcher::RequestState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Microphone
#include "Normal/Realtime/Native/Microphone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _nativeMicrophone
::System::IntPtr& Normal::Realtime::Native::Microphone::dyn__nativeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::dyn__nativeMicrophone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nativeMicrophone"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.PlatformSupported
bool Normal::Realtime::Native::Microphone::PlatformSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::PlatformSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Microphone", "PlatformSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Dispose
void Normal::Realtime::Native::Microphone::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Dispose
void Normal::Realtime::Native::Microphone::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Start
bool Normal::Realtime::Native::Microphone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Stop
void Normal::Realtime::Native::Microphone::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.SampleRate
int Normal::Realtime::Native::Microphone::SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::SampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Channels
int Normal::Realtime::Native::Microphone::Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.GetAudioData
bool Normal::Realtime::Native::Microphone::GetAudioData(::ArrayW<float> audioData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::GetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioData);
}
// Autogenerated method: Normal.Realtime.Native.Microphone.Finalize
void Normal::Realtime::Native::Microphone::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Microphone::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Cluster
#include "Normal/Realtime/Native/Cluster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
::StringW& Normal::Realtime::Native::Cluster::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String address
::StringW& Normal::Realtime::Native::Cluster::dyn_address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::dyn_address");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "address"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ping
int& Normal::Realtime::Native::Cluster::dyn_ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::dyn_ping");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ping"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Cluster..ctor
Normal::Realtime::Native::Cluster::Cluster(::StringW name, ::StringW address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Cluster::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, address);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Region
#include "Normal/Realtime/Native/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
::StringW& Normal::Realtime::Native::Region::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Region::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Native.Region..ctor
// ABORTED elsewhere.  Normal::Realtime::Native::Region::Region(::StringW name)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType
#include "Normal/Realtime/Native/AudioStreamEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioInputStreamClosed
::Normal::Realtime::Native::AudioStreamEvent::EventType Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioInputStreamClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioInputStreamClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::AudioStreamEvent::EventType>("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioInputStreamClosed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioInputStreamClosed
void Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioInputStreamClosed(::Normal::Realtime::Native::AudioStreamEvent::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioInputStreamClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioInputStreamClosed", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamOpened
::Normal::Realtime::Native::AudioStreamEvent::EventType Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamOpened");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::AudioStreamEvent::EventType>("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamOpened"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamOpened
void Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamOpened(::Normal::Realtime::Native::AudioStreamEvent::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamOpened");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamOpened", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamClosed
::Normal::Realtime::Native::AudioStreamEvent::EventType Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_get_AudioOutputStreamClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::AudioStreamEvent::EventType>("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamClosed"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.AudioStreamEvent/Normal.Realtime.Native.EventType AudioOutputStreamClosed
void Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamClosed(::Normal::Realtime::Native::AudioStreamEvent::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::_set_AudioOutputStreamClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "AudioStreamEvent/EventType", "AudioOutputStreamClosed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::Native::AudioStreamEvent::EventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::AudioStreamEvent::EventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Plugin
#include "Normal/Realtime/Native/Plugin.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate
#include "Normal/Realtime/Native/Plugin_LogDelegate.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Normal.Realtime.Native.PersistenceMessageEvent
#include "Normal/Realtime/Native/PersistenceMessageEvent.hpp"
// Including type: Normal.Realtime.Native.RPCMessageEvent
#include "Normal/Realtime/Native/RPCMessageEvent.hpp"
// Including type: Normal.Realtime.Native.AudioStreamEvent
#include "Normal/Realtime/Native/AudioStreamEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String realtimeDLLName
::StringW Normal::Realtime::Native::Plugin::_get_realtimeDLLName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_get_realtimeDLLName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Normal.Realtime.Native", "Plugin", "realtimeDLLName"));
}
// Autogenerated static field setter
// Set static field: static private System.String realtimeDLLName
void Normal::Realtime::Native::Plugin::_set_realtimeDLLName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_set_realtimeDLLName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin", "realtimeDLLName", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel logLevel
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::_get_logLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_get_logLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin", "logLevel"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel logLevel
void Normal::Realtime::Native::Plugin::_set_logLevel(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::_set_logLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin", "logLevel", value));
}
// Autogenerated method: Normal.Realtime.Native.Plugin..cctor
void Normal::Realtime::Native::Plugin::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.SetUpLogging
void Normal::Realtime::Native::Plugin::SetUpLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::SetUpLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "SetUpLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.SetLogFunction
void Normal::Realtime::Native::Plugin::SetLogFunction(::System::IntPtr logFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::SetLogFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "SetLogFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logFunction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logFunction);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.Log
int Normal::Realtime::Native::Plugin::Log(::Normal::Realtime::Native::Plugin::LogLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, message);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherCreate
::System::IntPtr Normal::Realtime::Native::Plugin::MatcherCreate(::StringW matcherURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcherURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcherURL);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherDelete
void Normal::Realtime::Native::Plugin::MatcherDelete(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherConnect
void Normal::Realtime::Native::Plugin::MatcherConnect(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherDisconnect
void Normal::Realtime::Native::Plugin::MatcherDisconnect(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherTick
void Normal::Realtime::Native::Plugin::MatcherTick(::System::IntPtr matcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetRequestState
int Normal::Realtime::Native::Plugin::MatcherGetRequestState(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetRequestState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetRequestState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetRequestErrorMessage
::StringW Normal::Realtime::Native::Plugin::MatcherGetRequestErrorMessage(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetRequestErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetRequestErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetRequestFailMessage
::StringW Normal::Realtime::Native::Plugin::MatcherGetRequestFailMessage(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetRequestFailMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetRequestFailMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherClearRequest
void Normal::Realtime::Native::Plugin::MatcherClearRequest(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherClearRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherClearRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherConnectToRoom
::StringW Normal::Realtime::Native::Plugin::MatcherConnectToRoom(::System::IntPtr matcher, ::StringW appKey, ::StringW roomName, ::StringW clientOffer, ::ArrayW<::Normal::Realtime::Native::Cluster> clusterPingResults, int clusterPingResultsLength, ::ArrayW<::Normal::Realtime::Native::Region> preferredRegions, int preferredRegionsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherConnectToRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherConnectToRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(appKey), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(clientOffer), ::il2cpp_utils::ExtractType(clusterPingResults), ::il2cpp_utils::ExtractType(clusterPingResultsLength), ::il2cpp_utils::ExtractType(preferredRegions), ::il2cpp_utils::ExtractType(preferredRegionsLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, appKey, roomName, clientOffer, clusterPingResults, clusterPingResultsLength, preferredRegions, preferredRegionsLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestResponseType
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestResponseType(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestResponseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestResponseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestClustersToPingCount
int Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingCount(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestClustersToPingCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestClustersToPingNameAtIndex
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingNameAtIndex(::System::IntPtr matcher, ::StringW requestGUID, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingNameAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestClustersToPingNameAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID, index);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex(::System::IntPtr matcher, ::StringW requestGUID, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestClustersToPingAddressAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID, index);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MatcherGetConnectToRoomRequestServerAnswer
::StringW Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestServerAnswer(::System::IntPtr matcher, ::StringW requestGUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MatcherGetConnectToRoomRequestServerAnswer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MatcherGetConnectToRoomRequestServerAnswer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher), ::il2cpp_utils::ExtractType(requestGUID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matcher, requestGUID);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientSetUpNetworkStack
bool Normal::Realtime::Native::Plugin::ClientSetUpNetworkStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientSetUpNetworkStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientSetUpNetworkStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientTearDownNetworkStack
bool Normal::Realtime::Native::Plugin::ClientTearDownNetworkStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientTearDownNetworkStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientTearDownNetworkStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientCreate
::System::IntPtr Normal::Realtime::Native::Plugin::ClientCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDelete
void Normal::Realtime::Native::Plugin::ClientDelete(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientStartConnection
::StringW Normal::Realtime::Native::Plugin::ClientStartConnection(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientStartConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientStartConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientConnect
void Normal::Realtime::Native::Plugin::ClientConnect(::System::IntPtr client, ::StringW serverAnswer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(serverAnswer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, serverAnswer);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDisconnect
void Normal::Realtime::Native::Plugin::ClientDisconnect(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientBumpAutoDisconnectTime
void Normal::Realtime::Native::Plugin::ClientBumpAutoDisconnectTime(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientBumpAutoDisconnectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientBumpAutoDisconnectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientGetState
int Normal::Realtime::Native::Plugin::ClientGetState(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientGetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientGetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientGetClientID
int Normal::Realtime::Native::Plugin::ClientGetClientID(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientGetClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientGetClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientGetRoomTime
double Normal::Realtime::Native::Plugin::ClientGetRoomTime(::System::IntPtr client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientGetRoomTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientGetRoomTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientSendPersistenceMessage
bool Normal::Realtime::Native::Plugin::ClientSendPersistenceMessage(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientSendPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientSendPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingPersistenceMessage
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessage(::System::IntPtr client, ByRef<::Normal::Realtime::Native::PersistenceMessageEvent> persistenceMessageEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingPersistenceMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Native::PersistenceMessageEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, byref(persistenceMessageEvent));
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingPersistenceMessageData
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessageData(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingPersistenceMessageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingPersistenceMessageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientSendRPCMessage
bool Normal::Realtime::Native::Plugin::ClientSendRPCMessage(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientSendRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientSendRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(reliable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength, reliable);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingRPCMessage
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessage(::System::IntPtr client, ByRef<::Normal::Realtime::Native::RPCMessageEvent> persistenceMessageEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingRPCMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Native::RPCMessageEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, byref(persistenceMessageEvent));
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingRPCMessageData
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessageData(::System::IntPtr client, ::ArrayW<uint8_t> data, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingRPCMessageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingRPCMessageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, data, dataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientCreateAudioInputStream
::System::IntPtr Normal::Realtime::Native::Plugin::ClientCreateAudioInputStream(::System::IntPtr client, bool voice, int sampleRate, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientCreateAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientCreateAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(voice), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, voice, sampleRate, channels);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDeleteAudioInputStream
void Normal::Realtime::Native::Plugin::ClientDeleteAudioInputStream(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDeleteAudioInputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDeleteAudioInputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientDeleteAudioOutputStream
void Normal::Realtime::Native::Plugin::ClientDeleteAudioOutputStream(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientDeleteAudioOutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientDeleteAudioOutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.ClientReceiveIncomingAudioStreamEvent
bool Normal::Realtime::Native::Plugin::ClientReceiveIncomingAudioStreamEvent(::System::IntPtr client, ByRef<::Normal::Realtime::Native::AudioStreamEvent> audioStreamEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::ClientReceiveIncomingAudioStreamEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "ClientReceiveIncomingAudioStreamEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Native::AudioStreamEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, byref(audioStreamEvent));
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamGetClientID
int Normal::Realtime::Native::Plugin::AudioInputStreamGetClientID(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamGetClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamGetClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamGetStreamID
int Normal::Realtime::Native::Plugin::AudioInputStreamGetStreamID(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamGetStreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamGetStreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamClose
void Normal::Realtime::Native::Plugin::AudioInputStreamClose(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamSendRawAudioData
bool Normal::Realtime::Native::Plugin::AudioInputStreamSendRawAudioData(::System::IntPtr audioInputStream, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamSendRawAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamSendRawAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioInputStreamSendQueuedMessages
void Normal::Realtime::Native::Plugin::AudioInputStreamSendQueuedMessages(::System::IntPtr audioInputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioInputStreamSendQueuedMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioInputStreamSendQueuedMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInputStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioInputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetClientID
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetClientID(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetClientID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetClientID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetStreamID
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetStreamID(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetStreamID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetStreamID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetSampleRate
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetSampleRate(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamSetSampleRate
void Normal::Realtime::Native::Plugin::AudioOutputStreamSetSampleRate(::System::IntPtr audioOutputStream, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamSetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamSetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream), ::il2cpp_utils::ExtractType(sampleRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream, sampleRate);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetChannels
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetChannels(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetIsOpen
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetIsOpen(::System::IntPtr audioOutputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetIsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetIsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioOutputStreamGetAudioData
int Normal::Realtime::Native::Plugin::AudioOutputStreamGetAudioData(::System::IntPtr audioOutputStream, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioOutputStreamGetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioOutputStreamGetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutputStream), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioOutputStream, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorCreate
::System::IntPtr Normal::Realtime::Native::Plugin::AudioPreprocessorCreate(int recordSampleRate, int recordFrameSize, bool automaticGainControl, bool noiseSuppression, bool reverbSuppression, bool echoCancellation, int playbackSampleRate, int playbackChannels, float tail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordSampleRate), ::il2cpp_utils::ExtractType(recordFrameSize), ::il2cpp_utils::ExtractType(automaticGainControl), ::il2cpp_utils::ExtractType(noiseSuppression), ::il2cpp_utils::ExtractType(reverbSuppression), ::il2cpp_utils::ExtractType(echoCancellation), ::il2cpp_utils::ExtractType(playbackSampleRate), ::il2cpp_utils::ExtractType(playbackChannels), ::il2cpp_utils::ExtractType(tail)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordSampleRate, recordFrameSize, automaticGainControl, noiseSuppression, reverbSuppression, echoCancellation, playbackSampleRate, playbackChannels, tail);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorDelete
void Normal::Realtime::Native::Plugin::AudioPreprocessorDelete(::System::IntPtr audioPreprocessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioPreprocessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioPreprocessor);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorProcessRecordFrame
bool Normal::Realtime::Native::Plugin::AudioPreprocessorProcessRecordFrame(::System::IntPtr audioPreprocessor, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorProcessRecordFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorProcessRecordFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioPreprocessor), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioPreprocessor, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.AudioPreprocessorProcessPlaybackFrame
bool Normal::Realtime::Native::Plugin::AudioPreprocessorProcessPlaybackFrame(::System::IntPtr audioPreprocessor, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::AudioPreprocessorProcessPlaybackFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "AudioPreprocessorProcessPlaybackFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioPreprocessor), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioPreprocessor, audioData, audioDataLength);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophonePlatformSupported
bool Normal::Realtime::Native::Plugin::MicrophonePlatformSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophonePlatformSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophonePlatformSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneCreate
::System::IntPtr Normal::Realtime::Native::Plugin::MicrophoneCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneDelete
void Normal::Realtime::Native::Plugin::MicrophoneDelete(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneStart
bool Normal::Realtime::Native::Plugin::MicrophoneStart(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneStop
void Normal::Realtime::Native::Plugin::MicrophoneStop(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneGetSampleRate
int Normal::Realtime::Native::Plugin::MicrophoneGetSampleRate(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneGetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneGetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneGetChannels
int Normal::Realtime::Native::Plugin::MicrophoneGetChannels(::System::IntPtr microphone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneGetChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneGetChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone);
}
// Autogenerated method: Normal.Realtime.Native.Plugin.MicrophoneGetAudioData
bool Normal::Realtime::Native::Plugin::MicrophoneGetAudioData(::System::IntPtr microphone, ::ArrayW<float> audioData, int audioDataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::MicrophoneGetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Native", "Plugin", "MicrophoneGetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphone), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, microphone, audioData, audioDataLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel
#include "Normal/Realtime/Native/Plugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelInfo
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelInfo"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelInfo
void Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelInfo(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelWarning
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelWarning"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelWarning
void Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelWarning(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelWarning", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelError
::Normal::Realtime::Native::Plugin::LogLevel Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_get_LogLevelError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Native::Plugin::LogLevel>("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelError"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogLevel LogLevelError
void Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelError(::Normal::Realtime::Native::Plugin::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::_set_LogLevelError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Native", "Plugin/LogLevel", "LogLevelError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Normal::Realtime::Native::Plugin::LogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate
#include "Normal/Realtime/Native/Plugin_LogDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate.Invoke
int Normal::Realtime::Native::Plugin::LogDelegate::Invoke(::Normal::Realtime::Native::Plugin::LogLevel logLevel, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logLevel), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, logLevel, message);
}
// Autogenerated method: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate.BeginInvoke
::System::IAsyncResult* Normal::Realtime::Native::Plugin::LogDelegate::BeginInvoke(::Normal::Realtime::Native::Plugin::LogLevel logLevel, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logLevel), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, logLevel, message, callback, object);
}
// Autogenerated method: Normal.Realtime.Native.Plugin/Normal.Realtime.Native.LogDelegate.EndInvoke
int Normal::Realtime::Native::Plugin::LogDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Native::Plugin::LogDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.BufferAnalyzer
#include "Normal/Realtime/Serialization/BufferAnalyzer.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 recursionLevelLimit
uint& Normal::Realtime::Serialization::BufferAnalyzer::dyn_recursionLevelLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn_recursionLevelLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recursionLevelLimit"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _recursionLevel
uint& Normal::Realtime::Serialization::BufferAnalyzer::dyn__recursionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__recursionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recursionLevel"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _buffer
::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::Serialization::BufferAnalyzer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StringWriter _stringWriter
::System::IO::StringWriter*& Normal::Realtime::Serialization::BufferAnalyzer::dyn__stringWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__stringWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringWriter"))->offset;
  return *reinterpret_cast<::System::IO::StringWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentModelEndPosition
int& Normal::Realtime::Serialization::BufferAnalyzer::dyn__currentModelEndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__currentModelEndPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentModelEndPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _lastCollectionTypeID
uint& Normal::Realtime::Serialization::BufferAnalyzer::dyn__lastCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::dyn__lastCollectionTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCollectionTypeID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.AnalyzeBuffer
::StringW Normal::Realtime::Serialization::BufferAnalyzer::AnalyzeBuffer(::Normal::Realtime::Serialization::ReadBuffer* buffer, bool readUpdateID, bool readPacketTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::AnalyzeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnalyzeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(readUpdateID), ::il2cpp_utils::ExtractType(readPacketTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, buffer, readUpdateID, readPacketTime);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.ReadRawModel
void Normal::Realtime::Serialization::BufferAnalyzer::ReadRawModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::ReadRawModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.ReadNextPropertyID
bool Normal::Realtime::Serialization::BufferAnalyzer::ReadNextPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::ReadNextPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.ReadRawPropertyKey
void Normal::Realtime::Serialization::BufferAnalyzer::ReadRawPropertyKey(ByRef<uint> propertyID, ByRef<::Normal::Realtime::Serialization::Serialization::WireType> wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::ReadRawPropertyKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawPropertyKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Serialization::Serialization::WireType&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(propertyID), byref(wireType));
}
// Autogenerated method: Normal.Realtime.Serialization.BufferAnalyzer.GetIndentStringForLevel
::StringW Normal::Realtime::Serialization::BufferAnalyzer::GetIndentStringForLevel(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BufferAnalyzer::GetIndentStringForLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "BufferAnalyzer", "GetIndentStringForLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.PropertyHeader
#include "Normal/Realtime/Serialization/PropertyHeader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 propertyID
uint& Normal::Realtime::Serialization::PropertyHeader::dyn_propertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::PropertyHeader::dyn_propertyID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType propertyWireType
::Normal::Realtime::Serialization::Serialization::WireType& Normal::Realtime::Serialization::PropertyHeader::dyn_propertyWireType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::PropertyHeader::dyn_propertyWireType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyWireType"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::Serialization::WireType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.PropertyHeader..ctor
// ABORTED elsewhere.  Normal::Realtime::Serialization::PropertyHeader::PropertyHeader(uint propertyID, ::Normal::Realtime::Serialization::Serialization::WireType propertyWireType)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ICollection
#include "Normal/Realtime/Serialization/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ICollection.GetCollectionTypeID
uint Normal::Realtime::Serialization::ICollection::GetCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ICollection::GetCollectionTypeID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCollectionTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.InflightUpdateSubscription
#include "Normal/Realtime/Serialization/InflightUpdateSubscription.hpp"
// Including type: Normal.Realtime.Serialization.InflightUpdateNotifier
#include "Normal/Realtime/Serialization/InflightUpdateNotifier.hpp"
// Including type: Normal.Realtime.IConfirmedProperty
#include "Normal/Realtime/IConfirmedProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.Serialization.InflightUpdateNotifier notifier
::Normal::Realtime::Serialization::InflightUpdateNotifier*& Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_notifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_notifier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notifier"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::InflightUpdateNotifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Normal.Realtime.IConfirmedProperty property
::Normal::Realtime::IConfirmedProperty*& Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_property");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "property"))->offset;
  return *reinterpret_cast<::Normal::Realtime::IConfirmedProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 updateID
uint& Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_updateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::dyn_updateID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateSubscription..ctor
// ABORTED elsewhere.  Normal::Realtime::Serialization::InflightUpdateSubscription::InflightUpdateSubscription(::Normal::Realtime::Serialization::InflightUpdateNotifier* notifier, ::Normal::Realtime::IConfirmedProperty* property, uint updateID)
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateSubscription.Cancel
void Normal::Realtime::Serialization::InflightUpdateSubscription::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateSubscription::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.InflightUpdateNotifier
#include "Normal/Realtime/Serialization/InflightUpdateNotifier.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Normal.Realtime.IConfirmedProperty
#include "Normal/Realtime/IConfirmedProperty.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Normal.Realtime.Serialization.InflightUpdateSubscription
#include "Normal/Realtime/Serialization/InflightUpdateSubscription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt32,System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _properties
::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*& Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Stack`1<System.Collections.Generic.HashSet`1<Normal.Realtime.IConfirmedProperty>> _pool
::System::Collections::Generic::Stack_1<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>*& Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lock
bool& Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::dyn__lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.ThrowIfLocked
void Normal::Realtime::Serialization::InflightUpdateNotifier::ThrowIfLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::ThrowIfLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.Subscribe
::Normal::Realtime::Serialization::InflightUpdateSubscription Normal::Realtime::Serialization::InflightUpdateNotifier::Subscribe(uint updateID, ::Normal::Realtime::IConfirmedProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::InflightUpdateSubscription, false>(this, ___internal__method, updateID, property);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.Unsubscribe
void Normal::Realtime::Serialization::InflightUpdateNotifier::Unsubscribe(uint updateID, ::Normal::Realtime::IConfirmedProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::Unsubscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unsubscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID), ::il2cpp_utils::ExtractType(property)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID, property);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.AckUpdateID
void Normal::Realtime::Serialization::InflightUpdateNotifier::AckUpdateID(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::AckUpdateID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AckUpdateID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.SafeInvokeAck
void Normal::Realtime::Serialization::InflightUpdateNotifier::SafeInvokeAck(::Normal::Realtime::IConfirmedProperty* prop, uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::SafeInvokeAck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "InflightUpdateNotifier", "SafeInvokeAck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, updateID);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.TakePropertyList
::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>* Normal::Realtime::Serialization::InflightUpdateNotifier::TakePropertyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::TakePropertyList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakePropertyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::Normal::Realtime::IConfirmedProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.InflightUpdateNotifier.ReleasePropertyList
void Normal::Realtime::Serialization::InflightUpdateNotifier::ReleasePropertyList(uint updateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::InflightUpdateNotifier::ReleasePropertyList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleasePropertyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.IStreamReader
#include "Normal/Realtime/Serialization/IStreamReader.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.IStreamReader.Read
void Normal::Realtime::Serialization::IStreamReader::Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.IStreamWriter
#include "Normal/Realtime/Serialization/IStreamWriter.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.IStreamWriter.WriteLength
int Normal::Realtime::Serialization::IStreamWriter::WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IStreamWriter::WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.Serialization.IStreamWriter.Write
void Normal::Realtime::Serialization::IStreamWriter::Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel
#include "Normal/Realtime/Serialization/MetaModel.hpp"
// Including type: Normal.Realtime.Serialization.IMetaModelExtension
#include "Normal/Realtime/Serialization/IMetaModelExtension.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer
#include "Normal/Realtime/Serialization/MetaModel_OwnerIDSerializer.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer
#include "Normal/Realtime/Serialization/MetaModel_LifetimeFlagsSerializer.hpp"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID
#include "Normal/Realtime/Serialization/MetaModel_PropertyID.hpp"
// Including type: Normal.Realtime.ReliableProperty`1
#include "Normal/Realtime/ReliableProperty_1.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 ReservedPropertyID
uint Normal::Realtime::Serialization::MetaModel::_get_ReservedPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::_get_ReservedPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Normal.Realtime.Serialization", "MetaModel", "ReservedPropertyID"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 ReservedPropertyID
void Normal::Realtime::Serialization::MetaModel::_set_ReservedPropertyID(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::_set_ReservedPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel", "ReservedPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID> _ownerIDProperty
::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::OwnerID>*& Normal::Realtime::Serialization::MetaModel::dyn__ownerIDProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::dyn__ownerIDProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ownerIDProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::OwnerID>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.ReliableProperty`1<Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags> _lifetimeFlagsProperty
::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>*& Normal::Realtime::Serialization::MetaModel::dyn__lifetimeFlagsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::dyn__lifetimeFlagsProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lifetimeFlagsProperty"))->offset;
  return *reinterpret_cast<::Normal::Realtime::ReliableProperty_1<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_ownerID
int Normal::Realtime::Serialization::MetaModel::get_ownerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.set_ownerID
void Normal::Realtime::Serialization::MetaModel::set_ownerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::set_ownerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ownerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_lifetimeFlags
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::get_lifetimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_lifetimeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lifetimeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.set_lifetimeFlags
void Normal::Realtime::Serialization::MetaModel::set_lifetimeFlags(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::set_lifetimeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lifetimeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_modelType
uint Normal::Realtime::Serialization::MetaModel::get_modelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_modelType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.get_modelExtension
::Normal::Realtime::Serialization::IMetaModelExtension* Normal::Realtime::Serialization::MetaModel::get_modelExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::get_modelExtension");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::IMetaModelExtension*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel..cctor
void Normal::Realtime::Serialization::MetaModel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "MetaModel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.Normal.Realtime.Serialization.IStreamWriter.WriteLength
int Normal::Realtime::Serialization::MetaModel::Normal_Realtime_Serialization_IStreamWriter_WriteLength(::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::Normal.Realtime.Serialization.IStreamWriter.WriteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.Serialization.IStreamWriter.WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, context);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.Normal.Realtime.Serialization.IStreamWriter.Write
void Normal::Realtime::Serialization::MetaModel::Normal_Realtime_Serialization_IStreamWriter_Write(::Normal::Realtime::Serialization::WriteStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::Normal.Realtime.Serialization.IStreamWriter.Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.Serialization.IStreamWriter.Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel.Normal.Realtime.Serialization.IStreamReader.Read
void Normal::Realtime::Serialization::MetaModel::Normal_Realtime_Serialization_IStreamReader_Read(::Normal::Realtime::Serialization::ReadStream* stream, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::Normal.Realtime.Serialization.IStreamReader.Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normal.Realtime.Serialization.IStreamReader.Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.op_Equality
bool Normal::Realtime::Serialization::operator ==(const ::Normal::Realtime::Serialization::MetaModel::OwnerID& left, const ::Normal::Realtime::Serialization::MetaModel::OwnerID& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "MetaModel/OwnerID", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.op_Inequality
bool Normal::Realtime::Serialization::operator !=(const ::Normal::Realtime::Serialization::MetaModel::OwnerID& left, const ::Normal::Realtime::Serialization::MetaModel::OwnerID& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "MetaModel/OwnerID", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
int& Normal::Realtime::Serialization::MetaModel::OwnerID::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.Equals
bool Normal::Realtime::Serialization::MetaModel::OwnerID::Equals(::Normal::Realtime::Serialization::MetaModel::OwnerID other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.Equals
bool Normal::Realtime::Serialization::MetaModel::OwnerID::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.GetHashCode
int Normal::Realtime::Serialization::MetaModel::OwnerID::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerID.ToString
::StringW Normal::Realtime::Serialization::MetaModel::OwnerID::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerID::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer
#include "Normal/Realtime/Serialization/MetaModel_OwnerIDSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer.Length
int Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Length(::Normal::Realtime::Serialization::MetaModel::OwnerID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer.Write
void Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::Normal::Realtime::Serialization::MetaModel::OwnerID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.OwnerIDSerializer.Read
void Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::Normal::Realtime::Serialization::MetaModel::OwnerID> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::OwnerIDSerializer::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer
#include "Normal/Realtime/Serialization/MetaModel_LifetimeFlagsSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer.Length
int Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Length(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer.Write
void Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlagsSerializer.Read
void Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlagsSerializer::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags
#include "Normal/Realtime/Serialization/MetaModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags Default
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags Default
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_Default(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerOrLastClientLeaves
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerOrLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerOrLastClientLeaves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerOrLastClientLeaves"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerOrLastClientLeaves
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerOrLastClientLeaves(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerOrLastClientLeaves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerOrLastClientLeaves", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags PreventOwnershipTakeover
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_PreventOwnershipTakeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_PreventOwnershipTakeover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "PreventOwnershipTakeover"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags PreventOwnershipTakeover
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_PreventOwnershipTakeover(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_PreventOwnershipTakeover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "PreventOwnershipTakeover", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenLastClientLeaves
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenLastClientLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenLastClientLeaves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenLastClientLeaves"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenLastClientLeaves
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenLastClientLeaves(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenLastClientLeaves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenLastClientLeaves", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerLeaves
::Normal::Realtime::Serialization::MetaModel::LifetimeFlags Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerLeaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_get_DestroyWhenOwnerLeaves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::LifetimeFlags>("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerLeaves"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.LifetimeFlags DestroyWhenOwnerLeaves
void Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerLeaves(::Normal::Realtime::Serialization::MetaModel::LifetimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::_set_DestroyWhenOwnerLeaves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/LifetimeFlags", "DestroyWhenOwnerLeaves", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Normal::Realtime::Serialization::MetaModel::LifetimeFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::LifetimeFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID
#include "Normal/Realtime/Serialization/MetaModel_PropertyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelType
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelType"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelType
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelType(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelType", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID OwnerID
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_OwnerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_OwnerID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "OwnerID"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID OwnerID
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_OwnerID(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_OwnerID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "OwnerID", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID LifetimeFlags
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_LifetimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_LifetimeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "LifetimeFlags"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID LifetimeFlags
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_LifetimeFlags(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_LifetimeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "LifetimeFlags", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelExtension
::Normal::Realtime::Serialization::MetaModel::PropertyID Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_get_ModelExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::MetaModel::PropertyID>("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelExtension"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.MetaModel/Normal.Realtime.Serialization.PropertyID ModelExtension
void Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelExtension(::Normal::Realtime::Serialization::MetaModel::PropertyID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::_set_ModelExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "MetaModel/PropertyID", "ModelExtension", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Normal::Realtime::Serialization::MetaModel::PropertyID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::MetaModel::PropertyID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.IMetaModelExtension
#include "Normal/Realtime/Serialization/IMetaModelExtension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.IMetaModelExtension.get_modelType
uint Normal::Realtime::Serialization::IMetaModelExtension::get_modelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::IMetaModelExtension::get_modelType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::ArrayW<uint8_t>& Normal::Realtime::Serialization::ReadBuffer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
int& Normal::Realtime::Serialization::ReadBuffer::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.get_bytesRead
int Normal::Realtime::Serialization::ReadBuffer::get_bytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::get_bytesRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bytesRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SetBuffer
void Normal::Realtime::Serialization::ReadBuffer::SetBuffer(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.Reset
void Normal::Realtime::Serialization::ReadBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadByte
uint8_t Normal::Realtime::Serialization::ReadBuffer::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadBytes
void Normal::Realtime::Serialization::ReadBuffer::ReadBytes(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadVarint32
uint Normal::Realtime::Serialization::ReadBuffer::ReadVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipVarint32
void Normal::Realtime::Serialization::ReadBuffer::SkipVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadFixed32
uint Normal::Realtime::Serialization::ReadBuffer::ReadFixed32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadFixed32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFixed32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadFixed64
uint64_t Normal::Realtime::Serialization::ReadBuffer::ReadFixed64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadFixed64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFixed64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadFloat
float Normal::Realtime::Serialization::ReadBuffer::ReadFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadDouble
double Normal::Realtime::Serialization::ReadBuffer::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipFloat
void Normal::Realtime::Serialization::ReadBuffer::SkipFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipDouble
void Normal::Realtime::Serialization::ReadBuffer::SkipDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ReadString
::StringW Normal::Realtime::Serialization::ReadBuffer::ReadString(int lengthInBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lengthInBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, lengthInBytes);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.SkipBytes
void Normal::Realtime::Serialization::ReadBuffer::SkipBytes(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::SkipBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.Copy
::Normal::Realtime::Serialization::ReadBuffer* Normal::Realtime::Serialization::ReadBuffer::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::ReadBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadBuffer.ToString
::StringW Normal::Realtime::Serialization::ReadBuffer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadBuffer::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadBuffer
#include "Normal/Realtime/Serialization/ReadBuffer.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: Normal.Realtime.Serialization.IStreamReader
#include "Normal/Realtime/Serialization/IStreamReader.hpp"
// Including type: Normal.Realtime.Serialization.StreamContext
#include "Normal/Realtime/Serialization/StreamContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 recursionLevelLimit
uint& Normal::Realtime::Serialization::ReadStream::dyn_recursionLevelLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn_recursionLevelLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recursionLevelLimit"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _recursionLevel
uint& Normal::Realtime::Serialization::ReadStream::dyn__recursionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__recursionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recursionLevel"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.ReadBuffer _buffer
::Normal::Realtime::Serialization::ReadBuffer*& Normal::Realtime::Serialization::ReadStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::ReadBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType _requiredWireType
::Normal::Realtime::Serialization::Serialization::WireType& Normal::Realtime::Serialization::ReadStream::dyn__requiredWireType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__requiredWireType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requiredWireType"))->offset;
  return *reinterpret_cast<::Normal::Realtime::Serialization::Serialization::WireType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentModelEndPosition
int& Normal::Realtime::Serialization::ReadStream::dyn__currentModelEndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__currentModelEndPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentModelEndPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _lastCollectionTypeID
uint& Normal::Realtime::Serialization::ReadStream::dyn__lastCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::dyn__lastCollectionTypeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCollectionTypeID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ConvertUIntToNegativeOneInt
int Normal::Realtime::Serialization::ReadStream::ConvertUIntToNegativeOneInt(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ConvertUIntToNegativeOneInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "ConvertUIntToNegativeOneInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.Vector2FromBytes
::UnityEngine::Vector2 Normal::Realtime::Serialization::ReadStream::Vector2FromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::Vector2FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "Vector2FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.Vector3FromBytes
::UnityEngine::Vector3 Normal::Realtime::Serialization::ReadStream::Vector3FromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::Vector3FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "Vector3FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.QuaternionFromBytes
::UnityEngine::Quaternion Normal::Realtime::Serialization::ReadStream::QuaternionFromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::QuaternionFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "QuaternionFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ColorFromBytes
::UnityEngine::Color Normal::Realtime::Serialization::ReadStream::ColorFromBytes(::ArrayW<uint8_t> buffer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ColorFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "ColorFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.BytesToFloat
float Normal::Realtime::Serialization::ReadStream::BytesToFloat(::ArrayW<uint8_t> buffer, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::BytesToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ReadStream", "BytesToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(offset));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.DeserializeModel
void Normal::Realtime::Serialization::ReadStream::DeserializeModel(::Normal::Realtime::Serialization::IStreamReader* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::DeserializeModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadNextPropertyID
bool Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID(ByRef<uint> propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(propertyID));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadNextPropertyID
bool Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID(ByRef<uint> propertyID, ByRef<::Normal::Realtime::Serialization::Serialization::WireType> wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadNextPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Serialization::Serialization::WireType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(propertyID), byref(wireType));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadNull
void Normal::Realtime::Serialization::ReadStream::ReadNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadBool
bool Normal::Realtime::Serialization::ReadStream::ReadBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadByte
uint8_t Normal::Realtime::Serialization::ReadStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadSByte
int8_t Normal::Realtime::Serialization::ReadStream::ReadSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadUShort
uint16_t Normal::Realtime::Serialization::ReadStream::ReadUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadShort
int16_t Normal::Realtime::Serialization::ReadStream::ReadShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadUInt
uint Normal::Realtime::Serialization::ReadStream::ReadUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadInt
int Normal::Realtime::Serialization::ReadStream::ReadInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadVarint32
uint Normal::Realtime::Serialization::ReadStream::ReadVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadFloat
float Normal::Realtime::Serialization::ReadStream::ReadFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadDouble
double Normal::Realtime::Serialization::ReadStream::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::ReadStream::ReadBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadBytes
int Normal::Realtime::Serialization::ReadStream::ReadBytes(::ArrayW<uint8_t> buffer, int offset, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, maxLength);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadString
::StringW Normal::Realtime::Serialization::ReadStream::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadModel
void Normal::Realtime::Serialization::ReadStream::ReadModel(::Normal::Realtime::Serialization::IStreamReader* value, ::Normal::Realtime::Serialization::StreamContext context, bool didForceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(didForceWriteFullModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, context, didForceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadModelAsReadBuffer
::Normal::Realtime::Serialization::ReadBuffer* Normal::Realtime::Serialization::ReadStream::ReadModelAsReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadModelAsReadBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadModelAsReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::ReadBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadCollectionTypeID
uint Normal::Realtime::Serialization::ReadStream::ReadCollectionTypeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadCollectionTypeID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCollectionTypeID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadCollection
void Normal::Realtime::Serialization::ReadStream::ReadCollection(::Normal::Realtime::Serialization::IStreamReader* value, ::Normal::Realtime::Serialization::StreamContext context, bool didForceWriteFullModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(didForceWriteFullModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, context, didForceWriteFullModel);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipProperty
void Normal::Realtime::Serialization::ReadStream::SkipProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawVarint32
void Normal::Realtime::Serialization::ReadStream::SkipRawVarint32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawVarint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawVarint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawFloat
void Normal::Realtime::Serialization::ReadStream::SkipRawFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawDouble
void Normal::Realtime::Serialization::ReadStream::SkipRawDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.SkipRawLengthDelimited
void Normal::Realtime::Serialization::ReadStream::SkipRawLengthDelimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::SkipRawLengthDelimited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipRawLengthDelimited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawPropertyKey
void Normal::Realtime::Serialization::ReadStream::ReadRawPropertyKey(ByRef<uint> propertyID, ByRef<::Normal::Realtime::Serialization::Serialization::WireType> wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawPropertyKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawPropertyKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::Normal::Realtime::Serialization::Serialization::WireType&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(propertyID), byref(wireType));
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawBytes
::ArrayW<uint8_t> Normal::Realtime::Serialization::ReadStream::ReadRawBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawBytes
int Normal::Realtime::Serialization::ReadStream::ReadRawBytes(::ArrayW<uint8_t> buffer, int offset, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, maxLength);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawString
::StringW Normal::Realtime::Serialization::ReadStream::ReadRawString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadRawModel
void Normal::Realtime::Serialization::ReadStream::ReadRawModel(::Normal::Realtime::Serialization::IStreamReader* model, ::Normal::Realtime::Serialization::StreamContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadRawModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(model), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, model, context);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.StartLengthDelimitedStruct
void Normal::Realtime::Serialization::ReadStream::StartLengthDelimitedStruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::StartLengthDelimitedStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLengthDelimitedStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.ReadStructFloat
float Normal::Realtime::Serialization::ReadStream::ReadStructFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::ReadStructFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadStructFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.ReadStream.FinishLengthDelimitedStruct
void Normal::Realtime::Serialization::ReadStream::FinishLengthDelimitedStruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ReadStream::FinishLengthDelimitedStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishLengthDelimitedStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.Serialization
#include "Normal/Realtime/Serialization/Serialization.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 WireTypeBitLength
int Normal::Realtime::Serialization::Serialization::_get_WireTypeBitLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_get_WireTypeBitLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Normal.Realtime.Serialization", "Serialization", "WireTypeBitLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WireTypeBitLength
void Normal::Realtime::Serialization::Serialization::_set_WireTypeBitLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_set_WireTypeBitLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization", "WireTypeBitLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 WireTypeBitMask
uint Normal::Realtime::Serialization::Serialization::_get_WireTypeBitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_get_WireTypeBitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Normal.Realtime.Serialization", "Serialization", "WireTypeBitMask"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 WireTypeBitMask
void Normal::Realtime::Serialization::Serialization::_set_WireTypeBitMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_set_WireTypeBitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization", "WireTypeBitMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 PropertyIDMaxValue
uint Normal::Realtime::Serialization::Serialization::_get_PropertyIDMaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_get_PropertyIDMaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Normal.Realtime.Serialization", "Serialization", "PropertyIDMaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 PropertyIDMaxValue
void Normal::Realtime::Serialization::Serialization::_set_PropertyIDMaxValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::_set_PropertyIDMaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization", "PropertyIDMaxValue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Null
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Null
void Normal::Realtime::Serialization::Serialization::WireType::_set_Null(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Varint
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Varint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Varint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Varint"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Varint
void Normal::Realtime::Serialization::Serialization::WireType::_set_Varint(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Varint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Varint", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Float
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Float
void Normal::Realtime::Serialization::Serialization::WireType::_set_Float(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Double
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Double
void Normal::Realtime::Serialization::Serialization::WireType::_set_Double(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType LengthDelimited
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_LengthDelimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_LengthDelimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "LengthDelimited"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType LengthDelimited
void Normal::Realtime::Serialization::Serialization::WireType::_set_LengthDelimited(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_LengthDelimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "LengthDelimited", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Model
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Model");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Model"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Model
void Normal::Realtime::Serialization::Serialization::WireType::_set_Model(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Model");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Model", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Collection
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Collection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Collection"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Collection
void Normal::Realtime::Serialization::Serialization::WireType::_set_Collection(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Collection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Collection", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Reference
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Reference
void Normal::Realtime::Serialization::Serialization::WireType::_set_Reference(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Bounds
::Normal::Realtime::Serialization::Serialization::WireType Normal::Realtime::Serialization::Serialization::WireType::_get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_get_Bounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Normal::Realtime::Serialization::Serialization::WireType>("Normal.Realtime.Serialization", "Serialization/WireType", "Bounds"));
}
// Autogenerated static field setter
// Set static field: static public Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType Bounds
void Normal::Realtime::Serialization::Serialization::WireType::_set_Bounds(::Normal::Realtime::Serialization::Serialization::WireType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::_set_Bounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Normal.Realtime.Serialization", "Serialization/WireType", "Bounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& Normal::Realtime::Serialization::Serialization::WireType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::Serialization::WireType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.SerializationException
#include "Normal/Realtime/Serialization/SerializationException.hpp"
// Including type: Normal.Realtime.Serialization.Serialization/Normal.Realtime.Serialization.WireType
#include "Normal/Realtime/Serialization/Serialization_WireType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.WriteStreamWriteInvalidPropertyID
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::WriteStreamWriteInvalidPropertyID(uint propertyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::WriteStreamWriteInvalidPropertyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "WriteStreamWriteInvalidPropertyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyID);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.WriteBufferLengthExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::WriteBufferLengthExceeded(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::WriteBufferLengthExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "WriteBufferLengthExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ModelLengthCalculatedIncorrectly
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ModelLengthCalculatedIncorrectly(::System::Type* modelType, int actualLength, int calculatedLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ModelLengthCalculatedIncorrectly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ModelLengthCalculatedIncorrectly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modelType), ::il2cpp_utils::ExtractType(actualLength), ::il2cpp_utils::ExtractType(calculatedLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, modelType, actualLength, calculatedLength);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.NegativeModelWriteLength
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::NegativeModelWriteLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::NegativeModelWriteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "NegativeModelWriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadBufferLengthExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadBufferLengthExceeded(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadBufferLengthExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadBufferLengthExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadLengthDelimitedBufferLengthExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadLengthDelimitedBufferLengthExceeded(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadLengthDelimitedBufferLengthExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadLengthDelimitedBufferLengthExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadModelBufferLengthIncorrect
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadModelBufferLengthIncorrect(int readLength, int expectedLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadModelBufferLengthIncorrect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadModelBufferLengthIncorrect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readLength), ::il2cpp_utils::ExtractType(expectedLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, readLength, expectedLength);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.RecursionLevelLimitExceeded
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::RecursionLevelLimitExceeded(uint recursionLevelLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::RecursionLevelLimitExceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "RecursionLevelLimitExceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursionLevelLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recursionLevelLimit);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.InvalidVarint
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::InvalidVarint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::InvalidVarint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "InvalidVarint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.ReadInvalidType
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::ReadInvalidType(::Normal::Realtime::Serialization::Serialization::WireType expectedWireType, ::Normal::Realtime::Serialization::Serialization::WireType wireType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::ReadInvalidType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "ReadInvalidType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedWireType), ::il2cpp_utils::ExtractType(wireType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedWireType, wireType);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.NegativeLengthDelimitedReadLength
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::NegativeLengthDelimitedReadLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::NegativeLengthDelimitedReadLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "NegativeLengthDelimitedReadLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.NegativeModelReadLength
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::NegativeModelReadLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::NegativeModelReadLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "NegativeModelReadLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.SuppliedBufferNotLargeEnough
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::SuppliedBufferNotLargeEnough(int length, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::SuppliedBufferNotLargeEnough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "SuppliedBufferNotLargeEnough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length, maxLength);
}
// Autogenerated method: Normal.Realtime.Serialization.SerializationException.MetaModelSuppliedMismatchedModelType
::Normal::Realtime::Serialization::SerializationException* Normal::Realtime::Serialization::SerializationException::MetaModelSuppliedMismatchedModelType(uint serverModelType, uint localModelType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::SerializationException::MetaModelSuppliedMismatchedModelType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "SerializationException", "MetaModelSuppliedMismatchedModelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverModelType), ::il2cpp_utils::ExtractType(localModelType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Normal::Realtime::Serialization::SerializationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serverModelType, localModelType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ByteFloat
#include "Normal/Realtime/Serialization/ByteFloat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single value
float& Normal::Realtime::Serialization::ByteFloat::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 bytes
uint& Normal::Realtime::Serialization::ByteFloat::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::dyn_bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteFloat.Reinterpret
float Normal::Realtime::Serialization::ByteFloat::Reinterpret(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteFloat", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteFloat.Reinterpret
uint Normal::Realtime::Serialization::ByteFloat::Reinterpret(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteFloat::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteFloat", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ByteDouble
#include "Normal/Realtime/Serialization/ByteDouble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double value
double& Normal::Realtime::Serialization::ByteDouble::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 bytes
uint64_t& Normal::Realtime::Serialization::ByteDouble::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::dyn_bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteDouble.Reinterpret
double Normal::Realtime::Serialization::ByteDouble::Reinterpret(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteDouble", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ByteDouble.Reinterpret
uint64_t Normal::Realtime::Serialization::ByteDouble::Reinterpret(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ByteDouble::Reinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ByteDouble", "Reinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ArraySerializers
#include "Normal/Realtime/Serialization/ArraySerializers.hpp"
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer
#include "Normal/Realtime/Serialization/ArraySerializers_StringSerializer.hpp"
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer
#include "Normal/Realtime/Serialization/ArraySerializers_ByteArraySerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers.Register
void Normal::Realtime::Serialization::ArraySerializers::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "ArraySerializers", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer
#include "Normal/Realtime/Serialization/ArraySerializers_StringSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer.Length
int Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Length(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer.Write
void Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.StringSerializer.Read
void Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::StringSerializer::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer
#include "Normal/Realtime/Serialization/ArraySerializers_ByteArraySerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer.Length
int Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Length(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer.Write
void Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.ArraySerializers/Normal.Realtime.Serialization.ByteArraySerializer.Read
void Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<::ArrayW<uint8_t>> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::ArraySerializers::ByteArraySerializer::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(bytes));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.PrimitiveSerializers
#include "Normal/Realtime/Serialization/PrimitiveSerializers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.PrimitiveSerializers.Register
void Normal::Realtime::Serialization::PrimitiveSerializers::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::PrimitiveSerializers::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Normal.Realtime.Serialization", "PrimitiveSerializers", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Normal.Realtime.Serialization.BoolSerializer
#include "Normal/Realtime/Serialization/BoolSerializer.hpp"
// Including type: Normal.Realtime.Serialization.WriteStream
#include "Normal/Realtime/Serialization/WriteStream.hpp"
// Including type: Normal.Realtime.Serialization.ReadStream
#include "Normal/Realtime/Serialization/ReadStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Normal.Realtime.Serialization.BoolSerializer.Length
int Normal::Realtime::Serialization::BoolSerializer::Length(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BoolSerializer::Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Normal.Realtime.Serialization.BoolSerializer.Write
void Normal::Realtime::Serialization::BoolSerializer::Write(ByRef<::Normal::Realtime::Serialization::WriteStream*> stream, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BoolSerializer::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: Normal.Realtime.Serialization.BoolSerializer.Read
void Normal::Realtime::Serialization::BoolSerializer::Read(ByRef<::Normal::Realtime::Serialization::ReadStream*> stream, ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Normal::Realtime::Serialization::BoolSerializer::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(value));
}
