// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: System.Text
namespace System::Text {
  // Forward declaring type: EncodingProvider
  class EncodingProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Text::EncodingProvider);
DEFINE_IL2CPP_ARG_TYPE(::System::Text::EncodingProvider*, "System.Text", "EncodingProvider");
// Type namespace: System.Text
namespace System::Text {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Text.EncodingProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 6C7854
  class EncodingProvider : public ::Il2CppObject {
    public:
    // Get static field: static private System.Object s_InternalSyncObject
    static ::Il2CppObject* _get_s_InternalSyncObject();
    // Set static field: static private System.Object s_InternalSyncObject
    static void _set_s_InternalSyncObject(::Il2CppObject* value);
    // Get static field: static private System.Text.EncodingProvider[] s_providers
    static ::ArrayW<::System::Text::EncodingProvider*> _get_s_providers();
    // Set static field: static private System.Text.EncodingProvider[] s_providers
    static void _set_s_providers(::ArrayW<::System::Text::EncodingProvider*> value);
    // static private System.Void .cctor()
    // Offset: 0xD02610
    static void _cctor();
    // public System.Text.Encoding GetEncoding(System.String name)
    // Offset: 0xFFFFFFFF
    ::System::Text::Encoding* GetEncoding(::StringW name);
    // public System.Text.Encoding GetEncoding(System.Int32 codepage)
    // Offset: 0xFFFFFFFF
    ::System::Text::Encoding* GetEncoding(int codepage);
    // static System.Text.Encoding GetEncodingFromProvider(System.Int32 codepage)
    // Offset: 0xD02408
    static ::System::Text::Encoding* GetEncodingFromProvider(int codepage);
    // static System.Text.Encoding GetEncodingFromProvider(System.String encodingName)
    // Offset: 0xD0250C
    static ::System::Text::Encoding* GetEncodingFromProvider(::StringW encodingName);
  }; // System.Text.EncodingProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Text::EncodingProvider::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Text::EncodingProvider::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::EncodingProvider*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::EncodingProvider::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (System::Text::EncodingProvider::*)(::StringW)>(&System::Text::EncodingProvider::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::EncodingProvider*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Text::EncodingProvider::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (System::Text::EncodingProvider::*)(int)>(&System::Text::EncodingProvider::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* codepage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::EncodingProvider*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{codepage});
  }
};
// Writing MetadataGetter for method: System::Text::EncodingProvider::GetEncodingFromProvider
// Il2CppName: GetEncodingFromProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(int)>(&System::Text::EncodingProvider::GetEncodingFromProvider)> {
  static const MethodInfo* get() {
    static auto* codepage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::EncodingProvider*), "GetEncodingFromProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{codepage});
  }
};
// Writing MetadataGetter for method: System::Text::EncodingProvider::GetEncodingFromProvider
// Il2CppName: GetEncodingFromProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(::StringW)>(&System::Text::EncodingProvider::GetEncodingFromProvider)> {
  static const MethodInfo* get() {
    static auto* encodingName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::EncodingProvider*), "GetEncodingFromProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encodingName});
  }
};
