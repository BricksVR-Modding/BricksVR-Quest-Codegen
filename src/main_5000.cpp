// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit2D
#include "UnityEngine/RaycastHit2D.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Centroid
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Centroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Centroid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Centroid"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Fraction
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Fraction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit2D::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_point
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_normal
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_distance
float UnityEngine::RaycastHit2D::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_fraction
float UnityEngine::RaycastHit2D::get_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_fraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_fraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_collider
::UnityEngine::Collider2D* UnityEngine::RaycastHit2D::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyConstraints
#include "UnityEngine/RigidbodyConstraints.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints None
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints None
void UnityEngine::RigidbodyConstraints::_set_None(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionX
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionX
void UnityEngine::RigidbodyConstraints::_set_FreezePositionX(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionY
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionY
void UnityEngine::RigidbodyConstraints::_set_FreezePositionY(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePositionZ
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePositionZ
void UnityEngine::RigidbodyConstraints::_set_FreezePositionZ(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationX
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotationX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationX
void UnityEngine::RigidbodyConstraints::_set_FreezeRotationX(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotationX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationY
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotationY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationY
void UnityEngine::RigidbodyConstraints::_set_FreezeRotationY(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotationY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotationZ
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotationZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotationZ
void UnityEngine::RigidbodyConstraints::_set_FreezeRotationZ(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotationZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezePosition
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezePosition
void UnityEngine::RigidbodyConstraints::_set_FreezePosition(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeRotation
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeRotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeRotation
void UnityEngine::RigidbodyConstraints::_set_FreezeRotation(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeRotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyConstraints FreezeAll
::UnityEngine::RigidbodyConstraints UnityEngine::RigidbodyConstraints::_get_FreezeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_get_FreezeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyConstraints>("UnityEngine", "RigidbodyConstraints", "FreezeAll"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyConstraints FreezeAll
void UnityEngine::RigidbodyConstraints::_set_FreezeAll(::UnityEngine::RigidbodyConstraints value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::_set_FreezeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyConstraints", "FreezeAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyConstraints::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyConstraints::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Force
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Force
void UnityEngine::ForceMode::_set_Force(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Force", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Acceleration
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Acceleration
void UnityEngine::ForceMode::_set_Acceleration(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Impulse
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Impulse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Impulse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Impulse
void UnityEngine::ForceMode::_set_Impulse(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Impulse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Impulse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode VelocityChange
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_VelocityChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_VelocityChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "VelocityChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode VelocityChange
void UnityEngine::ForceMode::_set_VelocityChange(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_VelocityChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "VelocityChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ForceMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Impulse
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Collision::dyn_m_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Impulse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Impulse"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_RelativeVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Collision::dyn_m_RelativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_RelativeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RelativeVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Rigidbody m_Rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& UnityEngine::Collision::dyn_m_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Collider m_Collider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& UnityEngine::Collision::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ContactCount
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision::dyn_m_ContactCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_ContactCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContactCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ContactPoint[] m_ReusedContacts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ContactPoint>& UnityEngine::Collision::dyn_m_ReusedContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_ReusedContacts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReusedContacts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ContactPoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ContactPoint[] m_LegacyContacts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ContactPoint>& UnityEngine::Collision::dyn_m_LegacyContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_LegacyContacts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LegacyContacts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ContactPoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Collision.get_relativeVelocity
::UnityEngine::Vector3 UnityEngine::Collision::get_relativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_relativeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_rigidbody
::UnityEngine::Rigidbody* UnityEngine::Collision::get_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_collider
::UnityEngine::Collider* UnityEngine::Collision::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_transform
::UnityEngine::Transform* UnityEngine::Collision::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_gameObject
::UnityEngine::GameObject* UnityEngine::Collision::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags None
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags None
void UnityEngine::CollisionFlags::_set_None(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Sides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Sides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Sides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Sides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Sides
void UnityEngine::CollisionFlags::_set_Sides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Sides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Sides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Above
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Above() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Above");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Above"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Above
void UnityEngine::CollisionFlags::_set_Above(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Above");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Above", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Below
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Below() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Below");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Below"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Below
void UnityEngine::CollisionFlags::_set_Below(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Below");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Below", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedSides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedSides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedSides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedSides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedSides
void UnityEngine::CollisionFlags::_set_CollidedSides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedSides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedSides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedAbove
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedAbove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedAbove"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedAbove
void UnityEngine::CollisionFlags::_set_CollidedAbove(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedAbove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedAbove", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedBelow
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedBelow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedBelow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedBelow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedBelow
void UnityEngine::CollisionFlags::_set_CollidedBelow(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedBelow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedBelow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_UseGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_UseGlobal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "UseGlobal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
void UnityEngine::QueryTriggerInteraction::_set_UseGlobal(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_UseGlobal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "UseGlobal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Ignore
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Ignore
void UnityEngine::QueryTriggerInteraction::_set_Ignore(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Collide
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Collide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Collide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Collide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Collide
void UnityEngine::QueryTriggerInteraction::_set_Collide(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Collide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Collide", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::QueryTriggerInteraction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Discrete
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Discrete
void UnityEngine::CollisionDetectionMode::_set_Discrete(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Continuous
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Continuous
void UnityEngine::CollisionDetectionMode::_set_Continuous(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Continuous", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
void UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
void UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionDetectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_FaceID
[[deprecated("Use field access instead!")]] uint& UnityEngine::RaycastHit::dyn_m_FaceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_FaceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FaceID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector2 m_UV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit::dyn_m_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_UV");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit.get_collider
::UnityEngine::Collider* UnityEngine::RaycastHit::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_point
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_normal
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_distance
float UnityEngine::RaycastHit::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_transform
::UnityEngine::Transform* UnityEngine::RaycastHit::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_rigidbody
::UnityEngine::Rigidbody* UnityEngine::RaycastHit::get_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody.get_velocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity
void UnityEngine::Rigidbody::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularVelocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity
void UnityEngine::Rigidbody::set_angularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_drag
float UnityEngine::Rigidbody::get_drag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_drag
void UnityEngine::Rigidbody::set_drag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularDrag
float UnityEngine::Rigidbody::get_angularDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularDrag
void UnityEngine::Rigidbody::set_angularDrag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_mass
void UnityEngine::Rigidbody::set_mass(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_useGravity
bool UnityEngine::Rigidbody::get_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_useGravity
void UnityEngine::Rigidbody::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_isKinematic
bool UnityEngine::Rigidbody::get_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_isKinematic
void UnityEngine::Rigidbody::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_collisionDetectionMode
void UnityEngine::Rigidbody::set_collisionDetectionMode(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_collisionDetectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_collisionDetectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_worldCenterOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.get_position
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_position
void UnityEngine::Rigidbody::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_rotation
::UnityEngine::Quaternion UnityEngine::Rigidbody::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation
void UnityEngine::Rigidbody::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_maxAngularVelocity
void UnityEngine::Rigidbody::set_maxAngularVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_maxAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition
void UnityEngine::Rigidbody::MovePosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation
void UnityEngine::Rigidbody::MoveRotation(::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rot);
}
// Autogenerated method: UnityEngine.Rigidbody.Sleep
void UnityEngine::Rigidbody::Sleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Sleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.IsSleeping
bool UnityEngine::Rigidbody::IsSleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::IsSleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(::UnityEngine::Vector3 torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, torque, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce
void UnityEngine::Rigidbody::AddExplosionForce(float explosionForce, ::UnityEngine::Vector3 explosionPosition, float explosionRadius, float upwardsModifier, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius), ::il2cpp_utils::ExtractType(upwardsModifier), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, explosionPosition, explosionRadius, upwardsModifier, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.get_velocity_Injected
void UnityEngine::Rigidbody::get_velocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity_Injected
void UnityEngine::Rigidbody::set_velocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularVelocity_Injected
void UnityEngine::Rigidbody::get_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity_Injected
void UnityEngine::Rigidbody::set_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass_Injected
void UnityEngine::Rigidbody::get_worldCenterOfMass_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.get_position_Injected
void UnityEngine::Rigidbody::get_position_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_position_Injected
void UnityEngine::Rigidbody::set_position_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_rotation_Injected
void UnityEngine::Rigidbody::get_rotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation_Injected
void UnityEngine::Rigidbody::set_rotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition_Injected
void UnityEngine::Rigidbody::MovePosition_Injected(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation_Injected
void UnityEngine::Rigidbody::MoveRotation_Injected(ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(rot));
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque_Injected
void UnityEngine::Rigidbody::AddTorque_Injected(ByRef<::UnityEngine::Vector3> torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(torque), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce_Injected
void UnityEngine::Rigidbody::AddExplosionForce_Injected(float explosionForce, ByRef<::UnityEngine::Vector3> explosionPosition, float explosionRadius, float upwardsModifier, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius), ::il2cpp_utils::ExtractType(upwardsModifier), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, byref(explosionPosition), explosionRadius, upwardsModifier, mode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Collider.set_enabled
void UnityEngine::Collider::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.get_attachedRigidbody
::UnityEngine::Rigidbody* UnityEngine::Collider::get_attachedRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_attachedRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachedRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.get_isTrigger
bool UnityEngine::Collider::get_isTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_isTrigger
void UnityEngine::Collider::set_isTrigger(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds
void UnityEngine::Collider::Internal_ClosestPointOnBounds(::UnityEngine::Vector3 point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, byref(outPos), byref(distance));
}
// Autogenerated method: UnityEngine.Collider.ClosestPointOnBounds
::UnityEngine::Vector3 UnityEngine::Collider::ClosestPointOnBounds(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds_Injected
void UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(outPos), byref(distance));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CharacterController.get_isGrounded
bool UnityEngine::CharacterController::get_isGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_height
float UnityEngine::CharacterController::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_center
::UnityEngine::Vector3 UnityEngine::CharacterController::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_stepOffset
float UnityEngine::CharacterController::get_stepOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_stepOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.Move
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move(::UnityEngine::Vector3 motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, motion);
}
// Autogenerated method: UnityEngine.CharacterController.Move_Injected
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move_Injected(ByRef<::UnityEngine::Vector3> motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, byref(motion));
}
// Autogenerated method: UnityEngine.CharacterController.get_center_Injected
void UnityEngine::CharacterController::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MeshCollider.set_sharedMesh
void UnityEngine::MeshCollider::set_sharedMesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CapsuleCollider.get_center
::UnityEngine::Vector3 UnityEngine::CapsuleCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center
void UnityEngine::CapsuleCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_radius
float UnityEngine::CapsuleCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_radius
void UnityEngine::CapsuleCollider::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_height
float UnityEngine::CapsuleCollider::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_height
void UnityEngine::CapsuleCollider::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_direction
void UnityEngine::CapsuleCollider::set_direction(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_center_Injected
void UnityEngine::CapsuleCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center_Injected
void UnityEngine::CapsuleCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BoxCollider.get_center
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_center
void UnityEngine::BoxCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_size
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_size
void UnityEngine::BoxCollider::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_center_Injected
void UnityEngine::BoxCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_center_Injected
void UnityEngine::BoxCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.BoxCollider.get_size_Injected
void UnityEngine::BoxCollider::get_size_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_size_Injected
void UnityEngine::BoxCollider::set_size_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SphereCollider.get_radius
float UnityEngine::SphereCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicsScene::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::UnityEngine::PhysicsScene other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::PhysicsScene), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest
bool UnityEngine::PhysicsScene::Internal_RaycastTest(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast
bool UnityEngine::PhysicsScene::Internal_Raycast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
int UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, raycastHits, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast
bool UnityEngine::PhysicsScene::Query_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_CapsuleCast
bool UnityEngine::PhysicsScene::Internal_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.CapsuleCast
bool UnityEngine::PhysicsScene::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast
bool UnityEngine::PhysicsScene::Query_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCast
bool UnityEngine::PhysicsScene::Internal_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.SphereCast
bool UnityEngine::PhysicsScene::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCastNonAlloc
int UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.SphereCast
int UnityEngine::PhysicsScene::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapSphereNonAlloc_Internal
int UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapSphereNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapSphere
int UnityEngine::PhysicsScene::OverlapSphere(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBox
int UnityEngine::PhysicsScene::OverlapBox(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, center, halfExtents, results, orientation, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest_Injected
bool UnityEngine::PhysicsScene::Internal_RaycastTest_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast_Injected
bool UnityEngine::PhysicsScene::Internal_Raycast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast_Injected
bool UnityEngine::PhysicsScene::Query_CapsuleCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> point1, ByRef<::UnityEngine::Vector3> point2, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_CapsuleCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point1), byref(point2), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast_Injected
bool UnityEngine::PhysicsScene::Query_SphereCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_SphereCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_SphereCastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapSphereNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapSphereNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapSphereNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ByRef<::UnityEngine::Quaternion> orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(center), byref(halfExtents), results, byref(orientation), mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.ToString
::StringW UnityEngine::PhysicsScene::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.GetHashCode
int UnityEngine::PhysicsScene::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Physics
#include "UnityEngine/Physics.hpp"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Physics.get_gravity
::UnityEngine::Vector3 UnityEngine::Physics::get_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.set_gravity
void UnityEngine::Physics::set_gravity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene
::UnityEngine::PhysicsScene UnityEngine::Physics::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2, ignore);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal
bool UnityEngine::Physics::CheckSphere_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.SphereCastNonAlloc
int UnityEngine::Physics::SphereCastNonAlloc(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal
bool UnityEngine::Physics::CheckCapsule_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckBox_Internal
bool UnityEngine::Physics::CheckBox_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Quaternion orientation, int layermask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckBox_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckBox_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layermask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, orientation, layermask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckBox
bool UnityEngine::Physics::CheckBox(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Quaternion orientation, int layermask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layermask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, orientation, layermask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation);
}
// Autogenerated method: UnityEngine.Physics.get_gravity_Injected
void UnityEngine::Physics::get_gravity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.set_gravity_Injected
void UnityEngine::Physics::set_gravity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene_Injected
void UnityEngine::Physics::get_defaultPhysicsScene_Injected(ByRef<::UnityEngine::PhysicsScene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::PhysicsScene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal_Injected
bool UnityEngine::Physics::CheckSphere_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal_Injected
bool UnityEngine::Physics::CheckCapsule_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(start), byref(end), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckBox_Internal_Injected
bool UnityEngine::Physics::CheckBox_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> halfExtents, ByRef<::UnityEngine::Quaternion> orientation, int layermask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckBox_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckBox_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layermask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(center), byref(halfExtents), byref(orientation), layermask, queryTriggerInteraction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetFileNameExtensionAttribute
#include "UnityEngine/AssetFileNameExtensionAttribute.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <preferredExtension>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AssetFileNameExtensionAttribute::dyn_$preferredExtension$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetFileNameExtensionAttribute::dyn_$preferredExtension$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<preferredExtension>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IEnumerable`1<System.String> <otherExtensions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& UnityEngine::AssetFileNameExtensionAttribute::dyn_$otherExtensions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetFileNameExtensionAttribute::dyn_$otherExtensions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<otherExtensions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ThreadAndSerializationSafeAttribute
#include "UnityEngine/ThreadAndSerializationSafeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WritableAttribute
#include "UnityEngine/WritableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityEngineModuleAssembly
#include "UnityEngine/UnityEngineModuleAssembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.NativeClassAttribute
#include "UnityEngine/NativeClassAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <QualifiedNativeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::NativeClassAttribute::dyn_$QualifiedNativeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::dyn_$QualifiedNativeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QualifiedNativeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Declaration>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::NativeClassAttribute::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.NativeClassAttribute.set_QualifiedNativeName
void UnityEngine::NativeClassAttribute::set_QualifiedNativeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::set_QualifiedNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QualifiedNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.NativeClassAttribute.set_Declaration
void UnityEngine::NativeClassAttribute::set_Declaration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::set_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnityString
#include "UnityEngine/UnityString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnityString.Format
::StringW UnityEngine::UnityString::Format(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityString::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityString", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fmt, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.VisibleToOtherModulesAttribute
#include "UnityEngine/Bindings/VisibleToOtherModulesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeConditionalAttribute
#include "UnityEngine/Bindings/NativeConditionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Condition>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Condition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Condition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Condition>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <StubReturnStatement>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$StubReturnStatement$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$StubReturnStatement$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StubReturnStatement>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Enabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Enabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Enabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Enabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Condition
void UnityEngine::Bindings::NativeConditionalAttribute::set_Condition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_StubReturnStatement
void UnityEngine::Bindings::NativeConditionalAttribute::set_StubReturnStatement(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_StubReturnStatement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StubReturnStatement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Enabled
void UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeHeaderAttribute
#include "UnityEngine/Bindings/NativeHeaderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Header>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeHeaderAttribute::dyn_$Header$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeHeaderAttribute::dyn_$Header$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Header>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeHeaderAttribute.set_Header
void UnityEngine::Bindings::NativeHeaderAttribute::set_Header(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeHeaderAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeHeaderAttribute*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeNameAttribute
#include "UnityEngine/Bindings/NativeNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeNameAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeNameAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeNameAttribute.set_Name
void UnityEngine::Bindings::NativeNameAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeNameAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeNameAttribute*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeWritableSelfAttribute
#include "UnityEngine/Bindings/NativeWritableSelfAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WritableSelf>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeWritableSelfAttribute::dyn_$WritableSelf$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeWritableSelfAttribute::dyn_$WritableSelf$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WritableSelf>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeWritableSelfAttribute.set_WritableSelf
void UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeWritableSelfAttribute*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeMethodAttribute
#include "UnityEngine/Bindings/NativeMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeMethodAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsThreadSafe>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsThreadSafe$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsThreadSafe$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsThreadSafe>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsFreeFunction>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsFreeFunction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsFreeFunction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsFreeFunction>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ThrowsException>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$ThrowsException$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$ThrowsException$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowsException>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasExplicitThis>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$HasExplicitThis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$HasExplicitThis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasExplicitThis>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_Name
void UnityEngine::Bindings::NativeMethodAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsThreadSafe
void UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsFreeFunction
void UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_HasExplicitThis
void UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.TargetType
#include "UnityEngine/Bindings/TargetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Function
::UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Function
void UnityEngine::Bindings::TargetType::_set_Function(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Function", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Field
::UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Field"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Field
void UnityEngine::Bindings::TargetType::_set_Field(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Field", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::TargetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativePropertyAttribute
#include "UnityEngine/Bindings/NativePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.TargetType <TargetType>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::TargetType& UnityEngine::Bindings::NativePropertyAttribute::dyn_$TargetType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativePropertyAttribute::dyn_$TargetType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TargetType>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::TargetType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativePropertyAttribute.set_TargetType
void UnityEngine::Bindings::NativePropertyAttribute::set_TargetType(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativePropertyAttribute::set_TargetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.CodegenOptions
#include "UnityEngine/Bindings/CodegenOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Auto
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Auto
void UnityEngine::Bindings::CodegenOptions::_set_Auto(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Custom
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Custom
void UnityEngine::Bindings::CodegenOptions::_set_Custom(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Force
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Force
void UnityEngine::Bindings::CodegenOptions::_set_Force(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Force", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::CodegenOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeAsStructAttribute
#include "UnityEngine/Bindings/NativeAsStructAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeTypeAttribute
#include "UnityEngine/Bindings/NativeTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Header>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeTypeAttribute::dyn_$Header$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$Header$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Header>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <IntermediateScriptingStructName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeTypeAttribute::dyn_$IntermediateScriptingStructName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$IntermediateScriptingStructName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IntermediateScriptingStructName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.CodegenOptions <CodegenOptions>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::CodegenOptions& UnityEngine::Bindings::NativeTypeAttribute::dyn_$CodegenOptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$CodegenOptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CodegenOptions>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::CodegenOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_Header
void UnityEngine::Bindings::NativeTypeAttribute::set_Header(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeTypeAttribute*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_IntermediateScriptingStructName
void UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IntermediateScriptingStructName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_CodegenOptions
void UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeTypeAttribute*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NotNullAttribute
#include "UnityEngine/Bindings/NotNullAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.UnmarshalledAttribute
#include "UnityEngine/Bindings/UnmarshalledAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.FreeFunctionAttribute
#include "UnityEngine/Bindings/FreeFunctionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.ThreadSafeAttribute
#include "UnityEngine/Bindings/ThreadSafeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.StaticAccessorType
#include "UnityEngine/Bindings/StaticAccessorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Dot
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Dot
void UnityEngine::Bindings::StaticAccessorType::_set_Dot(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Arrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_Arrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Arrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
void UnityEngine::Bindings::StaticAccessorType::_set_Arrow(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_Arrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Arrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
void UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
void UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::StaticAccessorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.StaticAccessorAttribute
#include "UnityEngine/Bindings/StaticAccessorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.StaticAccessorType <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::StaticAccessorType& UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::StaticAccessorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Name
void UnityEngine::Bindings::StaticAccessorAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Type
void UnityEngine::Bindings::StaticAccessorAttribute::set_Type(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeThrowsAttribute
#include "UnityEngine/Bindings/NativeThrowsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ThrowsException>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeThrowsAttribute::dyn_$ThrowsException$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeThrowsAttribute::dyn_$ThrowsException$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowsException>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeThrowsAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeThrowsAttribute*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.IgnoreAttribute
#include "UnityEngine/Bindings/IgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DoesNotContributeToSize>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::IgnoreAttribute::dyn_$DoesNotContributeToSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::IgnoreAttribute::dyn_$DoesNotContributeToSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DoesNotContributeToSize>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.IgnoreAttribute.set_DoesNotContributeToSize
void UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DoesNotContributeToSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.UsedByNativeCodeAttribute
#include "UnityEngine/Scripting/UsedByNativeCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Scripting::UsedByNativeCodeAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::UsedByNativeCodeAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Scripting.UsedByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.RequiredByNativeCodeAttribute
#include "UnityEngine/Scripting/RequiredByNativeCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Optional>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Optional$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Optional$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Optional>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <GenerateProxy>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$GenerateProxy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$GenerateProxy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GenerateProxy>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Optional
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_GenerateProxy
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GenerateProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.TrackedPoseDriverDataDescription
#include "UnityEngine/SpatialTracking/TrackedPoseDriverDataDescription.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.SpatialTracking.TrackedPoseDriverDataDescription/UnityEngine.SpatialTracking.PoseData> DeviceData
::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::PoseData>* UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::_get_DeviceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::_get_DeviceData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::PoseData>*>("UnityEngine.SpatialTracking", "TrackedPoseDriverDataDescription", "DeviceData"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.SpatialTracking.TrackedPoseDriverDataDescription/UnityEngine.SpatialTracking.PoseData> DeviceData
void UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::_set_DeviceData(::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::PoseData>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::_set_DeviceData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriverDataDescription", "DeviceData", value));
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriverDataDescription..cctor
void UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriverDataDescription::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SpatialTracking", "TrackedPoseDriverDataDescription", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.PoseDataFlags
#include "UnityEngine/SpatialTracking/PoseDataFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.PoseDataFlags NoData
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::SpatialTracking::PoseDataFlags::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataFlags::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::PoseDataFlags>("UnityEngine.SpatialTracking", "PoseDataFlags", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.PoseDataFlags NoData
void UnityEngine::SpatialTracking::PoseDataFlags::_set_NoData(::UnityEngine::SpatialTracking::PoseDataFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataFlags::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "PoseDataFlags", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.PoseDataFlags Position
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::SpatialTracking::PoseDataFlags::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataFlags::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::PoseDataFlags>("UnityEngine.SpatialTracking", "PoseDataFlags", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.PoseDataFlags Position
void UnityEngine::SpatialTracking::PoseDataFlags::_set_Position(::UnityEngine::SpatialTracking::PoseDataFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataFlags::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "PoseDataFlags", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.PoseDataFlags Rotation
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::SpatialTracking::PoseDataFlags::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataFlags::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::PoseDataFlags>("UnityEngine.SpatialTracking", "PoseDataFlags", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.PoseDataFlags Rotation
void UnityEngine::SpatialTracking::PoseDataFlags::_set_Rotation(::UnityEngine::SpatialTracking::PoseDataFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataFlags::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "PoseDataFlags", "Rotation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpatialTracking::PoseDataFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.PoseDataSource
#include "UnityEngine/SpatialTracking/PoseDataSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.SpatialTracking.PoseDataFlags
#include "UnityEngine/SpatialTracking/PoseDataFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStates
::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* UnityEngine::SpatialTracking::PoseDataSource::_get_nodeStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataSource::_get_nodeStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.SpatialTracking", "PoseDataSource", "nodeStates"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStates
void UnityEngine::SpatialTracking::PoseDataSource::_set_nodeStates(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataSource::_set_nodeStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "PoseDataSource", "nodeStates", value));
}
// Autogenerated method: UnityEngine.SpatialTracking.PoseDataSource..cctor
void UnityEngine::SpatialTracking::PoseDataSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SpatialTracking", "PoseDataSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.PoseDataSource.GetNodePoseData
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::SpatialTracking::PoseDataSource::GetNodePoseData(::UnityEngine::XR::XRNode node, ByRef<::UnityEngine::Pose> resultPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataSource::GetNodePoseData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SpatialTracking", "PoseDataSource", "GetNodePoseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::PoseDataFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, byref(resultPose));
}
// Autogenerated method: UnityEngine.SpatialTracking.PoseDataSource.TryGetDataFromSource
bool UnityEngine::SpatialTracking::PoseDataSource::TryGetDataFromSource(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose poseSource, ByRef<::UnityEngine::Pose> resultPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataSource::TryGetDataFromSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SpatialTracking", "PoseDataSource", "TryGetDataFromSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseSource), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, poseSource, byref(resultPose));
}
// Autogenerated method: UnityEngine.SpatialTracking.PoseDataSource.GetDataFromSource
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::SpatialTracking::PoseDataSource::GetDataFromSource(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose poseSource, ByRef<::UnityEngine::Pose> resultPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataSource::GetDataFromSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SpatialTracking", "PoseDataSource", "GetDataFromSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseSource), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::PoseDataFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, poseSource, byref(resultPose));
}
// Autogenerated method: UnityEngine.SpatialTracking.PoseDataSource.TryGetTangoPose
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::SpatialTracking::PoseDataSource::TryGetTangoPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::PoseDataSource::TryGetTangoPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SpatialTracking", "PoseDataSource", "TryGetTangoPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::PoseDataFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pose));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.TrackedPoseDriver
#include "UnityEngine/SpatialTracking/TrackedPoseDriver.hpp"
// Including type: UnityEngine.Experimental.XR.Interaction.BasePoseProvider
#include "UnityEngine/Experimental/XR/Interaction/BasePoseProvider.hpp"
// Including type: UnityEngine.SpatialTracking.PoseDataFlags
#include "UnityEngine/SpatialTracking/PoseDataFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType m_Device
[[deprecated("Use field access instead!")]] ::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType& UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_Device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Device"))->offset;
  return *reinterpret_cast<::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose m_PoseSource
[[deprecated("Use field access instead!")]] ::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose& UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_PoseSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_PoseSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PoseSource"))->offset;
  return *reinterpret_cast<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.Interaction.BasePoseProvider m_PoseProviderComponent
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*& UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_PoseProviderComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_PoseProviderComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PoseProviderComponent"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::Interaction::BasePoseProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType m_TrackingType
[[deprecated("Use field access instead!")]] ::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType& UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_TrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_TrackingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackingType"))->offset;
  return *reinterpret_cast<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType m_UpdateType
[[deprecated("Use field access instead!")]] ::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType& UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_UpdateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_UpdateType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateType"))->offset;
  return *reinterpret_cast<::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseRelativeTransform
[[deprecated("Use field access instead!")]] bool& UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_UseRelativeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_UseRelativeTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseRelativeTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Pose m_OriginPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_OriginPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::dyn_m_OriginPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OriginPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.get_deviceType
::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType UnityEngine::SpatialTracking::TrackedPoseDriver::get_deviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::get_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.set_deviceType
void UnityEngine::SpatialTracking::TrackedPoseDriver::set_deviceType(::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::set_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.get_poseSource
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::get_poseSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::get_poseSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_poseSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.set_poseSource
void UnityEngine::SpatialTracking::TrackedPoseDriver::set_poseSource(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::set_poseSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_poseSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.get_poseProviderComponent
::UnityEngine::Experimental::XR::Interaction::BasePoseProvider* UnityEngine::SpatialTracking::TrackedPoseDriver::get_poseProviderComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::get_poseProviderComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_poseProviderComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.set_poseProviderComponent
void UnityEngine::SpatialTracking::TrackedPoseDriver::set_poseProviderComponent(::UnityEngine::Experimental::XR::Interaction::BasePoseProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::set_poseProviderComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_poseProviderComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.get_trackingType
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType UnityEngine::SpatialTracking::TrackedPoseDriver::get_trackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::get_trackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.set_trackingType
void UnityEngine::SpatialTracking::TrackedPoseDriver::set_trackingType(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::set_trackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.get_updateType
::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType UnityEngine::SpatialTracking::TrackedPoseDriver::get_updateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::get_updateType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.set_updateType
void UnityEngine::SpatialTracking::TrackedPoseDriver::set_updateType(::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::set_updateType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.get_UseRelativeTransform
bool UnityEngine::SpatialTracking::TrackedPoseDriver::get_UseRelativeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::get_UseRelativeTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseRelativeTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.set_UseRelativeTransform
void UnityEngine::SpatialTracking::TrackedPoseDriver::set_UseRelativeTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::set_UseRelativeTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseRelativeTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.get_originPose
::UnityEngine::Pose UnityEngine::SpatialTracking::TrackedPoseDriver::get_originPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::get_originPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_originPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.set_originPose
void UnityEngine::SpatialTracking::TrackedPoseDriver::set_originPose(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::set_originPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_originPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.SetPoseSource
bool UnityEngine::SpatialTracking::TrackedPoseDriver::SetPoseSource(::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType deviceType, ::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::SetPoseSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPoseSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceType), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, deviceType, pose);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.GetPoseData
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::SpatialTracking::TrackedPoseDriver::GetPoseData(::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType device, ::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose poseSource, ByRef<::UnityEngine::Pose> resultPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::GetPoseData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(poseSource), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::PoseDataFlags, false>(this, ___internal__method, device, poseSource, byref(resultPose));
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.CacheLocalPosition
void UnityEngine::SpatialTracking::TrackedPoseDriver::CacheLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::CacheLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.ResetToCachedLocalPosition
void UnityEngine::SpatialTracking::TrackedPoseDriver::ResetToCachedLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::ResetToCachedLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetToCachedLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.Awake
void UnityEngine::SpatialTracking::TrackedPoseDriver::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.OnDestroy
void UnityEngine::SpatialTracking::TrackedPoseDriver::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.OnEnable
void UnityEngine::SpatialTracking::TrackedPoseDriver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.OnDisable
void UnityEngine::SpatialTracking::TrackedPoseDriver::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.FixedUpdate
void UnityEngine::SpatialTracking::TrackedPoseDriver::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.Update
void UnityEngine::SpatialTracking::TrackedPoseDriver::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.OnBeforeRender
void UnityEngine::SpatialTracking::TrackedPoseDriver::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::OnBeforeRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.SetLocalTransform
void UnityEngine::SpatialTracking::TrackedPoseDriver::SetLocalTransform(::UnityEngine::Vector3 newPosition, ::UnityEngine::Quaternion newRotation, ::UnityEngine::SpatialTracking::PoseDataFlags poseFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::SetLocalTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPosition, newRotation, poseFlags);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.TransformPoseByOriginIfNeeded
::UnityEngine::Pose UnityEngine::SpatialTracking::TrackedPoseDriver::TransformPoseByOriginIfNeeded(::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TransformPoseByOriginIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoseByOriginIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, pose);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.HasStereoCamera
bool UnityEngine::SpatialTracking::TrackedPoseDriver::HasStereoCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::HasStereoCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasStereoCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpatialTracking.TrackedPoseDriver.PerformUpdate
void UnityEngine::SpatialTracking::TrackedPoseDriver::PerformUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::PerformUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SpatialTracking::TrackedPoseDriver*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType
#include "UnityEngine/SpatialTracking/TrackedPoseDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType GenericXRDevice
::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_get_GenericXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_get_GenericXRDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/DeviceType", "GenericXRDevice"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType GenericXRDevice
void UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_set_GenericXRDevice(::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_set_GenericXRDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/DeviceType", "GenericXRDevice", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType GenericXRController
::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_get_GenericXRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_get_GenericXRController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/DeviceType", "GenericXRController"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType GenericXRController
void UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_set_GenericXRController(::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_set_GenericXRController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/DeviceType", "GenericXRController", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType GenericXRRemote
::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_get_GenericXRRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_get_GenericXRRemote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/DeviceType", "GenericXRRemote"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.DeviceType GenericXRRemote
void UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_set_GenericXRRemote(::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::_set_GenericXRRemote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/DeviceType", "GenericXRRemote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::DeviceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose
#include "UnityEngine/SpatialTracking/TrackedPoseDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose LeftEye
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose LeftEye
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_LeftEye(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose RightEye
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose RightEye
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_RightEye(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose Center
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "Center"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose Center
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_Center(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose Head
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose Head
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_Head(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose LeftPose
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_LeftPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_LeftPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "LeftPose"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose LeftPose
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_LeftPose(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_LeftPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "LeftPose", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose RightPose
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_RightPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_RightPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "RightPose"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose RightPose
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_RightPose(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_RightPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "RightPose", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose ColorCamera
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_ColorCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_ColorCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "ColorCamera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose ColorCamera
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_ColorCamera(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_ColorCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "ColorCamera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose DepthCameraDeprecated
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_DepthCameraDeprecated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_DepthCameraDeprecated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "DepthCameraDeprecated"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose DepthCameraDeprecated
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_DepthCameraDeprecated(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_DepthCameraDeprecated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "DepthCameraDeprecated", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose FisheyeCameraDeprected
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_FisheyeCameraDeprected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_FisheyeCameraDeprected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "FisheyeCameraDeprected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose FisheyeCameraDeprected
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_FisheyeCameraDeprected(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_FisheyeCameraDeprected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "FisheyeCameraDeprected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose DeviceDeprecated
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_DeviceDeprecated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_DeviceDeprecated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "DeviceDeprecated"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose DeviceDeprecated
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_DeviceDeprecated(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_DeviceDeprecated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "DeviceDeprecated", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose RemotePose
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_RemotePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_get_RemotePose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "RemotePose"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackedPose RemotePose
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_RemotePose(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::_set_RemotePose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackedPose", "RemotePose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackedPose::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType
#include "UnityEngine/SpatialTracking/TrackedPoseDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType RotationAndPosition
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_get_RotationAndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_get_RotationAndPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackingType", "RotationAndPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType RotationAndPosition
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_set_RotationAndPosition(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_set_RotationAndPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackingType", "RotationAndPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType RotationOnly
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_get_RotationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_get_RotationOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackingType", "RotationOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType RotationOnly
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_set_RotationOnly(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_set_RotationOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackingType", "RotationOnly", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType PositionOnly
::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_get_PositionOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_get_PositionOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackingType", "PositionOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.TrackingType PositionOnly
void UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_set_PositionOnly(::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::_set_PositionOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/TrackingType", "PositionOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::TrackingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType
#include "UnityEngine/SpatialTracking/TrackedPoseDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType UpdateAndBeforeRender
::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_get_UpdateAndBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_get_UpdateAndBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/UpdateType", "UpdateAndBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType UpdateAndBeforeRender
void UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_set_UpdateAndBeforeRender(::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_set_UpdateAndBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/UpdateType", "UpdateAndBeforeRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType Update
::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/UpdateType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType Update
void UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_set_Update(::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/UpdateType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType BeforeRender
::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_get_BeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_get_BeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType>("UnityEngine.SpatialTracking", "TrackedPoseDriver/UpdateType", "BeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpatialTracking.TrackedPoseDriver/UnityEngine.SpatialTracking.UpdateType BeforeRender
void UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_set_BeforeRender(::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::_set_BeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SpatialTracking", "TrackedPoseDriver/UpdateType", "BeforeRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpatialTracking::TrackedPoseDriver::UpdateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.Interaction.BasePoseProvider
#include "UnityEngine/Experimental/XR/Interaction/BasePoseProvider.hpp"
// Including type: UnityEngine.SpatialTracking.PoseDataFlags
#include "UnityEngine/SpatialTracking/PoseDataFlags.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.XR.Interaction.BasePoseProvider.GetPoseFromProvider
::UnityEngine::SpatialTracking::PoseDataFlags UnityEngine::Experimental::XR::Interaction::BasePoseProvider::GetPoseFromProvider(ByRef<::UnityEngine::Pose> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Interaction::BasePoseProvider::GetPoseFromProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpatialTracking::PoseDataFlags, false>(this, ___internal__method, byref(output));
}
// Autogenerated method: UnityEngine.Experimental.XR.Interaction.BasePoseProvider.TryGetPoseFromProvider
bool UnityEngine::Experimental::XR::Interaction::BasePoseProvider::TryGetPoseFromProvider(ByRef<::UnityEngine::Pose> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Interaction::BasePoseProvider::TryGetPoseFromProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(output));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISubsystemDescriptor.get_id
::StringW UnityEngine::ISubsystemDescriptor::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISubsystemDescriptor::get_id");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISubsystemDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ISubsystemDescriptor.Create
::UnityEngine::ISubsystem* UnityEngine::ISubsystemDescriptor::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISubsystemDescriptor::Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISubsystemDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ISubsystem*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptorImpl
#include "UnityEngine/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::ISubsystemDescriptorImpl::set_ptr(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISubsystemDescriptorImpl::set_ptr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISubsystemDescriptorImpl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.IntegratedSubsystemDescriptor
#include "UnityEngine/IntegratedSubsystemDescriptor.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::IntegratedSubsystemDescriptor::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystemDescriptor::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.IntegratedSubsystemDescriptor.get_id
::StringW UnityEngine::IntegratedSubsystemDescriptor::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystemDescriptor::get_id");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystemDescriptor*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IntegratedSubsystemDescriptor.UnityEngine.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::IntegratedSubsystemDescriptor::UnityEngine_ISubsystemDescriptorImpl_set_ptr(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystemDescriptor::UnityEngine.ISubsystemDescriptorImpl.set_ptr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystemDescriptor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.IntegratedSubsystemDescriptor.UnityEngine.ISubsystemDescriptor.Create
::UnityEngine::ISubsystem* UnityEngine::IntegratedSubsystemDescriptor::UnityEngine_ISubsystemDescriptor_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystemDescriptor::UnityEngine.ISubsystemDescriptor.Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystemDescriptor*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ISubsystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IntegratedSubsystemDescriptor.CreateImpl
::UnityEngine::ISubsystem* UnityEngine::IntegratedSubsystemDescriptor::CreateImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystemDescriptor::CreateImpl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystemDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ISubsystem*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::SubsystemDescriptor::dyn_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemDescriptor::dyn_$id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SubsystemDescriptor.get_id
::StringW UnityEngine::SubsystemDescriptor::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemDescriptor::get_id");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SubsystemDescriptor*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemDescriptor.UnityEngine.ISubsystemDescriptor.Create
::UnityEngine::ISubsystem* UnityEngine::SubsystemDescriptor::UnityEngine_ISubsystemDescriptor_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemDescriptor::UnityEngine.ISubsystemDescriptor.Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SubsystemDescriptor*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ISubsystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemDescriptor.CreateImpl
::UnityEngine::ISubsystem* UnityEngine::SubsystemDescriptor::CreateImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemDescriptor::CreateImpl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::SubsystemDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ISubsystem*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Internal_SubsystemInstances
#include "UnityEngine/Internal_SubsystemInstances.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_IntegratedSubsystemInstances
::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* UnityEngine::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>*>("UnityEngine", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_IntegratedSubsystemInstances
void UnityEngine::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances(::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_StandaloneSubsystemInstances
::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* UnityEngine::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>*>("UnityEngine", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_StandaloneSubsystemInstances
void UnityEngine::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances(::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances", value));
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances..cctor
void UnityEngine::Internal_SubsystemInstances::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_InitializeManagedInstance
void UnityEngine::Internal_SubsystemInstances::Internal_InitializeManagedInstance(::System::IntPtr ptr, ::UnityEngine::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_InitializeManagedInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_InitializeManagedInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, inst);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_ClearManagedInstances
void UnityEngine::Internal_SubsystemInstances::Internal_ClearManagedInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_ClearManagedInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_ClearManagedInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_RemoveInstanceByPtr
void UnityEngine::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_RemoveInstanceByPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_GetInstanceByPtr
::UnityEngine::IntegratedSubsystem* UnityEngine::Internal_SubsystemInstances::Internal_GetInstanceByPtr(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_GetInstanceByPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_GetInstanceByPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::IntegratedSubsystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
// Including type: UnityEngine.Internal_SubsystemDescriptors
#include "UnityEngine/Internal_SubsystemDescriptors.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ISubsystemDescriptorImpl
#include "UnityEngine/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptorImpl*>* UnityEngine::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptorImpl*>*>("UnityEngine", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
void UnityEngine::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptorImpl*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptor*>* UnityEngine::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptor*>*>("UnityEngine", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
void UnityEngine::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors", value));
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors..cctor
void UnityEngine::Internal_SubsystemDescriptors::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_AddDescriptor
bool UnityEngine::Internal_SubsystemDescriptors::Internal_AddDescriptor(::UnityEngine::SubsystemDescriptor* descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::Internal_AddDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_AddDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, descriptor);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_InitializeManagedDescriptor
void UnityEngine::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor(::System::IntPtr ptr, ::UnityEngine::ISubsystemDescriptorImpl* desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_InitializeManagedDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(desc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, desc);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_ClearManagedDescriptors
void UnityEngine::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_ClearManagedDescriptors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Create
::System::IntPtr UnityEngine::Internal_SubsystemDescriptors::Create(::System::IntPtr descriptorPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptorPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, descriptorPtr);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.GetId
::StringW UnityEngine::Internal_SubsystemDescriptors::GetId(::System::IntPtr descriptorPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptorPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, descriptorPtr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.SubsystemManager
#include "UnityEngine/SubsystemManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xBB920
// Autogenerated static field getter
// Get static field: static private System.Action reloadSubsytemsStarted
::System::Action* UnityEngine::SubsystemManager::_get_reloadSubsytemsStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_get_reloadSubsytemsStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "SubsystemManager", "reloadSubsytemsStarted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action reloadSubsytemsStarted
void UnityEngine::SubsystemManager::_set_reloadSubsytemsStarted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_set_reloadSubsytemsStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SubsystemManager", "reloadSubsytemsStarted", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xBBA20
// Autogenerated static field getter
// Get static field: static private System.Action reloadSubsytemsCompleted
::System::Action* UnityEngine::SubsystemManager::_get_reloadSubsytemsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_get_reloadSubsytemsCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "SubsystemManager", "reloadSubsytemsCompleted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action reloadSubsytemsCompleted
void UnityEngine::SubsystemManager::_set_reloadSubsytemsCompleted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_set_reloadSubsytemsCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SubsystemManager", "reloadSubsytemsCompleted", value));
}
// Autogenerated method: UnityEngine.SubsystemManager..cctor
void UnityEngine::SubsystemManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.ReportSingleSubsystemAnalytics
void UnityEngine::SubsystemManager::ReportSingleSubsystemAnalytics(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::ReportSingleSubsystemAnalytics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "ReportSingleSubsystemAnalytics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: UnityEngine.SubsystemManager.DestroyInstance_Internal
void UnityEngine::SubsystemManager::DestroyInstance_Internal(::System::IntPtr instancePtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::DestroyInstance_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "DestroyInstance_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instancePtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instancePtr);
}
// Autogenerated method: UnityEngine.SubsystemManager.StaticConstructScriptingClassMap
void UnityEngine::SubsystemManager::StaticConstructScriptingClassMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::StaticConstructScriptingClassMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "StaticConstructScriptingClassMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.Internal_ReloadSubsystemsStarted
void UnityEngine::SubsystemManager::Internal_ReloadSubsystemsStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::Internal_ReloadSubsystemsStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "Internal_ReloadSubsystemsStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.Internal_ReloadSubsystemsCompleted
void UnityEngine::SubsystemManager::Internal_ReloadSubsystemsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::Internal_ReloadSubsystemsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "Internal_ReloadSubsystemsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISubsystem.Start
void UnityEngine::ISubsystem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISubsystem::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISubsystem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ISubsystem.Stop
void UnityEngine::ISubsystem::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISubsystem::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISubsystem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ISubsystem.Destroy
void UnityEngine::ISubsystem::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISubsystem::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ISubsystem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::IntegratedSubsystem::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ISubsystemDescriptor m_subsystemDescriptor
[[deprecated("Use field access instead!")]] ::UnityEngine::ISubsystemDescriptor*& UnityEngine::IntegratedSubsystem::dyn_m_subsystemDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::dyn_m_subsystemDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subsystemDescriptor"))->offset;
  return *reinterpret_cast<::UnityEngine::ISubsystemDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.get_running
bool UnityEngine::IntegratedSubsystem::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::get_running");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystem*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.get_valid
bool UnityEngine::IntegratedSubsystem::get_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::get_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.SetHandle
void UnityEngine::IntegratedSubsystem::SetHandle(::UnityEngine::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inst);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.Start
void UnityEngine::IntegratedSubsystem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystem*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.Stop
void UnityEngine::IntegratedSubsystem::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystem*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.Destroy
void UnityEngine::IntegratedSubsystem::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::IntegratedSubsystem*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.Internal_IsRunning
bool UnityEngine::IntegratedSubsystem::Internal_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::Internal_IsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Subsystem
#include "UnityEngine/Subsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Subsystem.Start
void UnityEngine::Subsystem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Subsystem::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Subsystem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Subsystem.Stop
void UnityEngine::Subsystem::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Subsystem::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Subsystem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Subsystem.Destroy
void UnityEngine::Subsystem::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Subsystem::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Subsystem*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Subsystem.OnDestroy
void UnityEngine::Subsystem::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Subsystem::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Subsystem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Terrain.get_terrainData
::UnityEngine::TerrainData* UnityEngine::Terrain::get_terrainData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_terrainData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TerrainData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_allowAutoConnect
bool UnityEngine::Terrain::get_allowAutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_allowAutoConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowAutoConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_groupingID
int UnityEngine::Terrain::get_groupingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_groupingID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_groupingID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_activeTerrains
::ArrayW<::UnityEngine::Terrain*> UnityEngine::Terrain::get_activeTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_activeTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Terrain", "get_activeTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Terrain*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.SetNeighbors
void UnityEngine::Terrain::SetNeighbors(::UnityEngine::Terrain* left, ::UnityEngine::Terrain* top, ::UnityEngine::Terrain* right, ::UnityEngine::Terrain* bottom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::SetNeighbors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNeighbors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(bottom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, right, bottom);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TreePrototype
#include "UnityEngine/TreePrototype.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.GameObject m_Prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::TreePrototype::dyn_m_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::dyn_m_Prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_BendFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::TreePrototype::dyn_m_BendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::dyn_m_BendFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BendFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TreePrototype.get_prefab
::UnityEngine::GameObject* UnityEngine::TreePrototype::get_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::get_prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TreePrototype.get_bendFactor
float UnityEngine::TreePrototype::get_bendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::get_bendFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bendFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TreePrototype.Equals
bool UnityEngine::TreePrototype::Equals(::UnityEngine::TreePrototype* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TreePrototype.Equals
bool UnityEngine::TreePrototype::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.TreePrototype.GetHashCode
int UnityEngine::TreePrototype::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
// Including type: UnityEngine.TerrainData/UnityEngine.BoundaryValueType
#include "UnityEngine/TerrainData_BoundaryValueType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.TreePrototype
#include "UnityEngine/TreePrototype.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumResolution
int UnityEngine::TerrainData::_get_k_MaximumResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumResolution
void UnityEngine::TerrainData::_set_k_MaximumResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MinimumDetailResolutionPerPatch
int UnityEngine::TerrainData::_get_k_MinimumDetailResolutionPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumDetailResolutionPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumDetailResolutionPerPatch"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MinimumDetailResolutionPerPatch
void UnityEngine::TerrainData::_set_k_MinimumDetailResolutionPerPatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumDetailResolutionPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumDetailResolutionPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumDetailResolutionPerPatch
int UnityEngine::TerrainData::_get_k_MaximumDetailResolutionPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailResolutionPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailResolutionPerPatch"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumDetailResolutionPerPatch
void UnityEngine::TerrainData::_set_k_MaximumDetailResolutionPerPatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailResolutionPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailResolutionPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumDetailPatchCount
int UnityEngine::TerrainData::_get_k_MaximumDetailPatchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailPatchCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailPatchCount"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumDetailPatchCount
void UnityEngine::TerrainData::_set_k_MaximumDetailPatchCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailPatchCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailPatchCount", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumDetailsPerRes
int UnityEngine::TerrainData::_get_k_MaximumDetailsPerRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailsPerRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailsPerRes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumDetailsPerRes
void UnityEngine::TerrainData::_set_k_MaximumDetailsPerRes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailsPerRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailsPerRes", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MinimumAlphamapResolution
int UnityEngine::TerrainData::_get_k_MinimumAlphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumAlphamapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumAlphamapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MinimumAlphamapResolution
void UnityEngine::TerrainData::_set_k_MinimumAlphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumAlphamapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumAlphamapResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumAlphamapResolution
int UnityEngine::TerrainData::_get_k_MaximumAlphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumAlphamapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumAlphamapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumAlphamapResolution
void UnityEngine::TerrainData::_set_k_MaximumAlphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumAlphamapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumAlphamapResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MinimumBaseMapResolution
int UnityEngine::TerrainData::_get_k_MinimumBaseMapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumBaseMapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumBaseMapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MinimumBaseMapResolution
void UnityEngine::TerrainData::_set_k_MinimumBaseMapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumBaseMapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumBaseMapResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumBaseMapResolution
int UnityEngine::TerrainData::_get_k_MaximumBaseMapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumBaseMapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumBaseMapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumBaseMapResolution
void UnityEngine::TerrainData::_set_k_MaximumBaseMapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumBaseMapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumBaseMapResolution", value));
}
// Autogenerated method: UnityEngine.TerrainData.get_heightmapResolution
int UnityEngine::TerrainData::get_heightmapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_heightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_internalHeightmapResolution
int UnityEngine::TerrainData::get_internalHeightmapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_internalHeightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_internalHeightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_size
::UnityEngine::Vector3 UnityEngine::TerrainData::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_treeInstances
::ArrayW<::UnityEngine::TreeInstance> UnityEngine::TerrainData::get_treeInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_treeInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_treeInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreeInstance>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_treePrototypes
::ArrayW<::UnityEngine::TreePrototype*> UnityEngine::TerrainData::get_treePrototypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_treePrototypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_treePrototypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreePrototype*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_users
::ArrayW<::UnityEngine::Terrain*> UnityEngine::TerrainData::get_users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_users");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_users", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Terrain*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData..cctor
void UnityEngine::TerrainData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.GetBoundaryValue
int UnityEngine::TerrainData::GetBoundaryValue(::UnityEngine::TerrainData::BoundaryValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetBoundaryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", "GetBoundaryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_Create
void UnityEngine::TerrainData::Internal_Create(::UnityEngine::TerrainData* terrainData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrainData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, terrainData);
}
// Autogenerated method: UnityEngine.TerrainData.GetHeights
::ArrayW<float> UnityEngine::TerrainData::GetHeights(int xBase, int yBase, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, xBase, yBase, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_GetHeights
::ArrayW<float> UnityEngine::TerrainData::Internal_GetHeights(int xBase, int yBase, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_GetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, xBase, yBase, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_GetTreeInstances
::ArrayW<::UnityEngine::TreeInstance> UnityEngine::TerrainData::Internal_GetTreeInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_GetTreeInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetTreeInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreeInstance>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.GetAlphamapResolutionInternal
float UnityEngine::TerrainData::GetAlphamapResolutionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetAlphamapResolutionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlphamapResolutionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_size_Injected
void UnityEngine::TerrainData::get_size_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainData/UnityEngine.BoundaryValueType
#include "UnityEngine/TerrainData_BoundaryValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxHeightmapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxHeightmapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxHeightmapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxHeightmapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxHeightmapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxHeightmapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxHeightmapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxHeightmapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinDetailResPerPatch
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinDetailResPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinDetailResPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinDetailResPerPatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinDetailResPerPatch
void UnityEngine::TerrainData::BoundaryValueType::_set_MinDetailResPerPatch(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinDetailResPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinDetailResPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailResPerPatch
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailResPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailResPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailResPerPatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailResPerPatch
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailResPerPatch(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailResPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailResPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailPatchCount
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailPatchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailPatchCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailPatchCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailPatchCount
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailPatchCount(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailPatchCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailPatchCount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailsPerRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailsPerRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailsPerRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailsPerRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailsPerRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailsPerRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailsPerRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailsPerRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinAlphamapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinAlphamapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinAlphamapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinAlphamapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinAlphamapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MinAlphamapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinAlphamapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinAlphamapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxAlphamapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxAlphamapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxAlphamapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxAlphamapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxAlphamapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxAlphamapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxAlphamapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxAlphamapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinBaseMapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinBaseMapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinBaseMapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinBaseMapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinBaseMapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MinBaseMapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinBaseMapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinBaseMapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxBaseMapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxBaseMapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxBaseMapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxBaseMapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxBaseMapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxBaseMapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxBaseMapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxBaseMapRes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TerrainData::BoundaryValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_HeightmapChangedCallback.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_TextureChangedCallback.hpp"
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
// Including type: UnityEngine.RectInt
#include "UnityEngine/RectInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xBBA20
// Autogenerated static field getter
// Get static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback heightmapChanged
::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_heightmapChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_heightmapChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback*>("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "heightmapChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback heightmapChanged
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_heightmapChanged(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_heightmapChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "heightmapChanged", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xBB920
// Autogenerated static field getter
// Get static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback textureChanged
::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_textureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_textureChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback*>("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "textureChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback textureChanged
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_textureChanged(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_textureChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "textureChanged", value));
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks.InvokeHeightmapChangedCallback
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeHeightmapChangedCallback(::UnityEngine::TerrainData* terrainData, ::UnityEngine::RectInt heightRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeHeightmapChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "InvokeHeightmapChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrainData), ::il2cpp_utils::ExtractType(heightRegion), ::il2cpp_utils::ExtractType(synched)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, terrainData, heightRegion, synched);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks.InvokeTextureChangedCallback
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeTextureChangedCallback(::UnityEngine::TerrainData* terrainData, ::StringW textureName, ::UnityEngine::RectInt texelRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeTextureChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "InvokeTextureChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrainData), ::il2cpp_utils::ExtractType(textureName), ::il2cpp_utils::ExtractType(texelRegion), ::il2cpp_utils::ExtractType(synched)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, terrainData, textureName, texelRegion, synched);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_HeightmapChangedCallback.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.RectInt
#include "UnityEngine/RectInt.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback.Invoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::Invoke(::UnityEngine::Terrain* terrain, ::UnityEngine::RectInt heightRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, terrain, heightRegion, synched);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::BeginInvoke(::UnityEngine::Terrain* terrain, ::UnityEngine::RectInt heightRegion, bool synched, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, terrain, heightRegion, synched, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback.EndInvoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_TextureChangedCallback.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.RectInt
#include "UnityEngine/RectInt.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback.Invoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::Invoke(::UnityEngine::Terrain* terrain, ::StringW textureName, ::UnityEngine::RectInt texelRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, terrain, textureName, texelRegion, synched);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::BeginInvoke(::UnityEngine::Terrain* terrain, ::StringW textureName, ::UnityEngine::RectInt texelRegion, bool synched, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, terrain, textureName, texelRegion, synched, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback.EndInvoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainGroups
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainGroups.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_1
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_--c__DisplayClass4_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.HasValidTerrains
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::HasValidTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::HasValidTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "HasValidTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.ClearConnectivity
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::ClearConnectivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::ClearConnectivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "ClearConnectivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.CollectTerrains
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainGroups* UnityEngine::Experimental::TerrainAPI::TerrainUtility::CollectTerrains(bool onlyAutoConnectedTerrains) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::CollectTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "CollectTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyAutoConnectedTerrains)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainGroups*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onlyAutoConnectedTerrains);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.AutoConnect
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::AutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::AutoConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "AutoConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TerrainFilter
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_TerrainFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_patchSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_patchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_patchSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_patchSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode m_errorCode
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_errorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_errorCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_errorCode"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TileCoord,UnityEngine.Terrain> m_terrainTiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord, ::UnityEngine::Terrain*>*& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_terrainTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_terrainTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_terrainTiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord, ::UnityEngine::Terrain*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap.GetTerrain
::UnityEngine::Terrain* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::GetTerrain(int tileX, int tileZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::GetTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tileX), ::il2cpp_utils::ExtractType(tileZ)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Terrain*, false>(this, ___internal__method, tileX, tileZ);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap.CreateFromPlacement
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement(::UnityEngine::Terrain* originTerrain, ::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter* filter, bool fullValidation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap", "CreateFromPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originTerrain), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(fullValidation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originTerrain, filter, fullValidation);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap.CreateFromPlacement
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement(::UnityEngine::Vector2 gridOrigin, ::UnityEngine::Vector2 gridSize, ::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter* filter, bool fullValidation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap", "CreateFromPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridOrigin), ::il2cpp_utils::ExtractType(gridSize), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(fullValidation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gridOrigin, gridSize, filter, fullValidation);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap.AddTerrainInternal
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::AddTerrainInternal(int x, int z, ::UnityEngine::Terrain* terrain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::AddTerrainInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTerrainInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(terrain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, terrain);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap.TryToAddTerrain
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TryToAddTerrain(int tileX, int tileZ, ::UnityEngine::Terrain* terrain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TryToAddTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToAddTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tileX), ::il2cpp_utils::ExtractType(tileZ), ::il2cpp_utils::ExtractType(terrain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tileX, tileZ, terrain);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap.ValidateTerrain
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ValidateTerrain(int tileX, int tileZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ValidateTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tileX), ::il2cpp_utils::ExtractType(tileZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileX, tileZ);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap.Validate
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TerrainFilter
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_TerrainFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TerrainFilter.Invoke
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::Invoke(::UnityEngine::Terrain* terrain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, terrain);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TerrainFilter.BeginInvoke
::System::IAsyncResult* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::BeginInvoke(::UnityEngine::Terrain* terrain, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, terrain, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TerrainFilter.EndInvoke
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TileCoord
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 tileX
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileX");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 tileZ
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileZ");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.TileCoord..ctor
// ABORTED elsewhere.  UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::TileCoord(int tileX, int tileZ)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode OK
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "OK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode OK
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_OK(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode Overlapping
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_Overlapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_Overlapping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "Overlapping"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode Overlapping
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_Overlapping(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_Overlapping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "Overlapping", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode SizeMismatch
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_SizeMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_SizeMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "SizeMismatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode SizeMismatch
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_SizeMismatch(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_SizeMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "SizeMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode EdgeAlignmentMismatch
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_EdgeAlignmentMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_EdgeAlignmentMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "EdgeAlignmentMismatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.ErrorCode EdgeAlignmentMismatch
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_EdgeAlignmentMismatch(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_EdgeAlignmentMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "EdgeAlignmentMismatch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 groupID
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$$c__DisplayClass4_0::dyn_groupID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$$c__DisplayClass4_0::dyn_groupID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0.<CreateFromPlacement>b__0
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$$c__DisplayClass4_0::$CreateFromPlacement$b__0(::UnityEngine::Terrain* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$$c__DisplayClass4_0::<CreateFromPlacement>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFromPlacement>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainGroups
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainGroups.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_--c__DisplayClass4_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean onlyAutoConnectedTerrains
[[deprecated("Use field access instead!")]] bool& UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_0::dyn_onlyAutoConnectedTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_0::dyn_onlyAutoConnectedTerrains");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyAutoConnectedTerrains"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_1
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_--c__DisplayClass4_1.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_--c__DisplayClass4_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Terrain t
[[deprecated("Use field access instead!")]] ::UnityEngine::Terrain*& UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_1::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_1::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::UnityEngine::Terrain**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_0*& UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_1.<CollectTerrains>b__0
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_1::$CollectTerrains$b__0(::UnityEngine::Terrain* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::$$c__DisplayClass4_1::<CollectTerrains>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CollectTerrains>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.FaceInfo
#include "UnityEngine/TextCore/FaceInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_FaceIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::FaceInfo::dyn_m_FaceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_FaceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FaceIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_FamilyName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::TextCore::FaceInfo::dyn_m_FamilyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_FamilyName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FamilyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_StyleName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::TextCore::FaceInfo::dyn_m_StyleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_StyleName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StyleName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_PointSize
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::FaceInfo::dyn_m_PointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_PointSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PointSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Scale
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_Scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_LineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_LineHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AscentLine
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_AscentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_AscentLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AscentLine"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CapLine
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_CapLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_CapLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CapLine"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MeanLine
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_MeanLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_MeanLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MeanLine"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Baseline
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_Baseline");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Baseline"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DescentLine
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_DescentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_DescentLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DescentLine"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SuperscriptOffset
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_SuperscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_SuperscriptOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SuperscriptOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SuperscriptSize
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_SuperscriptSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_SuperscriptSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SuperscriptSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SubscriptOffset
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_SubscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_SubscriptOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubscriptOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SubscriptSize
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_SubscriptSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_SubscriptSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubscriptSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_UnderlineOffset
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_UnderlineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_UnderlineOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UnderlineOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_UnderlineThickness
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_UnderlineThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_UnderlineThickness");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UnderlineThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_StrikethroughOffset
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_StrikethroughOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_StrikethroughOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StrikethroughOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_StrikethroughThickness
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_StrikethroughThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_StrikethroughThickness");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StrikethroughThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TabWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::FaceInfo::dyn_m_TabWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::dyn_m_TabWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TabWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_familyName
void UnityEngine::TextCore::FaceInfo::set_familyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_familyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_familyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_styleName
void UnityEngine::TextCore::FaceInfo::set_styleName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_styleName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_styleName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_pointSize
int UnityEngine::TextCore::FaceInfo::get_pointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_pointSize
void UnityEngine::TextCore::FaceInfo::set_pointSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_scale
float UnityEngine::TextCore::FaceInfo::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_scale
void UnityEngine::TextCore::FaceInfo::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_lineHeight
float UnityEngine::TextCore::FaceInfo::get_lineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_lineHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lineHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_lineHeight
void UnityEngine::TextCore::FaceInfo::set_lineHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_lineHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lineHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_ascentLine
float UnityEngine::TextCore::FaceInfo::get_ascentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_ascentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ascentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_ascentLine
void UnityEngine::TextCore::FaceInfo::set_ascentLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_ascentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ascentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_capLine
float UnityEngine::TextCore::FaceInfo::get_capLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_capLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_capLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_capLine
void UnityEngine::TextCore::FaceInfo::set_capLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_capLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_capLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_meanLine
float UnityEngine::TextCore::FaceInfo::get_meanLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_meanLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_meanLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_meanLine
void UnityEngine::TextCore::FaceInfo::set_meanLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_meanLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_meanLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_baseline
float UnityEngine::TextCore::FaceInfo::get_baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_baseline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_baseline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_baseline
void UnityEngine::TextCore::FaceInfo::set_baseline(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_baseline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_baseline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_descentLine
float UnityEngine::TextCore::FaceInfo::get_descentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_descentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_descentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_descentLine
void UnityEngine::TextCore::FaceInfo::set_descentLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_descentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_descentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_superscriptOffset
float UnityEngine::TextCore::FaceInfo::get_superscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_superscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_superscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_superscriptOffset
void UnityEngine::TextCore::FaceInfo::set_superscriptOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_superscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_superscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_superscriptSize
float UnityEngine::TextCore::FaceInfo::get_superscriptSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_superscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_superscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_superscriptSize
void UnityEngine::TextCore::FaceInfo::set_superscriptSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_superscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_superscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_subscriptOffset
float UnityEngine::TextCore::FaceInfo::get_subscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_subscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_subscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_subscriptOffset
void UnityEngine::TextCore::FaceInfo::set_subscriptOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_subscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_subscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_subscriptSize
float UnityEngine::TextCore::FaceInfo::get_subscriptSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_subscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_subscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_subscriptSize
void UnityEngine::TextCore::FaceInfo::set_subscriptSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_subscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_subscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_underlineOffset
float UnityEngine::TextCore::FaceInfo::get_underlineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_underlineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_underlineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_underlineOffset
void UnityEngine::TextCore::FaceInfo::set_underlineOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_underlineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_underlineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_underlineThickness
float UnityEngine::TextCore::FaceInfo::get_underlineThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_underlineThickness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_underlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_underlineThickness
void UnityEngine::TextCore::FaceInfo::set_underlineThickness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_underlineThickness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_underlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_strikethroughOffset
float UnityEngine::TextCore::FaceInfo::get_strikethroughOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_strikethroughOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_strikethroughOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_strikethroughOffset
void UnityEngine::TextCore::FaceInfo::set_strikethroughOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_strikethroughOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_strikethroughOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_strikethroughThickness
void UnityEngine::TextCore::FaceInfo::set_strikethroughThickness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_strikethroughThickness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_strikethroughThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_tabWidth
float UnityEngine::TextCore::FaceInfo::get_tabWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::get_tabWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tabWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_tabWidth
void UnityEngine::TextCore::FaceInfo::set_tabWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::FaceInfo::set_tabWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tabWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.GlyphRect
#include "UnityEngine/TextCore/GlyphRect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.TextCore.GlyphRect s_ZeroGlyphRect
::UnityEngine::TextCore::GlyphRect UnityEngine::TextCore::GlyphRect::_get_s_ZeroGlyphRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::_get_s_ZeroGlyphRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::GlyphRect>("UnityEngine.TextCore", "GlyphRect", "s_ZeroGlyphRect"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.TextCore.GlyphRect s_ZeroGlyphRect
void UnityEngine::TextCore::GlyphRect::_set_s_ZeroGlyphRect(::UnityEngine::TextCore::GlyphRect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::_set_s_ZeroGlyphRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore", "GlyphRect", "s_ZeroGlyphRect", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_X
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::GlyphRect::dyn_m_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::dyn_m_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_X"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Y
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::GlyphRect::dyn_m_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::dyn_m_Y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Width
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::GlyphRect::dyn_m_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::dyn_m_Width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Height
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::GlyphRect::dyn_m_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::dyn_m_Height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_x
int UnityEngine::TextCore::GlyphRect::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_y
int UnityEngine::TextCore::GlyphRect::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_width
int UnityEngine::TextCore::GlyphRect::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_height
int UnityEngine::TextCore::GlyphRect::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_zero
::UnityEngine::TextCore::GlyphRect UnityEngine::TextCore::GlyphRect::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore", "GlyphRect", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::GlyphRect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect..ctor
// ABORTED elsewhere.  UnityEngine::TextCore::GlyphRect::GlyphRect(int x, int y, int width, int height)
// Autogenerated method: UnityEngine.TextCore.GlyphRect..cctor
void UnityEngine::TextCore::GlyphRect::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore", "GlyphRect", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.Equals
bool UnityEngine::TextCore::GlyphRect::Equals(::UnityEngine::TextCore::GlyphRect other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::TextCore::GlyphRect), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.GetHashCode
int UnityEngine::TextCore::GlyphRect::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.Equals
bool UnityEngine::TextCore::GlyphRect::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphRect::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.GlyphMetrics
#include "UnityEngine/TextCore/GlyphMetrics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Width
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::GlyphMetrics::dyn_m_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::dyn_m_Width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Height
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::GlyphMetrics::dyn_m_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::dyn_m_Height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HorizontalBearingX
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::GlyphMetrics::dyn_m_HorizontalBearingX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::dyn_m_HorizontalBearingX");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalBearingX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HorizontalBearingY
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::GlyphMetrics::dyn_m_HorizontalBearingY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::dyn_m_HorizontalBearingY");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalBearingY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HorizontalAdvance
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::GlyphMetrics::dyn_m_HorizontalAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::dyn_m_HorizontalAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_width
float UnityEngine::TextCore::GlyphMetrics::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_height
float UnityEngine::TextCore::GlyphMetrics::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_horizontalBearingX
float UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_horizontalBearingX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_horizontalBearingY
float UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_horizontalBearingY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_horizontalAdvance
float UnityEngine::TextCore::GlyphMetrics::get_horizontalAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::get_horizontalAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_horizontalAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics..ctor
// ABORTED elsewhere.  UnityEngine::TextCore::GlyphMetrics::GlyphMetrics(float width, float height, float bearingX, float bearingY, float advance)
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.Equals
bool UnityEngine::TextCore::GlyphMetrics::Equals(::UnityEngine::TextCore::GlyphMetrics other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::TextCore::GlyphMetrics), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.GetHashCode
int UnityEngine::TextCore::GlyphMetrics::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.Equals
bool UnityEngine::TextCore::GlyphMetrics::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::GlyphMetrics::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_Index
[[deprecated("Use field access instead!")]] uint& UnityEngine::TextCore::Glyph::dyn_m_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::dyn_m_Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Index"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.GlyphMetrics m_Metrics
[[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::GlyphMetrics& UnityEngine::TextCore::Glyph::dyn_m_Metrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::dyn_m_Metrics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Metrics"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::GlyphMetrics*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.GlyphRect m_GlyphRect
[[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::GlyphRect& UnityEngine::TextCore::Glyph::dyn_m_GlyphRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::dyn_m_GlyphRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphRect"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::GlyphRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Scale
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::Glyph::dyn_m_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::dyn_m_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_AtlasIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::Glyph::dyn_m_AtlasIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::dyn_m_AtlasIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_index
uint UnityEngine::TextCore::Glyph::get_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::get_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_index
void UnityEngine::TextCore::Glyph::set_index(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::set_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_metrics
::UnityEngine::TextCore::GlyphMetrics UnityEngine::TextCore::Glyph::get_metrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::get_metrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_metrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::GlyphMetrics, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_metrics
void UnityEngine::TextCore::Glyph::set_metrics(::UnityEngine::TextCore::GlyphMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::set_metrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_metrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_glyphRect
::UnityEngine::TextCore::GlyphRect UnityEngine::TextCore::Glyph::get_glyphRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::get_glyphRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::GlyphRect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_glyphRect
void UnityEngine::TextCore::Glyph::set_glyphRect(::UnityEngine::TextCore::GlyphRect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::set_glyphRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_scale
float UnityEngine::TextCore::Glyph::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_scale
void UnityEngine::TextCore::Glyph::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_atlasIndex
int UnityEngine::TextCore::Glyph::get_atlasIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::get_atlasIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_atlasIndex
void UnityEngine::TextCore::Glyph::set_atlasIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::Glyph::set_atlasIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags
#include "UnityEngine/TextCore/LowLevel/FontFeatureLookupFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags None
::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags>("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags None
void UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_None(::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreLigatures
::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreLigatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreLigatures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags>("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreLigatures"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreLigatures
void UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreLigatures(::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreLigatures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreLigatures", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreSpacingAdjustments
::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags>("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreSpacingAdjustments
void UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments(::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.LowLevel.GlyphValueRecord
#include "UnityEngine/TextCore/LowLevel/GlyphValueRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_XPlacement
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_XPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_XPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_YPlacement
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_YPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_YPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_YPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_XAdvance
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_XAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_XAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_YAdvance
[[deprecated("Use field access instead!")]] float& UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_YAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::dyn_m_YAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_YAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_xPlacement
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_yPlacement
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_xAdvance
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_yAdvance
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.Equals
bool UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals(::UnityEngine::TextCore::LowLevel::GlyphValueRecord other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::TextCore::LowLevel::GlyphValueRecord), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.GetHashCode
int UnityEngine::TextCore::LowLevel::GlyphValueRecord::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.Equals
bool UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_GlyphIndex
[[deprecated("Use field access instead!")]] uint& UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::dyn_m_GlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::dyn_m_GlyphIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.LowLevel.GlyphValueRecord m_GlyphValueRecord
[[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::LowLevel::GlyphValueRecord& UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::dyn_m_GlyphValueRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::dyn_m_GlyphValueRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphValueRecord"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::LowLevel::GlyphValueRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord.get_glyphIndex
uint UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord.get_glyphValueRecord
::UnityEngine::TextCore::LowLevel::GlyphValueRecord UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphValueRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphValueRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphValueRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::LowLevel::GlyphValueRecord, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphPairAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord m_FirstAdjustmentRecord
[[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord& UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::dyn_m_FirstAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::dyn_m_FirstAdjustmentRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstAdjustmentRecord"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord m_SecondAdjustmentRecord
[[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord& UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::dyn_m_SecondAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::dyn_m_SecondAdjustmentRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondAdjustmentRecord"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags m_FeatureLookupFlags
[[deprecated("Use field access instead!")]] ::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags& UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::dyn_m_FeatureLookupFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::dyn_m_FeatureLookupFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureLookupFlags"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord.get_firstAdjustmentRecord
::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_firstAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_firstAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_firstAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord.get_secondAdjustmentRecord
::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_secondAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_secondAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_secondAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphLoadFlags
#include "UnityEngine/TextCore/LowLevel/GlyphLoadFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_DEFAULT
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_DEFAULT
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_DEFAULT(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_SCALE
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_SCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_SCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_SCALE"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_SCALE
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_SCALE(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_SCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_SCALE", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_HINTING
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_HINTING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_HINTING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_HINTING"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_HINTING
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_HINTING(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_HINTING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_HINTING", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_RENDER
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_RENDER
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_RENDER(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_BITMAP
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_BITMAP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_BITMAP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_BITMAP"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_BITMAP
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_BITMAP(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_BITMAP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_BITMAP", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_FORCE_AUTOHINT
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_FORCE_AUTOHINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_FORCE_AUTOHINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_FORCE_AUTOHINT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_FORCE_AUTOHINT
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_FORCE_AUTOHINT(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_FORCE_AUTOHINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_FORCE_AUTOHINT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_MONOCHROME
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_MONOCHROME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_MONOCHROME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_MONOCHROME"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_MONOCHROME
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_MONOCHROME(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_MONOCHROME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_MONOCHROME", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_AUTOHINT
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_AUTOHINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_AUTOHINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_AUTOHINT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_AUTOHINT
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_AUTOHINT(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_AUTOHINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_AUTOHINT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_COMPUTE_METRICS
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_COMPUTE_METRICS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_COMPUTE_METRICS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_COMPUTE_METRICS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_COMPUTE_METRICS
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_COMPUTE_METRICS(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_COMPUTE_METRICS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_COMPUTE_METRICS", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_BITMAP_METRICS_ONLY
::UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_BITMAP_METRICS_ONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_BITMAP_METRICS_ONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_BITMAP_METRICS_ONLY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_BITMAP_METRICS_ONLY
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_BITMAP_METRICS_ONLY(::UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_BITMAP_METRICS_ONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_BITMAP_METRICS_ONLY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::LowLevel::GlyphLoadFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphLoadFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.FontEngineError
#include "UnityEngine/TextCore/LowLevel/FontEngineError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Success
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Success
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Success(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Path
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Path"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Path
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Path(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Path", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Format
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Format"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Format
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Format(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Format", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Structure
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Structure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Structure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Structure"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Structure
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Structure(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Structure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Structure", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Table
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Table"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Table
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Table(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Table", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Glyph_Index
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Glyph_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Glyph_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Glyph_Index"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Glyph_Index
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Glyph_Index(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Glyph_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Glyph_Index", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Character_Code
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Character_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Character_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Character_Code"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Character_Code
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Character_Code(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Character_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Character_Code", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Pixel_Size
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Pixel_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Pixel_Size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Pixel_Size"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Pixel_Size
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Pixel_Size(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Pixel_Size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Pixel_Size", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Face
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Face");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Face"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Face
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Face(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Face");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Face", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library_or_Face
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library_or_Face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library_or_Face");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library_or_Face"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library_or_Face
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library_or_Face(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library_or_Face");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library_or_Face", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Atlas_Generation_Cancelled
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Atlas_Generation_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Atlas_Generation_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Atlas_Generation_Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Atlas_Generation_Cancelled
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Atlas_Generation_Cancelled(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Atlas_Generation_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Atlas_Generation_Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_SharedTextureData
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_SharedTextureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_SharedTextureData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_SharedTextureData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_SharedTextureData
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_SharedTextureData(::UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_SharedTextureData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_SharedTextureData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::LowLevel::FontEngineError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngineError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphRenderMode
#include "UnityEngine/TextCore/LowLevel/GlyphRenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH_HINTED
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH_HINTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH_HINTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH_HINTED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH_HINTED
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH_HINTED(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH_HINTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH_HINTED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER_HINTED
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER_HINTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER_HINTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER_HINTED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER_HINTED
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER_HINTED(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER_HINTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER_HINTED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF8
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF8
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF8(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF16
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF16
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF16(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF32
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF32
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF32(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA_HINTED
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA_HINTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA_HINTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA_HINTED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA_HINTED
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA_HINTED(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA_HINTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA_HINTED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA
::UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::LowLevel::GlyphRenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphRenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphPackingMode
#include "UnityEngine/TextCore/LowLevel/GlyphPackingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestShortSideFit
::UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestShortSideFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestShortSideFit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestShortSideFit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestShortSideFit
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestShortSideFit(::UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestShortSideFit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestShortSideFit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestLongSideFit
::UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestLongSideFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestLongSideFit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestLongSideFit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestLongSideFit
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestLongSideFit(::UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestLongSideFit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestLongSideFit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestAreaFit
::UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestAreaFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestAreaFit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestAreaFit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestAreaFit
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestAreaFit(::UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestAreaFit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestAreaFit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BottomLeftRule
::UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BottomLeftRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BottomLeftRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BottomLeftRule"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BottomLeftRule
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BottomLeftRule(::UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BottomLeftRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BottomLeftRule", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode ContactPointRule
::UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_ContactPointRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_ContactPointRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "ContactPointRule"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode ContactPointRule
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_ContactPointRule(::UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_ContactPointRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "ContactPointRule", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TextCore::LowLevel::GlyphPackingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::GlyphPackingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.FontEngine
#include "UnityEngine/TextCore/LowLevel/FontEngine.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.TextCore.LowLevel.FontEngineError
#include "UnityEngine/TextCore/LowLevel/FontEngineError.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: UnityEngine.TextCore.FaceInfo
#include "UnityEngine/TextCore/FaceInfo.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphLoadFlags
#include "UnityEngine/TextCore/LowLevel/GlyphLoadFlags.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphPackingMode
#include "UnityEngine/TextCore/LowLevel/GlyphPackingMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphRenderMode
#include "UnityEngine/TextCore/LowLevel/GlyphRenderMode.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] s_FontFaces
::ArrayW<::StringW> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_FontFaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_FontFaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_FontFaces"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_FontFaces
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_FontFaces(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_FontFaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_FontFaces", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.Glyph[] s_Glyphs
::ArrayW<::UnityEngine::TextCore::Glyph*> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_Glyphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_Glyphs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::TextCore::Glyph*>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_Glyphs"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.Glyph[] s_Glyphs
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_Glyphs(::ArrayW<::UnityEngine::TextCore::Glyph*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_Glyphs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_Glyphs", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32[] s_GlyphIndexes_MarshallingArray_A
::ArrayW<uint> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphIndexes_MarshallingArray_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphIndexes_MarshallingArray_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphIndexes_MarshallingArray_A"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32[] s_GlyphIndexes_MarshallingArray_A
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphIndexes_MarshallingArray_A(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphIndexes_MarshallingArray_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphIndexes_MarshallingArray_A", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_IN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_IN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_IN"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_IN(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_IN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_IN", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_OUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_OUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_OUT"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_OUT(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_OUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_OUT", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.GlyphRect[] s_FreeGlyphRects
::ArrayW<::UnityEngine::TextCore::GlyphRect> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_FreeGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_FreeGlyphRects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::TextCore::GlyphRect>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_FreeGlyphRects"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.GlyphRect[] s_FreeGlyphRects
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_FreeGlyphRects(::ArrayW<::UnityEngine::TextCore::GlyphRect> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_FreeGlyphRects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_FreeGlyphRects", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.GlyphRect[] s_UsedGlyphRects
::ArrayW<::UnityEngine::TextCore::GlyphRect> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_UsedGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_UsedGlyphRects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::TextCore::GlyphRect>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_UsedGlyphRects"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.GlyphRect[] s_UsedGlyphRects
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_UsedGlyphRects(::ArrayW<::UnityEngine::TextCore::GlyphRect> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_UsedGlyphRects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_UsedGlyphRects", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> UnityEngine::TextCore::LowLevel::FontEngine::_get_s_PairAdjustmentRecords_MarshallingArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_PairAdjustmentRecords_MarshallingArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_PairAdjustmentRecords_MarshallingArray"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_PairAdjustmentRecords_MarshallingArray(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_PairAdjustmentRecords_MarshallingArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_PairAdjustmentRecords_MarshallingArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> s_GlyphLookupDictionary
::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphLookupDictionary");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphLookupDictionary")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> s_GlyphLookupDictionary
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphLookupDictionary(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphLookupDictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphLookupDictionary", value));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine..cctor
void UnityEngine::TextCore::LowLevel::FontEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.InitializeFontEngine
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "InitializeFontEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::LowLevel::FontEngineError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.InitializeFontEngine_Internal
int UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "InitializeFontEngine_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace
::UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace(::UnityEngine::Font* font, int pointSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "LoadFontFace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(pointSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::LowLevel::FontEngineError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, font, pointSize);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace_With_Size_FromFont_Internal
int UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace_With_Size_FromFont_Internal(::UnityEngine::Font* font, int pointSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace_With_Size_FromFont_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "LoadFontFace_With_Size_FromFont_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(pointSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, font, pointSize);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetFaceInfo
::UnityEngine::TextCore::FaceInfo UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetFaceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::FaceInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetFaceInfo_Internal
int UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo_Internal(ByRef<::UnityEngine::TextCore::FaceInfo> faceInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetFaceInfo_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(faceInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(faceInfo));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphIndex
uint UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphIndex(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetGlyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithUnicodeValue
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue(uint unicode, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags flags, ByRef<::UnityEngine::TextCore::Glyph*> glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithUnicodeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::TextCore::Glyph*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, flags, byref(glyph));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithUnicodeValue_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue_Internal(uint unicode, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags loadFlags, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyphStruct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithUnicodeValue_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(loadFlags), ::il2cpp_utils::ExtractType(glyphStruct)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, loadFlags, byref(glyphStruct));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithIndexValue
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue(uint glyphIndex, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags flags, ByRef<::UnityEngine::TextCore::Glyph*> glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithIndexValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::TextCore::Glyph*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndex, flags, byref(glyph));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithIndexValue_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue_Internal(uint glyphIndex, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags loadFlags, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyphStruct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithIndexValue_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(loadFlags), ::il2cpp_utils::ExtractType(glyphStruct)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndex, loadFlags, byref(glyphStruct));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphToTexture
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture(uint glyphIndex, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* freeGlyphRects, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* usedGlyphRects, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::UnityEngine::TextCore::Glyph*> glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(freeGlyphRects), ::il2cpp_utils::ExtractType(usedGlyphRects), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::TextCore::Glyph*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndex, padding, packingMode, freeGlyphRects, usedGlyphRects, renderMode, texture, byref(glyph));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphToTexture_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture_Internal(uint glyphIndex, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> freeGlyphRects, ByRef<int> freeGlyphRectCount, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> usedGlyphRects, ByRef<int> usedGlyphRectCount, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphToTexture_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::TextCore::GlyphRect>&>(), ::il2cpp_utils::ExtractType(freeGlyphRectCount), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::TextCore::GlyphRect>&>(), ::il2cpp_utils::ExtractType(usedGlyphRectCount), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndex, padding, packingMode, byref(freeGlyphRects), byref(freeGlyphRectCount), byref(usedGlyphRects), byref(usedGlyphRectCount), renderMode, texture, byref(glyph));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphsToTexture
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture(::System::Collections::Generic::List_1<uint>* glyphIndexes, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* freeGlyphRects, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* usedGlyphRects, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::ArrayW<::UnityEngine::TextCore::Glyph*>> glyphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphsToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(freeGlyphRects), ::il2cpp_utils::ExtractType(usedGlyphRects), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::TextCore::Glyph*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndexes, padding, packingMode, freeGlyphRects, usedGlyphRects, renderMode, texture, byref(glyphs));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphsToTexture_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture_Internal(::ArrayW<uint> glyphIndex, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> freeGlyphRects, ByRef<int> freeGlyphRectCount, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> usedGlyphRects, ByRef<int> usedGlyphRectCount, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>> glyphs, ByRef<int> glyphCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphsToTexture_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::TextCore::GlyphRect>&>(), ::il2cpp_utils::ExtractType(freeGlyphRectCount), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::TextCore::GlyphRect>&>(), ::il2cpp_utils::ExtractType(usedGlyphRectCount), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>&>(), ::il2cpp_utils::ExtractType(glyphCount)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndex, padding, packingMode, byref(freeGlyphRects), byref(freeGlyphRectCount), byref(usedGlyphRects), byref(usedGlyphRectCount), renderMode, texture, byref(glyphs), byref(glyphCount));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphPairAdjustmentTable
::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentTable(::ArrayW<uint> glyphIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetGlyphPairAdjustmentTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndexes);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphPairAdjustmentRecords
::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecords(::System::Collections::Generic::List_1<uint>* glyphIndexes, ByRef<int> recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetGlyphPairAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndexes, byref(recordCount));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes
int UnityEngine::TextCore::LowLevel::FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes(::ArrayW<uint> glyphIndexes, ByRef<int> recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, glyphIndexes, byref(recordCount));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphPairAdjustmentRecordsFromMarshallingArray
int UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray(ByRef<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>> glyphPairAdjustmentRecords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetGlyphPairAdjustmentRecordsFromMarshallingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(glyphPairAdjustmentRecords));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.ResetAtlasTexture
void UnityEngine::TextCore::LowLevel::FontEngine::ResetAtlasTexture(::UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::ResetAtlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "ResetAtlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
