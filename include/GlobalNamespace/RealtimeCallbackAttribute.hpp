// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: Normal.Realtime.RealtimeModelEvent
#include "Normal/Realtime/RealtimeModelEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: RealtimeCallbackAttribute
  class RealtimeCallbackAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::RealtimeCallbackAttribute);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::RealtimeCallbackAttribute*, "", "RealtimeCallbackAttribute");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: RealtimeCallbackAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: FA970
  class RealtimeCallbackAttribute : public ::System::Attribute {
    public:
    public:
    // public readonly Normal.Realtime.RealtimeModelEvent event
    // Size: 0x4
    // Offset: 0x10
    ::Normal::Realtime::RealtimeModelEvent event;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::RealtimeModelEvent) == 0x4);
    public:
    // Creating conversion operator: operator ::Normal::Realtime::RealtimeModelEvent
    constexpr operator ::Normal::Realtime::RealtimeModelEvent() const noexcept {
      return event;
    }
    // Get instance field reference: public readonly Normal.Realtime.RealtimeModelEvent event
    [[deprecated("Use field access instead!")]] ::Normal::Realtime::RealtimeModelEvent& dyn_event();
    // public System.Void .ctor(Normal.Realtime.RealtimeModelEvent event)
    // Offset: 0x20A3C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RealtimeCallbackAttribute* New_ctor(::Normal::Realtime::RealtimeModelEvent event) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RealtimeCallbackAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RealtimeCallbackAttribute*, creationType>(event)));
    }
  }; // RealtimeCallbackAttribute
  #pragma pack(pop)
  static check_size<sizeof(RealtimeCallbackAttribute), 16 + sizeof(::Normal::Realtime::RealtimeModelEvent)> __GlobalNamespace_RealtimeCallbackAttributeSizeCheck;
  static_assert(sizeof(RealtimeCallbackAttribute) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::RealtimeCallbackAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
