// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler <>4__this
::GlobalNamespace::TeleportOrientationHandler*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler360
#include "GlobalNamespace/TeleportOrientationHandler360.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportOrientationHandler360.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler360.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerHMD
#include "GlobalNamespace/TeleportOrientationHandlerHMD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UpdateOrientationDuringAim
bool& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateOrientationDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceThreshold
float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceMaxRange
float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceMaxRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerHMD.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerHMD.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerThumbstick
#include "GlobalNamespace/TeleportOrientationHandlerThumbstick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller Thumbstick
::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Thumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotateStickThreshold
float& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotateStickThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _currentRotation
::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _lastValidDirection
::UnityEngine::Vector2& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValidDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportPoint
#include "GlobalNamespace/TeleportPoint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single dimmingSpeed
float& GlobalNamespace::TeleportPoint::dyn_dimmingSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_dimmingSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dimmingSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fullIntensity
float& GlobalNamespace::TeleportPoint::dyn_fullIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_fullIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lowIntensity
float& GlobalNamespace::TeleportPoint::dyn_lowIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lowIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform destTransform
::UnityEngine::Transform*& GlobalNamespace::TeleportPoint::dyn_destTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_destTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastLookAtTime
float& GlobalNamespace::TeleportPoint::dyn_lastLookAtTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lastLookAtTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLookAtTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportPoint.Start
void GlobalNamespace::TeleportPoint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.GetDestTransform
::UnityEngine::Transform* GlobalNamespace::TeleportPoint::GetDestTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::GetDestTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.Update
void GlobalNamespace::TeleportPoint::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.OnLookAt
void GlobalNamespace::TeleportPoint::OnLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::OnLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportSupport
#include "GlobalNamespace/TeleportSupport.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocomotionTeleport <LocomotionTeleport>k__BackingField
::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocomotionTeleport>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
bool& GlobalNamespace::TeleportSupport::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportSupport.get_LocomotionTeleport
::GlobalNamespace::LocomotionTeleport* GlobalNamespace::TeleportSupport::get_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::get_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.set_LocomotionTeleport
void GlobalNamespace::TeleportSupport::set_LocomotionTeleport(::GlobalNamespace::LocomotionTeleport* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::set_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportSupport.OnEnable
void GlobalNamespace::TeleportSupport::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.OnDisable
void GlobalNamespace::TeleportSupport::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.LogEventHandler
void GlobalNamespace::TeleportSupport::LogEventHandler(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::LogEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: TeleportSupport.AddEventHandlers
void GlobalNamespace::TeleportSupport::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.RemoveEventHandlers
void GlobalNamespace::TeleportSupport::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandler
#include "GlobalNamespace/TeleportTargetHandler.hpp"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ERROR_MARGIN
float GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "TeleportTargetHandler", "ERROR_MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ERROR_MARGIN
void GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportTargetHandler", "ERROR_MARGIN", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask AimCollisionLayerMask
::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly LocomotionTeleport/AimData AimData
::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportTargetHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
::System::Action*& GlobalNamespace::TeleportTargetHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> _aimPoints
::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::TeleportTargetHandler::dyn__aimPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__aimPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aimPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler.TargetAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ResetAimData
void GlobalNamespace::TeleportTargetHandler::ResetAimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ResetAimData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandler::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsiderTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandler.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandler::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsiderDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated method: TeleportTargetHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportTargetHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.AddEventHandlers
void GlobalNamespace::TeleportTargetHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.RemoveEventHandlers
void GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTargetHandler <>4__this
::GlobalNamespace::TeleportTargetHandler*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTargetHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNavMesh
#include "GlobalNamespace/TeleportTargetHandlerNavMesh.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 NavMeshAreaMask
int& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NavMeshAreaMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshPath _path
::UnityEngine::AI::NavMeshPath*& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.Awake
void GlobalNamespace::TeleportTargetHandlerNavMesh::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.OnDrawGizmos
void GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsiderTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsiderDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNode
#include "GlobalNamespace/TeleportTargetHandlerNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single LOSOffset
float& GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOSOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask TeleportLayerMask
::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNode.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsiderTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerPhysical
#include "GlobalNamespace/TeleportTargetHandlerPhysical.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTargetHandlerPhysical.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsiderTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransition
#include "GlobalNamespace/TeleportTransition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransition.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocomotionTeleportOnEnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.AddEventHandlers
void GlobalNamespace::TeleportTransition::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.RemoveEventHandlers
void GlobalNamespace::TeleportTransition::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionBlink
#include "GlobalNamespace/TeleportTransitionBlink.hpp"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
float& GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TeleportDelay
float& GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve FadeLevels
::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeLevels"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink.BlinkCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocomotionTeleportOnEnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionBlink <>4__this
::GlobalNamespace::TeleportTransitionBlink*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionBlink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <teleportTime>5__3
float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleportTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <teleported>5__4
bool& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleported>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.MoveNext
bool GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionInstant
#include "GlobalNamespace/TeleportTransitionInstant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransitionInstant.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocomotionTeleportOnEnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionWarp
#include "GlobalNamespace/TeleportTransitionWarp.hpp"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
float& GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve PositionLerp
::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionLerp"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp.DoWarp
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionWarp::DoWarp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::DoWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocomotionTeleportOnEnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionWarp <>4__this
::GlobalNamespace::TeleportTransitionWarp*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionWarp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <startPosition>5__2
::UnityEngine::Vector3& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startPosition>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__3
float& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.MoveNext
bool GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer
#include "GlobalNamespace/NativeVideoPlayer.hpp"
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _Activity
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__Activity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_Activity"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _Activity
void GlobalNamespace::NativeVideoPlayer::_set__Activity(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__Activity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_Activity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_VideoPlayerClass"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
void GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_VideoPlayerClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.jvalue[] EmptyParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_EmptyParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_EmptyParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "EmptyParams"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.jvalue[] EmptyParams
void GlobalNamespace::NativeVideoPlayer::_set_EmptyParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_EmptyParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "EmptyParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getIsPlayingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getIsPlayingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getIsPlayingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getIsPlayingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getCurrentPlaybackStateMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getCurrentPlaybackStateMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getDurationMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getDurationMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getDurationMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getDurationMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackPositionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr playVideoMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "playVideoMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr playVideoMethodId
void GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] playVideoParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_playVideoParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "playVideoParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] playVideoParams
void GlobalNamespace::NativeVideoPlayer::_set_playVideoParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr stopMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_stopMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_stopMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "stopMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr stopMethodId
void GlobalNamespace::NativeVideoPlayer::_set_stopMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_stopMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "stopMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr resumeMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "resumeMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr resumeMethodId
void GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "resumeMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr pauseMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "pauseMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr pauseMethodId
void GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "pauseMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackSpeedMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackSpeedMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackSpeedMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackSpeedParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setLoopingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setLoopingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setLoopingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setLoopingParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setLoopingParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setLoopingParams
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setListenerRotationQuaternionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setListenerRotationQuaternionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setListenerRotationQuaternionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionParams", value));
}
// Autogenerated method: NativeVideoPlayer.get_VideoPlayerClass
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_VideoPlayerClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Activity
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Activity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Activity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsAvailable
bool GlobalNamespace::NativeVideoPlayer::get_IsAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsPlaying
bool GlobalNamespace::NativeVideoPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_CurrentPlaybackState
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_CurrentPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NativeVideoPlayer::PlabackState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Duration
int64_t GlobalNamespace::NativeVideoPlayer::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_PlaybackPosition
int64_t GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.set_PlaybackPosition
void GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: NativeVideoPlayer..cctor
void GlobalNamespace::NativeVideoPlayer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.PlayVideo
void GlobalNamespace::NativeVideoPlayer::PlayVideo(::StringW path, ::StringW drmLicenseUrl, ::System::IntPtr surfaceObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlayVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "PlayVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(drmLicenseUrl), ::il2cpp_utils::ExtractType(surfaceObj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, drmLicenseUrl, surfaceObj);
}
// Autogenerated method: NativeVideoPlayer.Stop
void GlobalNamespace::NativeVideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Play
void GlobalNamespace::NativeVideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Pause
void GlobalNamespace::NativeVideoPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.SetPlaybackSpeed
void GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, speed);
}
// Autogenerated method: NativeVideoPlayer.SetLooping
void GlobalNamespace::NativeVideoPlayer::SetLooping(bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(looping)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, looping);
}
// Autogenerated method: NativeVideoPlayer.SetListenerRotation
void GlobalNamespace::NativeVideoPlayer::SetListenerRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetListenerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetListenerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Idle
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Idle
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Preparing
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Preparing"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Preparing
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Preparing", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Buffering
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Buffering"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Buffering
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Buffering", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ready
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ready
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ended
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ended"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ended
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ended", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action onButtonDown
::System::Action*& GlobalNamespace::ButtonDownListener::dyn_onButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::dyn_onButtonDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onButtonDown"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ButtonDownListener.add_onButtonDown
void GlobalNamespace::ButtonDownListener::add_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::add_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.remove_onButtonDown
void GlobalNamespace::ButtonDownListener::remove_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::remove_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.OnPointerDown
void GlobalNamespace::ButtonDownListener::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MediaPlayerImage/ButtonType m_ButtonType
::GlobalNamespace::MediaPlayerImage::ButtonType& GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ButtonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage::ButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaPlayerImage.get_buttonType
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::get_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::get_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MediaPlayerImage::ButtonType, false>(this, ___internal__method);
}
// Autogenerated method: MediaPlayerImage.set_buttonType
void GlobalNamespace::MediaPlayerImage::set_buttonType(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::set_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MediaPlayerImage.OnPopulateMesh
void GlobalNamespace::MediaPlayerImage::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage/ButtonType
#include "GlobalNamespace/MediaPlayerImage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Play
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Play"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Play
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Play", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Pause
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Pause"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Pause
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Pause", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType FastForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "FastForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType FastForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "FastForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Rewind
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Rewind"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Rewind
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Rewind", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipBack
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipBack"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipBack
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipBack", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Stop
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Stop
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Stop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MoviePlayerSample/<Start>d__32
#include "GlobalNamespace/MoviePlayerSample_-Start-d__32.hpp"
// Including type: MoviePlayerSample/<>c__DisplayClass33_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass33_0.hpp"
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean videoPausedBeforeAppPause
bool& GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPausedBeforeAppPause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer videoPlayer
::UnityEngine::Video::VideoPlayer*& GlobalNamespace::MoviePlayerSample::dyn_videoPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay overlay
::GlobalNamespace::OVROverlay*& GlobalNamespace::MoviePlayerSample::dyn_overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer mediaRenderer
::UnityEngine::Renderer*& GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPlaying>k__BackingField
bool& GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPlaying>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <Duration>k__BackingField
int64_t& GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Duration>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <PlaybackPosition>k__BackingField
int64_t& GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture copyTexture
::UnityEngine::RenderTexture*& GlobalNamespace::MoviePlayerSample::dyn_copyTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_copyTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material externalTex2DMaterial
::UnityEngine::Material*& GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalTex2DMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MovieName
::StringW& GlobalNamespace::MoviePlayerSample::dyn_MovieName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_MovieName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MovieName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DrmLicenseUrl
::StringW& GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrmLicenseUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LoopVideo
bool& GlobalNamespace::MoviePlayerSample::dyn_LoopVideo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_LoopVideo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopVideo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoShape Shape
::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn_Shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Shape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoStereo Stereo
::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Stereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisplayMono
bool& GlobalNamespace::MoviePlayerSample::dyn_DisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoShape _LastShape
::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn__LastShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoStereo _LastStereo
::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn__LastStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastStereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastStereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _LastDisplayMono
bool& GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastDisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample.get_IsPlaying
bool GlobalNamespace::MoviePlayerSample::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_IsPlaying
void GlobalNamespace::MoviePlayerSample::set_IsPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_Duration
int64_t GlobalNamespace::MoviePlayerSample::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_Duration
void GlobalNamespace::MoviePlayerSample::set_Duration(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_PlaybackPosition
int64_t GlobalNamespace::MoviePlayerSample::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_PlaybackPosition
void GlobalNamespace::MoviePlayerSample::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.Awake
void GlobalNamespace::MoviePlayerSample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.IsLocalVideo
bool GlobalNamespace::MoviePlayerSample::IsLocalVideo(::StringW movieName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::IsLocalVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(movieName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, movieName);
}
// Autogenerated method: MoviePlayerSample.UpdateShapeAndStereo
void GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShapeAndStereo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Start
::System::Collections::IEnumerator* GlobalNamespace::MoviePlayerSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play(::StringW moviePath, ::StringW drmLicencesUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moviePath), ::il2cpp_utils::ExtractType(drmLicencesUrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moviePath, drmLicencesUrl);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Pause
void GlobalNamespace::MoviePlayerSample::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SeekTo
void GlobalNamespace::MoviePlayerSample::SeekTo(int64_t position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SeekTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: MoviePlayerSample.Update
void GlobalNamespace::MoviePlayerSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SetPlaybackSpeed
void GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: MoviePlayerSample.Stop
void GlobalNamespace::MoviePlayerSample::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.OnApplicationPause
void GlobalNamespace::MoviePlayerSample::OnApplicationPause(bool appWasPaused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appWasPaused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, appWasPaused);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoShape
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _360
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__360() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__360");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_360"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _360
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__360(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__360");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_360", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _180
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__180() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_180"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _180
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__180(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_180", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape Quad
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape Quad
void GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "Quad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoStereo
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo Mono
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo Mono
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo TopBottom
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "TopBottom"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo TopBottom
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "TopBottom", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo LeftRight
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo LeftRight
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "LeftRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MoviePlayerSample/<Start>d__32
#include "GlobalNamespace/MoviePlayerSample_-Start-d__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.IDisposable.Dispose
void GlobalNamespace::MoviePlayerSample::$Start$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.MoveNext
bool GlobalNamespace::MoviePlayerSample::$Start$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/<>c__DisplayClass33_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass33_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String moviePath
::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_moviePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_moviePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moviePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String drmLicencesUrl
::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_drmLicencesUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_drmLicencesUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drmLicencesUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<>c__DisplayClass33_0.<Play>b__0
void GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::$Play$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::<Play>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Play>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: OVRGazePointer
#include "GlobalNamespace/OVRGazePointer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample Player
::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSampleControls::dyn_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.OVRInputModule InputModule
::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRGazePointer GazePointer
::GlobalNamespace::OVRGazePointer*& GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GazePointer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGazePointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject LeftHand
::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject RightHand
::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Canvas Canvas
::UnityEngine::Canvas*& GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener PlayPause
::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPause"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage PlayPauseImage
::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPauseImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider ProgressBar
::UnityEngine::UI::Slider*& GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProgressBar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener FastForward
::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForward"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage FastForwardImage
::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForwardImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener Rewind
::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rewind"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage RewindImage
::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RewindImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TimeoutTime
float& GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeoutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isVisible
bool& GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastButtonTime
float& GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastButtonTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didSeek
bool& GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didSeek"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _seekPreviousPosition
int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seekPreviousPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _rewindStartPosition
int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rewindStartTime
float& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSampleControls/PlaybackState _state
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState& GlobalNamespace::MoviePlayerSampleControls::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSampleControls.Start
void GlobalNamespace::MoviePlayerSampleControls::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnPlayPauseClicked
void GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayPauseClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnFastForwardClicked
void GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFastForwardClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnRewindClicked
void GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRewindClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnSeekBarMoved
void GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSeekBarMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSampleControls.Seek
void GlobalNamespace::MoviePlayerSampleControls::Seek(int64_t pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: MoviePlayerSampleControls.Update
void GlobalNamespace::MoviePlayerSampleControls::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.SetVisible
void GlobalNamespace::MoviePlayerSampleControls::SetVisible(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls/PlaybackState
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Playing
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Playing
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Paused
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Paused
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Rewinding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Rewinding", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVROverlayMeshGenerator
#include "GlobalNamespace/OVROverlayMeshGenerator.hpp"
// Including type: OVROverlayMeshGenerator/CubeFace
#include "GlobalNamespace/OVROverlayMeshGenerator_CubeFace.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] BottomLeft
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVROverlayMeshGenerator::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("", "OVROverlayMeshGenerator", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] BottomLeft
void GlobalNamespace::OVROverlayMeshGenerator::_set_BottomLeft(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] RightVector
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVROverlayMeshGenerator::_get_RightVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_get_RightVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("", "OVROverlayMeshGenerator", "RightVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] RightVector
void GlobalNamespace::OVROverlayMeshGenerator::_set_RightVector(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_set_RightVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator", "RightVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] UpVector
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVROverlayMeshGenerator::_get_UpVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_get_UpVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("", "OVROverlayMeshGenerator", "UpVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] UpVector
void GlobalNamespace::OVROverlayMeshGenerator::_set_UpVector(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::_set_UpVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator", "UpVector", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _Mesh
::UnityEngine::Mesh*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> _Verts
::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Verts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> _UV
::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__UV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UV"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> _Tris
::System::Collections::Generic::List_1<int>*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Tris"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay _Overlay
::GlobalNamespace::OVROverlay*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _MeshFilter
::UnityEngine::MeshFilter*& GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshCollider _MeshCollider
::UnityEngine::MeshCollider*& GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__MeshCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MeshCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _CameraRoot
::UnityEngine::Transform*& GlobalNamespace::OVROverlayMeshGenerator::dyn__CameraRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__CameraRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_CameraRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _Transform
::UnityEngine::Transform*& GlobalNamespace::OVROverlayMeshGenerator::dyn__Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay/OverlayShape _LastShape
::GlobalNamespace::OVROverlay::OverlayShape& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay::OverlayShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _LastPosition
::UnityEngine::Vector3& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _LastRotation
::UnityEngine::Quaternion& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _LastScale
::UnityEngine::Vector3& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _LastRectLeft
::UnityEngine::Rect& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastRectLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _LastRectRight
::UnityEngine::Rect& GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__LastRectRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastRectRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _Awake
bool& GlobalNamespace::OVROverlayMeshGenerator::dyn__Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::dyn__Awake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Awake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVROverlayMeshGenerator.Awake
void GlobalNamespace::OVROverlayMeshGenerator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.GetBoundingRect
::UnityEngine::Rect GlobalNamespace::OVROverlayMeshGenerator::GetBoundingRect(::UnityEngine::Rect a, ::UnityEngine::Rect b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetBoundingRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoundingRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, a, b);
}
// Autogenerated method: OVROverlayMeshGenerator.Update
void GlobalNamespace::OVROverlayMeshGenerator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayMeshGenerator.UpdateMesh
void GlobalNamespace::OVROverlayMeshGenerator::UpdateMesh(::GlobalNamespace::OVROverlay::OverlayShape shape, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::UpdateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shape, position, rotation, scale, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.GenerateMesh
void GlobalNamespace::OVROverlayMeshGenerator::GenerateMesh(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uvs, ::System::Collections::Generic::List_1<int>* tris, ::GlobalNamespace::OVROverlay::OverlayShape shape, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GenerateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GenerateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(tris), ::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uvs, tris, shape, position, rotation, scale, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.GetSphereUV
::UnityEngine::Vector2 GlobalNamespace::OVROverlayMeshGenerator::GetSphereUV(float theta, float phi, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetSphereUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetSphereUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theta), ::il2cpp_utils::ExtractType(phi), ::il2cpp_utils::ExtractType(expand_coef)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, theta, phi, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.GetSphereVert
::UnityEngine::Vector3 GlobalNamespace::OVROverlayMeshGenerator::GetSphereVert(float theta, float phi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetSphereVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetSphereVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theta), ::il2cpp_utils::ExtractType(phi)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, theta, phi);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildSphere
void GlobalNamespace::OVROverlayMeshGenerator::BuildSphere(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect, float worldScale, int latitudes, int longitudes, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(worldScale), ::il2cpp_utils::ExtractType(latitudes), ::il2cpp_utils::ExtractType(longitudes), ::il2cpp_utils::ExtractType(expand_coef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, position, rotation, scale, rect, worldScale, latitudes, longitudes, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.GetCubeUV
::UnityEngine::Vector2 GlobalNamespace::OVROverlayMeshGenerator::GetCubeUV(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace face, ::UnityEngine::Vector2 sideUV, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetCubeUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetCubeUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(sideUV), ::il2cpp_utils::ExtractType(expand_coef)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, face, sideUV, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.GetCubeVert
::UnityEngine::Vector3 GlobalNamespace::OVROverlayMeshGenerator::GetCubeVert(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace face, ::UnityEngine::Vector2 sideUV, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::GetCubeVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "GetCubeVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(sideUV), ::il2cpp_utils::ExtractType(expand_coef)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, face, sideUV, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildCube
void GlobalNamespace::OVROverlayMeshGenerator::BuildCube(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, float worldScale, int subQuads, float expand_coef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(worldScale), ::il2cpp_utils::ExtractType(subQuads), ::il2cpp_utils::ExtractType(expand_coef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, position, rotation, scale, worldScale, subQuads, expand_coef);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildQuad
void GlobalNamespace::OVROverlayMeshGenerator::BuildQuad(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, rect);
}
// Autogenerated method: OVROverlayMeshGenerator.BuildHemicylinder
void GlobalNamespace::OVROverlayMeshGenerator::BuildHemicylinder(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv, ::System::Collections::Generic::List_1<int>* triangles, ::UnityEngine::Vector3 scale, ::UnityEngine::Rect rect, int longitudes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::BuildHemicylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", "BuildHemicylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(longitudes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, uv, triangles, scale, rect, longitudes);
}
// Autogenerated method: OVROverlayMeshGenerator..cctor
void GlobalNamespace::OVROverlayMeshGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayMeshGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVROverlayMeshGenerator/CubeFace
#include "GlobalNamespace/OVROverlayMeshGenerator_CubeFace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Right
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Right
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Right(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Left
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Left
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Left(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Top
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Top"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Top
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Top(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Bottom
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Bottom
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Bottom(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Front
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Front() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Front");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Front"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Front
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Front(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Front");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Front", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace Back
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace Back
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Back(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayMeshGenerator/CubeFace COUNT
::GlobalNamespace::OVROverlayMeshGenerator::CubeFace GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_get_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayMeshGenerator::CubeFace>("", "OVROverlayMeshGenerator/CubeFace", "COUNT"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayMeshGenerator/CubeFace COUNT
void GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_COUNT(::GlobalNamespace::OVROverlayMeshGenerator::CubeFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::_set_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayMeshGenerator/CubeFace", "COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVROverlayMeshGenerator::CubeFace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayMeshGenerator::CubeFace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VectorUtil
#include "GlobalNamespace/VectorUtil.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VectorUtil.ToVector
::UnityEngine::Vector4 GlobalNamespace::VectorUtil::ToVector(::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VectorUtil::ToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VectorUtil", "ToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColorGrabbable
#include "OculusSampleFramework/ColorGrabbable.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_GRAB
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_GRAB
void OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
void OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_color
::UnityEngine::Color& OculusSampleFramework::ColorGrabbable::dyn_m_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] m_meshRenderers
::ArrayW<::UnityEngine::MeshRenderer*>& OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_highlight
bool& OculusSampleFramework::ColorGrabbable::dyn_m_highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_highlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.get_Highlight
bool OculusSampleFramework::ColorGrabbable::get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::get_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.set_Highlight
void OculusSampleFramework::ColorGrabbable::set_Highlight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::set_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.UpdateColor
void OculusSampleFramework::ColorGrabbable::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.SetColor
void OculusSampleFramework::ColorGrabbable::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable..cctor
void OculusSampleFramework::ColorGrabbable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "ColorGrabbable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabBegin
void OculusSampleFramework::ColorGrabbable::GrabBegin(::GlobalNamespace::OVRGrabber* hand, ::UnityEngine::Collider* grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabBegin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(grabPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, grabPoint);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabEnd
void OculusSampleFramework::ColorGrabbable::GrabEnd(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.Awake
void OculusSampleFramework::ColorGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String m_materialColorField
::StringW& OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialColorField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair m_crosshair
::OculusSampleFramework::GrabbableCrosshair*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshair"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabManager m_crosshairManager
::OculusSampleFramework::GrabManager*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshairManager"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
::UnityEngine::Renderer*& OculusSampleFramework::DistanceGrabbable::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_mpb
::UnityEngine::MaterialPropertyBlock*& OculusSampleFramework::DistanceGrabbable::dyn_m_mpb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_mpb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mpb"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_inRange
bool& OculusSampleFramework::DistanceGrabbable::dyn_m_inRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_inRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_targeted
bool& OculusSampleFramework::DistanceGrabbable::dyn_m_targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_targeted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targeted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_InRange
bool OculusSampleFramework::DistanceGrabbable::get_InRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_InRange
void OculusSampleFramework::DistanceGrabbable::set_InRange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_Targeted
bool OculusSampleFramework::DistanceGrabbable::get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_Targeted
void OculusSampleFramework::DistanceGrabbable::set_Targeted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.RefreshCrosshair
void OculusSampleFramework::DistanceGrabbable::RefreshCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::RefreshCrosshair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCrosshair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.SetColor
void OculusSampleFramework::DistanceGrabbable::SetColor(::UnityEngine::Color focusColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusColor);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.ClearColor
void OculusSampleFramework::DistanceGrabbable::ClearColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::ClearColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.Start
void OculusSampleFramework::DistanceGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabber
#include "OculusSampleFramework/DistanceGrabber.hpp"
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color m_focusColor
::UnityEngine::Color& OculusSampleFramework::DistanceGrabber::dyn_m_focusColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_focusColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_focusColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_spherecastRadius
float& OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_noSnapThreshhold
float& OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_noSnapThreshhold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useSpherecast
bool& OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useSpherecast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_preventGrabThroughWalls
bool& OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preventGrabThroughWalls"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullVelocity
float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullMaxRotationRate
float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullMaxRotationRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_movingObjectToHand
bool& OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movingObjectToHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxGrabDistance
float& OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxGrabDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_grabObjectsInLayer
int& OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabObjectsInLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_obstructionLayer
int& OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_obstructionLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.DistanceGrabber m_otherHand
::OculusSampleFramework::DistanceGrabber*& OculusSampleFramework::DistanceGrabber::dyn_m_otherHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_otherHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_otherHand"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.DistanceGrabbable m_target
::OculusSampleFramework::DistanceGrabbable*& OculusSampleFramework::DistanceGrabber::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider m_targetCollider
::UnityEngine::Collider*& OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.get_UseSpherecast
bool OculusSampleFramework::DistanceGrabber::get_UseSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::get_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.set_UseSpherecast
void OculusSampleFramework::DistanceGrabber::set_UseSpherecast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::set_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.HitInfoToGrabbable
::OculusSampleFramework::DistanceGrabbable* OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable(::UnityEngine::RaycastHit hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "DistanceGrabber", "HitInfoToGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::DistanceGrabbable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hitInfo);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTarget
bool OculusSampleFramework::DistanceGrabber::FindTarget(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTargetWithSpherecast
bool OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetWithSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Start
void OculusSampleFramework::DistanceGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Update
void OculusSampleFramework::DistanceGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabBegin
void OculusSampleFramework::DistanceGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabBegin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.MoveGrabbedObject
void OculusSampleFramework::DistanceGrabber::MoveGrabbedObject(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::MoveGrabbedObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveGrabbedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(forceTeleport)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabVolumeEnable
void OculusSampleFramework::DistanceGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabVolumeEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabVolumeEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.OffhandGrabbed
void OculusSampleFramework::DistanceGrabber::OffhandGrabbed(::GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::OffhandGrabbed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OffhandGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabbable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_grabVolume
::UnityEngine::Collider*& OculusSampleFramework::GrabManager::dyn_m_grabVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_m_grabVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorInRange
::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorInRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorInRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorHighlighted
::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorHighlighted"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerEnter
void OculusSampleFramework::GrabManager::OnTriggerEnter(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerExit
void OculusSampleFramework::GrabManager::OnTriggerExit(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState m_state
::OculusSampleFramework::GrabbableCrosshair::CrosshairState& OculusSampleFramework::GrabbableCrosshair::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair::CrosshairState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_centerEyeAnchor
::UnityEngine::Transform*& OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_centerEyeAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_targetedCrosshair
::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetedCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_enabledCrosshair
::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enabledCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Start
void OculusSampleFramework::GrabbableCrosshair::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.SetState
void OculusSampleFramework::GrabbableCrosshair::SetState(::OculusSampleFramework::GrabbableCrosshair::CrosshairState cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Update
void OculusSampleFramework::GrabbableCrosshair::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Disabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Disabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Enabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Enabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Targeted
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/OculusSampleFramework.CrosshairState Targeted
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PauseOnInputLoss
#include "OculusSampleFramework/PauseOnInputLoss.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.Start
void OculusSampleFramework::PauseOnInputLoss::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusLost
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusAcquired
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolTags ToolTags
::OculusSampleFramework::InteractableToolTags& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToolTags"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<OculusSampleFramework.ColliderZone> CollidersTouchingUs
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidersTouchingUs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.ColliderZone> _elementsToCleanUp
::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsToCleanUp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnDisable
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.Update
void OculusSampleFramework::BoneCapsuleTriggerLogic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerEnter
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerExit
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.CleanUpDeadColliders
void OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpDeadColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController
#include "OculusSampleFramework/ButtonController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ENTRY_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ENTRY_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PERP_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PERP_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _proximityZone
::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__proximityZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__proximityZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _contactZone
::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__contactZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _actionZone
::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__actionZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__actionZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest[] _contactTests
::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>& OculusSampleFramework::ButtonController::dyn__contactTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactTests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactTests"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _buttonPlaneCenter
::UnityEngine::Transform*& OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonPlaneCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _makeSureToolIsOnPositiveSide
bool& OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeSureToolIsOnPositiveSide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localButtonDirection
::UnityEngine::Vector3& OculusSampleFramework::ButtonController::dyn__localButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__localButtonDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localButtonDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableToolTags[] _allValidToolsTags
::ArrayW<::OculusSampleFramework::InteractableToolTags>& OculusSampleFramework::ButtonController::dyn__allValidToolsTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__allValidToolsTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allValidToolsTags"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::InteractableToolTags>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _toolTagsMask
int& OculusSampleFramework::ButtonController::dyn__toolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolTagsMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolTagsMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableState _currentButtonState
::OculusSampleFramework::InteractableState& OculusSampleFramework::ButtonController::dyn__currentButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__currentButtonState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentButtonState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.InteractableTool,OculusSampleFramework.InteractableState> _toolToState
::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>*& OculusSampleFramework::ButtonController::dyn__toolToState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolToState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolToState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_LocalButtonDirection
::UnityEngine::Vector3 OculusSampleFramework::ButtonController::get_LocalButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_LocalButtonDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalButtonDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.CallEventsOnOldDepth
void OculusSampleFramework::ButtonController::CallEventsOnOldDepth(::OculusSampleFramework::InteractableCollisionDepth oldDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::CallEventsOnOldDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallEventsOnOldDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDepth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDepth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.ButtonController.CallEventsOnNewDepth
void OculusSampleFramework::ButtonController::CallEventsOnNewDepth(::OculusSampleFramework::InteractableCollisionDepth newDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::CallEventsOnNewDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallEventsOnNewDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDepth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newDepth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.ButtonController.SustainEventsOnDepth
void OculusSampleFramework::ButtonController::SustainEventsOnDepth(::OculusSampleFramework::InteractableCollisionDepth depth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::SustainEventsOnDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SustainEventsOnDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.ButtonController.IsValidContact
bool OculusSampleFramework::ButtonController::IsValidContact(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::IsValidContact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidContact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassEntryTest
bool OculusSampleFramework::ButtonController::PassEntryTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassEntryTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassEntryTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassPerpTest
bool OculusSampleFramework::ButtonController::PassPerpTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassPerpTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassPerpTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_ValidToolTagsMask
int OculusSampleFramework::ButtonController::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidToolTagsMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.Awake
void OculusSampleFramework::ButtonController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.UpdateCollisionDepth
void OculusSampleFramework::ButtonController::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth collisionDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCollisionDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool), ::il2cpp_utils::ExtractType(oldCollisionDepth), ::il2cpp_utils::ExtractType(collisionDepth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, collisionDepth, collidingTool);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest
#include "OculusSampleFramework/ButtonController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest PerpenTest
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest PerpenTest
void OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest BackwardsPress
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/OculusSampleFramework.ContactTest BackwardsPress
void OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::ButtonController::ContactTest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonTriggerZone
#include "OculusSampleFramework/ButtonTriggerZone.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _parentInteractableObj
::UnityEngine::GameObject*& OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentInteractableObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider <Collider>k__BackingField
::UnityEngine::Collider*& OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Collider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable <ParentInteractable>k__BackingField
::OculusSampleFramework::Interactable*& OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParentInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ButtonTriggerZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_Collider
void OculusSampleFramework::ButtonTriggerZone::set_Collider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_ParentInteractable
void OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable(::OculusSampleFramework::Interactable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollisionDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.Awake
void OculusSampleFramework::ButtonTriggerZone::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.ColliderZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ColliderZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ColliderZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ColliderZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollisionDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZone Collider
::OculusSampleFramework::ColliderZone*& OculusSampleFramework::ColliderZoneArgs::dyn_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Collider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single FrameTime
float& OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool CollidingTool
::OculusSampleFramework::InteractableTool*& OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractionType InteractionT
::OculusSampleFramework::InteractionType& OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractionT"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Enter
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Enter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Enter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Enter"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Enter
void OculusSampleFramework::InteractionType::_set_Enter(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Enter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Enter", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Stay
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Stay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Stay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Stay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Stay
void OculusSampleFramework::InteractionType::_set_Stay(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Stay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Stay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Exit
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Exit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Exit"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Exit
void OculusSampleFramework::InteractionType::_set_Exit(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Exit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Exit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::InteractionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRSkeletonRenderer
#include "GlobalNamespace/OVRSkeletonRenderer.hpp"
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String SKELETON_VISUALIZER_NAME
::StringW OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String SKELETON_VISUALIZER_NAME
void OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager*>("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
void OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftHand
::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightHand
::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode VisualMode
::OculusSampleFramework::HandsManager::HandsVisualMode& OculusSampleFramework::HandsManager::dyn_VisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_VisualMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VisualMode"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager::HandsVisualMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand[] _hand
::ArrayW<::GlobalNamespace::OVRHand*>& OculusSampleFramework::HandsManager::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRHand*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton[] _handSkeleton
::ArrayW<::GlobalNamespace::OVRSkeleton*>& OculusSampleFramework::HandsManager::dyn__handSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeleton"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeleton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeletonRenderer[] _handSkeletonRenderer
::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>& OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeletonRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMesh[] _handMesh
::ArrayW<::GlobalNamespace::OVRMesh*>& OculusSampleFramework::HandsManager::dyn__handMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMesh"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer[] _handMeshRenderer
::ArrayW<::GlobalNamespace::OVRMeshRenderer*>& OculusSampleFramework::HandsManager::dyn__handMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMeshRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _leftMeshRenderer
::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__leftMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _rightMeshRenderer
::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__rightMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftSkeletonVisual
::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightSkeletonVisual
::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentHandAlpha
float& OculusSampleFramework::HandsManager::dyn__currentHandAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__currentHandAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHandAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 HandAlphaId
int& OculusSampleFramework::HandsManager::dyn_HandAlphaId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_HandAlphaId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandAlphaId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHand
void OculusSampleFramework::HandsManager::set_RightHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_RightHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeleton
void OculusSampleFramework::HandsManager::set_RightHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_RightHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMesh
void OculusSampleFramework::HandsManager::set_RightHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_RightHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMeshRenderer
void OculusSampleFramework::HandsManager::set_RightHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHand
void OculusSampleFramework::HandsManager::set_LeftHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_LeftHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeleton
void OculusSampleFramework::HandsManager::set_LeftHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_LeftHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMesh
void OculusSampleFramework::HandsManager::set_LeftHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMeshRenderer
void OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_Instance
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::HandsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_Instance
void OculusSampleFramework::HandsManager::set_Instance(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Awake
void OculusSampleFramework::HandsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Update
void OculusSampleFramework::HandsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.FindSkeletonVisualGameObjects
::System::Collections::IEnumerator* OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSkeletonVisualGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SwitchVisualization
void OculusSampleFramework::HandsManager::SwitchVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SwitchVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SetToCurrentVisualMode
void OculusSampleFramework::HandsManager::SetToCurrentVisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SetToCurrentVisualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCurrentVisualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.GetCapsulesPerBone
::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>* OculusSampleFramework::HandsManager::GetCapsulesPerBone(::GlobalNamespace::OVRSkeleton* skeleton, ::GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::GetCapsulesPerBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "GetCapsulesPerBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeleton), ::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeleton, boneId);
}
// Autogenerated method: OculusSampleFramework.HandsManager.IsInitialized
bool OculusSampleFramework::HandsManager::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode
#include "OculusSampleFramework/HandsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Mesh
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Mesh
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Skeleton
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Skeleton
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Both
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/OculusSampleFramework.HandsVisualMode Both
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager <>4__this
::OculusSampleFramework::HandsManager*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.IDisposable.Dispose
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.MoveNext
bool OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/OculusSampleFramework.<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.Reset
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.Interactable/OculusSampleFramework.InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _proximityZoneCollider
::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__proximityZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__proximityZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _contactZoneCollider
::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__contactZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__contactZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _actionZoneCollider
::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__actionZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__actionZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ProximityZoneEvent
::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ProximityZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ProximityZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProximityZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ContactZoneEvent
::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ContactZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ContactZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContactZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ActionZoneEvent
::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ActionZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ActionZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActionZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.Interactable/OculusSampleFramework.InteractableStateArgsEvent InteractableStateChanged
::OculusSampleFramework::Interactable::InteractableStateArgsEvent*& OculusSampleFramework::Interactable::dyn_InteractableStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_InteractableStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableStateChanged"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable::InteractableStateArgsEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ProximityCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ProximityCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ProximityCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProximityCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ContactCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ContactCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ContactCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContactCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ActionCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ActionCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ActionCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActionCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ValidToolTagsMask
int OculusSampleFramework::Interactable::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidToolTagsMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ProximityZoneEvent
void OculusSampleFramework::Interactable::add_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ProximityZoneEvent
void OculusSampleFramework::Interactable::remove_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ContactZoneEvent
void OculusSampleFramework::Interactable::add_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ContactZoneEvent
void OculusSampleFramework::Interactable::remove_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ActionZoneEvent
void OculusSampleFramework::Interactable::add_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ActionZoneEvent
void OculusSampleFramework::Interactable::remove_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnProximityZoneEvent
void OculusSampleFramework::Interactable::OnProximityZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnProximityZoneEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnContactZoneEvent
void OculusSampleFramework::Interactable::OnContactZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnContactZoneEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnActionZoneEvent
void OculusSampleFramework::Interactable::OnActionZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnActionZoneEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.UpdateCollisionDepth
void OculusSampleFramework::Interactable::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth collisionDepth, ::OculusSampleFramework::InteractableTool* collidingTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCollisionDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool), ::il2cpp_utils::ExtractType(oldCollisionDepth), ::il2cpp_utils::ExtractType(collisionDepth), ::il2cpp_utils::ExtractType(collidingTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, collisionDepth, collidingTool);
}
// Autogenerated method: OculusSampleFramework.Interactable.Awake
void OculusSampleFramework::Interactable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnDestroy
void OculusSampleFramework::Interactable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable/OculusSampleFramework.InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth None
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth None
void OculusSampleFramework::InteractableCollisionDepth::_set_None(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Proximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Proximity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Proximity"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
void OculusSampleFramework::InteractableCollisionDepth::_set_Proximity(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Proximity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Proximity", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Contact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Contact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Contact"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
void OculusSampleFramework::InteractableCollisionDepth::_set_Contact(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Contact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Contact", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Action
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Action"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Action
void OculusSampleFramework::InteractableCollisionDepth::_set_Action(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Action", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::InteractableCollisionDepth::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableState
#include "OculusSampleFramework/InteractableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState Default
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState Default
void OculusSampleFramework::InteractableState::_set_Default(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ProximityState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ProximityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ProximityState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ProximityState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ProximityState
void OculusSampleFramework::InteractableState::_set_ProximityState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ProximityState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ProximityState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ContactState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ContactState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ContactState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ContactState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ContactState
void OculusSampleFramework::InteractableState::_set_ContactState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ContactState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ContactState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ActionState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ActionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ActionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ActionState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ActionState
void OculusSampleFramework::InteractableState::_set_ActionState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ActionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ActionState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::InteractableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.Interactable Interactable
::OculusSampleFramework::Interactable*& OculusSampleFramework::InteractableStateArgs::dyn_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool Tool
::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableStateArgs::dyn_Tool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Tool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState OldInteractableState
::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OldInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState NewInteractableState
::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZoneArgs ColliderArgs
::OculusSampleFramework::ColliderZoneArgs*& OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderArgs"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZoneArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableRegistry
#include "OculusSampleFramework/InteractableRegistry.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::_get__interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_get__interactables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*>("OculusSampleFramework", "InteractableRegistry", "_interactables"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
void OculusSampleFramework::InteractableRegistry::_set__interactables(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_set__interactables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableRegistry", "_interactables", value));
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.get_Interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::get_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::get_Interactables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "get_Interactables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.RegisterInteractable
void OculusSampleFramework::InteractableRegistry::RegisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::RegisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "RegisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.UnregisterInteractable
void OculusSampleFramework::InteractableRegistry::UnregisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::UnregisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "UnregisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry..cctor
void OculusSampleFramework::InteractableRegistry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsCreator
#include "OculusSampleFramework/InteractableToolsCreator.hpp"
// Including type: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] LeftHandTools
::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] RightHandTools
::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.Awake
void OculusSampleFramework::InteractableToolsCreator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolsToHands
::System::Collections::IEnumerator* OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands(::ArrayW<::UnityEngine::Transform*> toolObjects, bool isRightHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolsToHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toolObjects), ::il2cpp_utils::ExtractType(isRightHand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, toolObjects, isRightHand);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolToHandTransform
void OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform(::UnityEngine::Transform* tool, bool isRightHanded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolToHandTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tool), ::il2cpp_utils::ExtractType(isRightHanded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tool, isRightHanded);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] toolObjects
::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toolObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRightHand
bool& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRightHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolsCreator <>4__this
::OculusSampleFramework::InteractableToolsCreator*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolsCreator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.HandsManager <handsManagerObj>5__2
::OculusSampleFramework::HandsManager*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsManagerObj>5__2"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1/System.Collections.Generic.Enumerator<UnityEngine.Transform> <>7__wrap2
typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <toolObject>5__4
::UnityEngine::Transform*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<toolObject>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton <handSkeletonToAttachTo>5__5
::GlobalNamespace::OVRSkeleton*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handSkeletonToAttachTo>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3.System.IDisposable.Dispose
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3.MoveNext
bool OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3.<>m__Finally1
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/OculusSampleFramework.<AttachToolsToHands>d__3.System.Collections.IEnumerator.Reset
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsInputRouter
#include "OculusSampleFramework/InteractableToolsInputRouter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolsInputRouter*>("OculusSampleFramework", "InteractableToolsInputRouter", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
void OculusSampleFramework::InteractableToolsInputRouter::_set__instance(::OculusSampleFramework::InteractableToolsInputRouter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolsInputRouter", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leftPinch
bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rightPinch
bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandNearTools
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandFarTools
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandNearTools
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandFarTools
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.get_Instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableToolsInputRouter", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolsInputRouter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.RegisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UnregisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.Update
void OculusSampleFramework::InteractableToolsInputRouter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateToolsAndEnableState
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool toolsAreEnabledThisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateToolsAndEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(toolsAreEnabledThisFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, toolsAreEnabledThisFrame);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateTools
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateTools(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool resetCollisionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateTools");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTools", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(resetCollisionData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, resetCollisionData);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.ToggleToolsEnableState
void OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool enableState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleToolsEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(enableState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tools, enableState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeTool
#include "OculusSampleFramework/FingerTipPokeTool.hpp"
// Including type: OculusSampleFramework.FingerTipPokeTool/OculusSampleFramework.<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_VELOCITY_FRAMES
int OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_VELOCITY_FRAMES
void OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.FingerTipPokeToolView _fingerTipPokeToolView
::OculusSampleFramework::FingerTipPokeToolView*& OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerTipPokeToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/HandFinger _fingerToFollow
::GlobalNamespace::OVRPlugin::HandFinger& OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerToFollow"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _velocityFrames
::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currVelocityFrame
int& OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currVelocityFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sampledMaxFramesAlready
bool& OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampledMaxFramesAlready"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
::UnityEngine::Vector3& OculusSampleFramework::FingerTipPokeTool::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic
::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>& OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneCapsuleTriggerLogic"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastScale
float& OculusSampleFramework::FingerTipPokeTool::dyn__lastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__lastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
bool& OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRBoneCapsule _capsuleToTrack
::GlobalNamespace::OVRBoneCapsule*& OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsuleToTrack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBoneCapsule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.AttachTriggerLogic
::System::Collections::IEnumerator* OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachTriggerLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Update
void OculusSampleFramework::FingerTipPokeTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.UpdateAverageVelocity
void OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverageVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.CheckAndUpdateScale
void OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndUpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::FingerTipPokeTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::FingerTipPokeTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolInputState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_IsFarFieldTool
bool OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFarFieldTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_EnableState
bool OculusSampleFramework::FingerTipPokeTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.set_EnableState
void OculusSampleFramework::FingerTipPokeTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Initialize
void OculusSampleFramework::FingerTipPokeTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.FocusOnInteractable
void OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FocusOnInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusedInteractable), ::il2cpp_utils::ExtractType(colliderZone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.DeFocus
void OculusSampleFramework::FingerTipPokeTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.FingerTipPokeTool/OculusSampleFramework.<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.FingerTipPokeTool <>4__this
::OculusSampleFramework::FingerTipPokeTool*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/OculusSampleFramework.<AttachTriggerLogic>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/OculusSampleFramework.<AttachTriggerLogic>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/OculusSampleFramework.<AttachTriggerLogic>d__21.System.IDisposable.Dispose
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/OculusSampleFramework.<AttachTriggerLogic>d__21.MoveNext
bool OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/OculusSampleFramework.<AttachTriggerLogic>d__21.System.Collections.IEnumerator.Reset
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _sphereMeshRenderer
::UnityEngine::MeshRenderer*& OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sphereMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
::OculusSampleFramework::InteractableTool*& OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ToolActivateState>k__BackingField
bool& OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ToolActivateState>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <SphereRadius>k__BackingField
float& OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SphereRadius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_InteractableTool
void OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_EnableState
bool OculusSampleFramework::FingerTipPokeToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_EnableState
void OculusSampleFramework::FingerTipPokeToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_ToolActivateState
bool OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolActivateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_ToolActivateState
void OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ToolActivateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_SphereRadius
float OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_SphereRadius
void OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.Awake
void OculusSampleFramework::FingerTipPokeToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.SetFocusedInteractable
void OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFocusedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags None
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags None
void OculusSampleFramework::InteractableToolTags::_set_None(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Ray
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Ray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Ray"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Ray
void OculusSampleFramework::InteractableToolTags::_set_Ray(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Ray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Ray", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Poke
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Poke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Poke");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Poke"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Poke
void OculusSampleFramework::InteractableToolTags::_set_Poke(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Poke");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Poke", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags All
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "All"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags All
void OculusSampleFramework::InteractableToolTags::_set_All(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::InteractableToolTags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState Inactive
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState Inactive
void OculusSampleFramework::ToolInputState::_set_Inactive(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDown(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
void OculusSampleFramework::ToolInputState::_set_PrimaryInputUp(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::ToolInputState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.ColliderZone InteractableCollider
::OculusSampleFramework::ColliderZone*& OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableCollisionDepth CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth& OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollisionDepth"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableCollisionDepth*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableTool CollidingTool
::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRightHandedTool>k__BackingField
bool& OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRightHandedTool>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Velocity>k__BackingField
::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Velocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <InteractionPosition>k__BackingField
::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractionPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<OculusSampleFramework.InteractableCollisionInfo> _currentIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentIntersectingObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _addedInteractables
::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__addedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__addedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _removedInteractables
::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__removedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__removedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _remainingInteractables
::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__remainingInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__remainingInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remainingInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _currInteractableToCollisionInfos
::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _prevInteractableToCollisionInfos
::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTransform
::UnityEngine::Transform* OculusSampleFramework::InteractableTool::get_ToolTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsRightHandedTool
bool OculusSampleFramework::InteractableTool::get_IsRightHandedTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_IsRightHandedTool
void OculusSampleFramework::InteractableTool::set_IsRightHandedTool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::InteractableTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolInputState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsFarFieldTool
bool OculusSampleFramework::InteractableTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFarFieldTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_Velocity
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_Velocity
void OculusSampleFramework::InteractableTool::set_Velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_InteractionPosition
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_InteractionPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_InteractionPosition
void OculusSampleFramework::InteractableTool::set_InteractionPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_EnableState
bool OculusSampleFramework::InteractableTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_EnableState
void OculusSampleFramework::InteractableTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetCurrentIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.FocusOnInteractable
void OculusSampleFramework::InteractableTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FocusOnInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusedInteractable), ::il2cpp_utils::ExtractType(colliderZone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.DeFocus
void OculusSampleFramework::InteractableTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.Initialize
void OculusSampleFramework::InteractableTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetFirstCurrentCollisionInfo
::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*> OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstCurrentCollisionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.ClearAllCurrentCollisionInfos
void OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllCurrentCollisionInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateCurrentCollisionsBasedOnDepth
void OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCurrentCollisionsBasedOnDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateLatestCollisionData
void OculusSampleFramework::InteractableTool::UpdateLatestCollisionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateLatestCollisionData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLatestCollisionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolView
#include "OculusSampleFramework/InteractableToolView.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::InteractableToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_EnableState
bool OculusSampleFramework::InteractableToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_EnableState
void OculusSampleFramework::InteractableToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_ToolActivateState
bool OculusSampleFramework::InteractableToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolActivateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_ToolActivateState
void OculusSampleFramework::InteractableToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ToolActivateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.SetFocusedInteractable
void OculusSampleFramework::InteractableToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFocusedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single PINCH_STRENGTH_THRESHOLD
float OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PINCH_STRENGTH_THRESHOLD
void OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState _currPinchState
::OculusSampleFramework::PinchStateModule::PinchState& OculusSampleFramework::PinchStateModule::dyn__currPinchState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__currPinchState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currPinchState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule::PinchState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _firstFocusedInteractable
::OculusSampleFramework::Interactable*& OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFocusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchUpAndDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchUpAndDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchSteadyOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchSteadyOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.UpdateState
void OculusSampleFramework::PinchStateModule::UpdateState(::GlobalNamespace::OVRHand* hand, ::OculusSampleFramework::Interactable* currFocusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(currFocusedInteractable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, currFocusedInteractable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState
#include "OculusSampleFramework/PinchStateModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState None
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState None
void OculusSampleFramework::PinchStateModule::PinchState::_set_None(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState PinchDown
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState PinchDown
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState PinchStay
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState PinchStay
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState PinchUp
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/OculusSampleFramework.PinchState PinchUp
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OculusSampleFramework::PinchStateModule::PinchState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayTool
#include "OculusSampleFramework/RayTool.hpp"
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
float OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
void OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single COLLIDER_RADIUS
float OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single COLLIDER_RADIUS
void OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
int OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
void OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.RayToolView _rayToolView
::OculusSampleFramework::RayToolView*& OculusSampleFramework::RayTool::dyn__rayToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__rayToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::RayToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleDegrees
float& OculusSampleFramework::RayTool::dyn__coneAngleDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _farFieldMaxDistance
float& OculusSampleFramework::RayTool::dyn__farFieldMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__farFieldMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_farFieldMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule _pinchStateModule
::OculusSampleFramework::PinchStateModule*& OculusSampleFramework::RayTool::dyn__pinchStateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__pinchStateModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchStateModule"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _focusedInteractable
::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__focusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__focusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _collidersOverlapped
::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__collidersOverlapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__collidersOverlapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collidersOverlapped"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _currInteractableCastedAgainst
::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableCastedAgainst"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleReleaseDegrees
float& OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleReleaseDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] _primaryHits
::ArrayW<::UnityEngine::RaycastHit>& OculusSampleFramework::RayTool::dyn__primaryHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__primaryHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _secondaryOverlapResults
::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__secondaryOverlapResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__secondaryOverlapResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryOverlapResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& OculusSampleFramework::RayTool::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayTool.OnDestroy
void OculusSampleFramework::RayTool::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.Update
void OculusSampleFramework::RayTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetRayCastOrigin
::UnityEngine::Vector3 OculusSampleFramework::RayTool::GetRayCastOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetRayCastOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRayCastOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.HasRayReleasedInteractable
bool OculusSampleFramework::RayTool::HasRayReleasedInteractable(::OculusSampleFramework::Interactable* focusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::HasRayReleasedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRayReleasedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusedInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, focusedInteractable);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindTargetInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindTargetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindTargetInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindPrimaryRaycastHit
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindPrimaryRaycastHit(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindPrimaryRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPrimaryRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindInteractableViaConeTest
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindInteractableViaConeTest(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindInteractableViaConeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindInteractableViaConeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::RayTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::RayTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolInputState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_IsFarFieldTool
bool OculusSampleFramework::RayTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFarFieldTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_EnableState
bool OculusSampleFramework::RayTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.set_EnableState
void OculusSampleFramework::RayTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayTool.Initialize
void OculusSampleFramework::RayTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::RayTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FocusOnInteractable
void OculusSampleFramework::RayTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FocusOnInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusedInteractable), ::il2cpp_utils::ExtractType(colliderZone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.RayTool.DeFocus
void OculusSampleFramework::RayTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
int OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
void OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
float OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
void OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
::UnityEngine::LineRenderer*& OculusSampleFramework::RayToolView::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _toolActivateState
bool& OculusSampleFramework::RayToolView::dyn__toolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__toolActivateState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolActivateState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _focusedTransform
::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__focusedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__focusedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] linePositions
::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::RayToolView::dyn_linePositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_linePositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _oldColorGradient
::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__oldColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__oldColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _highLightColorGradient
::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__highLightColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__highLightColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highLightColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
::OculusSampleFramework::InteractableTool*& OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_EnableState
bool OculusSampleFramework::RayToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_EnableState
void OculusSampleFramework::RayToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_ToolActivateState
bool OculusSampleFramework::RayToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolActivateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_ToolActivateState
void OculusSampleFramework::RayToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ToolActivateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::RayToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_InteractableTool
void OculusSampleFramework::RayToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Awake
void OculusSampleFramework::RayToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.SetFocusedInteractable
void OculusSampleFramework::RayToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFocusedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Update
void OculusSampleFramework::RayToolView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.GetPointOnBezierCurve
::UnityEngine::Vector3 OculusSampleFramework::RayToolView::GetPointOnBezierCurve(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::GetPointOnBezierCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "RayToolView", "GetPointOnBezierCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.HandPoseId
#include "OVRTouchSample/HandPoseId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Default
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Default
void OVRTouchSample::HandPoseId::_set_Default(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Generic
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Generic
void OVRTouchSample::HandPoseId::_set_Generic(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Generic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId PingPongBall
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_PingPongBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_PingPongBall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "PingPongBall"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId PingPongBall
void OVRTouchSample::HandPoseId::_set_PingPongBall(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_PingPongBall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "PingPongBall", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Controller
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Controller
void OVRTouchSample::HandPoseId::_set_Controller(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Controller", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVRTouchSample::HandPoseId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.HandPose
#include "OVRTouchSample/HandPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowPointing
bool& OVRTouchSample::HandPose::dyn_m_allowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_allowPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowThumbsUp
bool& OVRTouchSample::HandPose::dyn_m_allowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_allowThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTouchSample.HandPoseId m_poseId
::OVRTouchSample::HandPoseId& OVRTouchSample::HandPose::dyn_m_poseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_poseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poseId"))->offset;
  return *reinterpret_cast<::OVRTouchSample::HandPoseId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.HandPose.get_AllowPointing
bool OVRTouchSample::HandPose::get_AllowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_AllowPointing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowPointing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.HandPose.get_AllowThumbsUp
bool OVRTouchSample::HandPose::get_AllowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_AllowThumbsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowThumbsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.HandPose.get_PoseId
::OVRTouchSample::HandPoseId OVRTouchSample::HandPose::get_PoseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_PoseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PoseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRTouchSample::HandPoseId, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.TouchController
#include "OVRTouchSample/TouchController.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
::GlobalNamespace::OVRInput::Controller& OVRTouchSample::TouchController::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_animator
::UnityEngine::Animator*& OVRTouchSample::TouchController::dyn_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
bool& OVRTouchSample::TouchController::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.TouchController.Update
void OVRTouchSample::TouchController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.TouchController.OnInputFocusLost
void OVRTouchSample::TouchController::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.TouchController.OnInputFocusAcquired
void OVRTouchSample::TouchController::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSection
#include "System/Configuration/ConfigurationSection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationSection.DeserializeSection
void System::Configuration::ConfigurationSection::DeserializeSection(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Configuration.ConfigurationSection.SerializeSection
::StringW System::Configuration::ConfigurationSection::SerializeSection(::System::Configuration::ConfigurationElement* parentElement, ::StringW name, ::System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(saveMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentElement, name, saveMode);
}
// Autogenerated method: System.Configuration.ConfigurationSection.IsModified
bool System::Configuration::ConfigurationSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationSection.ResetModified
void System::Configuration::ConfigurationSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationElement
#include "System/Configuration/ConfigurationElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Configuration::ConfigurationElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.IsModified
bool System::Configuration::ConfigurationElement::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.Reset
void System::Configuration::ConfigurationElement::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated method: System.Configuration.ConfigurationElement.ResetModified
void System::Configuration::ConfigurationElement::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Full
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Full
void System::Configuration::ConfigurationSaveMode::_set_Full(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Minimal
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Minimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Minimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Minimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Minimal
void System::Configuration::ConfigurationSaveMode::_set_Minimal(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Minimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Minimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Modified
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Modified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Modified"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Modified
void System::Configuration::ConfigurationSaveMode::_set_Modified(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Modified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Modified", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Configuration::ConfigurationSaveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationCollectionAttribute
#include "System/Configuration/ConfigurationCollectionAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.IgnoreSection
#include "System/Configuration/IgnoreSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.IgnoreSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Configuration::IgnoreSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.DeserializeSection
void System::Configuration::IgnoreSection::DeserializeSection(::System::Xml::XmlReader* xmlReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlReader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlReader);
}
// Autogenerated method: System.Configuration.IgnoreSection.IsModified
bool System::Configuration::IgnoreSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.Reset
void System::Configuration::IgnoreSection::Reset(::System::Configuration::ConfigurationElement* parentSection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentSection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentSection);
}
// Autogenerated method: System.Configuration.IgnoreSection.ResetModified
void System::Configuration::IgnoreSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.SerializeSection
::StringW System::Configuration::IgnoreSection::SerializeSection(::System::Configuration::ConfigurationElement* parentSection, ::StringW name, ::System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentSection), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(saveMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentSection, name, saveMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Error
#include "System/Linq/Error.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Error.ArgumentNull
::System::Exception* System::Linq::Error::ArgumentNull(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::ArgumentNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.ArgumentOutOfRange
::System::Exception* System::Linq::Error::ArgumentOutOfRange(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.MoreThanOneMatch
::System::Exception* System::Linq::Error::MoreThanOneMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::MoreThanOneMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoElements
::System::Exception* System::Linq::Error::NoElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::NoElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NotSupported
::System::Exception* System::Linq::Error::NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::NotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Enumerable
#include "System/Linq/Enumerable.hpp"
// Including type: System.Linq.Enumerable/System.Linq.Iterator`1
#include "System/Linq/Enumerable_Iterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereEnumerableIterator`1
#include "System/Linq/Enumerable_WhereEnumerableIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereArrayIterator`1
#include "System/Linq/Enumerable_WhereArrayIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereListIterator`1
#include "System/Linq/Enumerable_WhereListIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectEnumerableIterator`2
#include "System/Linq/Enumerable_WhereSelectEnumerableIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectArrayIterator`2
#include "System/Linq/Enumerable_WhereSelectArrayIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectListIterator`2
#include "System/Linq/Enumerable_WhereSelectListIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<SelectIterator>d__5`2
#include "System/Linq/Enumerable_-SelectIterator-d__5_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass6_0`1
#include "System/Linq/Enumerable_--c__DisplayClass6_0_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass7_0`3
#include "System/Linq/Enumerable_--c__DisplayClass7_0_3.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<SkipIterator>d__31`1
#include "System/Linq/Enumerable_-SkipIterator-d__31_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ConcatIterator>d__59`1
#include "System/Linq/Enumerable_-ConcatIterator-d__59_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<DistinctIterator>d__68`1
#include "System/Linq/Enumerable_-DistinctIterator-d__68_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ReverseIterator>d__79`1
#include "System/Linq/Enumerable_-ReverseIterator-d__79_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<CastIterator>d__99`1
#include "System/Linq/Enumerable_-CastIterator-d__99_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<RepeatIterator>d__117`1
#include "System/Linq/Enumerable_-RepeatIterator-d__117_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Linq.IOrderedEnumerable`1
#include "System/Linq/IOrderedEnumerable_1.hpp"
// Including type: System.Linq.IGrouping`2
#include "System/Linq/IGrouping_2.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Enumerable.Range
::System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::Range(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.RangeIterator
::System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::RangeIterator(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::RangeIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "RangeIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.Sum
int System::Linq::Enumerable::Sum(::System::Collections::Generic::IEnumerable_1<int>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Sum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Sum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Max
int System::Linq::Enumerable::Max(::System::Collections::Generic::IEnumerable_1<int>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>2__current
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 start
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__start
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__count
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerator<System.Int32>.get_Current
int System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Int32>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.IDisposable.Dispose
void System::Linq::Enumerable::$RangeIterator$d__115::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.MoveNext
bool System::Linq::Enumerable::$RangeIterator$d__115::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.Reset
void System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<int>* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerable$System_Int32$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Util.MonoPInvokeCallbackAttribute
#include "Mono/Util/MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IriHelper
#include "System/IriHelper.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar unicode, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, isQuery);
}
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar highSurr, ::Il2CppChar lowSurr, ByRef<bool> surrogatePair, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurr), ::il2cpp_utils::ExtractType(lowSurr), ::il2cpp_utils::ExtractType(surrogatePair), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, highSurr, lowSurr, byref(surrogatePair), isQuery);
}
// Autogenerated method: System.IriHelper.CheckIsReserved
bool System::IriHelper::CheckIsReserved(::Il2CppChar ch, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIsReserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIsReserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, component);
}
// Autogenerated method: System.IriHelper.EscapeUnescapeIri
::StringW System::IriHelper::EscapeUnescapeIri(::Il2CppChar* pInput, int start, int end, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pInput), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pInput, start, end, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Uri/System.UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/System.Offset
#include "System/Uri_Offset.hpp"
// Including type: System.Uri/System.MoreInfo
#include "System/Uri_MoreInfo.hpp"
// Including type: System.Uri/System.Check
#include "System/Uri_Check.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFile
::StringW System::Uri::_get_UriSchemeFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeFile"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFile
void System::Uri::_set_UriSchemeFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFile", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFtp
::StringW System::Uri::_get_UriSchemeFtp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeFtp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeFtp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFtp
void System::Uri::_set_UriSchemeFtp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeFtp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFtp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeGopher
::StringW System::Uri::_get_UriSchemeGopher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeGopher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeGopher"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeGopher
void System::Uri::_set_UriSchemeGopher(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeGopher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeGopher", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttp
::StringW System::Uri::_get_UriSchemeHttp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeHttp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeHttp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttp
void System::Uri::_set_UriSchemeHttp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeHttp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttps
::StringW System::Uri::_get_UriSchemeHttps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeHttps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeHttps"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttps
void System::Uri::_set_UriSchemeHttps(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeHttps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWs
::StringW System::Uri::_get_UriSchemeWs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeWs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeWs"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWs
void System::Uri::_set_UriSchemeWs(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeWs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWs", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWss
::StringW System::Uri::_get_UriSchemeWss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeWss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeWss"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWss
void System::Uri::_set_UriSchemeWss(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeWss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWss", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeMailto
::StringW System::Uri::_get_UriSchemeMailto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeMailto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeMailto"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeMailto
void System::Uri::_set_UriSchemeMailto(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeMailto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeMailto", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNews
::StringW System::Uri::_get_UriSchemeNews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNews"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNews
void System::Uri::_set_UriSchemeNews(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNews", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNntp
::StringW System::Uri::_get_UriSchemeNntp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNntp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNntp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNntp
void System::Uri::_set_UriSchemeNntp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNntp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNntp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetTcp
::StringW System::Uri::_get_UriSchemeNetTcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNetTcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNetTcp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetTcp
void System::Uri::_set_UriSchemeNetTcp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNetTcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetTcp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetPipe
::StringW System::Uri::_get_UriSchemeNetPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNetPipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNetPipe"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetPipe
void System::Uri::_set_UriSchemeNetPipe(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNetPipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetPipe", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String SchemeDelimiter
::StringW System::Uri::_get_SchemeDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_SchemeDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "SchemeDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String SchemeDelimiter
void System::Uri::_set_SchemeDelimiter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_SchemeDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "SchemeDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitialized
bool System::Uri::_get_s_ConfigInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_ConfigInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitialized
void System::Uri::_set_s_ConfigInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_ConfigInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitializing
bool System::Uri::_get_s_ConfigInitializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_ConfigInitializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitializing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitializing
void System::Uri::_set_s_ConfigInitializing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_ConfigInitializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitializing", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriIdnScope s_IdnScope
::System::UriIdnScope System::Uri::_get_s_IdnScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_IdnScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "Uri", "s_IdnScope"));
}
// Autogenerated static field setter
// Set static field: static private System.UriIdnScope s_IdnScope
void System::Uri::_set_s_IdnScope(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_IdnScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IdnScope", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_IriParsing
bool System::Uri::_get_s_IriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_IriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_IriParsing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_IriParsing
void System::Uri::_set_s_IriParsing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_IriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IriParsing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useDotNetRelativeOrAbsolute
bool System::Uri::_get_useDotNetRelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_useDotNetRelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "useDotNetRelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useDotNetRelativeOrAbsolute
void System::Uri::_set_useDotNetRelativeOrAbsolute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_useDotNetRelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "useDotNetRelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsWindowsFileSystem
bool System::Uri::_get_IsWindowsFileSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_IsWindowsFileSystem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "IsWindowsFileSystem"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsWindowsFileSystem
void System::Uri::_set_IsWindowsFileSystem(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_IsWindowsFileSystem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "IsWindowsFileSystem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_initLock
::Il2CppObject* System::Uri::_get_s_initLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_initLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Uri", "s_initLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_initLock
void System::Uri::_set_s_initLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_initLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_initLock", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] HexLowerChars
::ArrayW<::Il2CppChar> System::Uri::_get_HexLowerChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_HexLowerChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Uri", "HexLowerChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] HexLowerChars
void System::Uri::_set_HexLowerChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_HexLowerChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "HexLowerChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _WSchars
::ArrayW<::Il2CppChar> System::Uri::_get__WSchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get__WSchars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Uri", "_WSchars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _WSchars
void System::Uri::_set__WSchars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set__WSchars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "_WSchars", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_String
::StringW& System::Uri::dyn_m_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_String");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_String"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_originalUnicodeString
::StringW& System::Uri::dyn_m_originalUnicodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_originalUnicodeString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalUnicodeString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriParser m_Syntax
::System::UriParser*& System::Uri::dyn_m_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Syntax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Syntax"))->offset;
  return *reinterpret_cast<::System::UriParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_DnsSafeHost
::StringW& System::Uri::dyn_m_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_DnsSafeHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DnsSafeHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri/System.Flags m_Flags
::System::Uri::Flags& System::Uri::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::System::Uri::Flags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri/System.UriInfo m_Info
::System::Uri::UriInfo*& System::Uri::dyn_m_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Info"))->offset;
  return *reinterpret_cast<::System::Uri::UriInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_iriParsing
bool& System::Uri::dyn_m_iriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_iriParsing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_iriParsing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Uri.get_IsImplicitFile
bool System::Uri::get_IsImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsImplicitFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsImplicitFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncOrDosPath
bool System::Uri::get_IsUncOrDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUncOrDosPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUncOrDosPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDosPath
bool System::Uri::get_IsDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsDosPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDosPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncPath
bool System::Uri::get_IsUncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUncPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUncPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostType
::System::Uri::Flags System::Uri::get_HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_HostType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::Flags, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Syntax
::System::UriParser* System::Uri::get_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Syntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Syntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsNotAbsoluteUri
bool System::Uri::get_IsNotAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsNotAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNotAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AllowIdn
bool System::Uri::get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AllowIdn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowIdn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserDrivenParsing
bool System::Uri::get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDrivenParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_SecuredPathIndex
uint16_t System::Uri::get_SecuredPathIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_SecuredPathIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecuredPathIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AbsolutePath
::StringW System::Uri::get_AbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AbsolutePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbsolutePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PrivateAbsolutePath
::StringW System::Uri::get_PrivateAbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_PrivateAbsolutePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateAbsolutePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AbsoluteUri
::StringW System::Uri::get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsFile
bool System::Uri::get_IsFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsLoopback
bool System::Uri::get_IsLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PathAndQuery
::StringW System::Uri::get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_PathAndQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathAndQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUnc
bool System::Uri::get_IsUnc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUnc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_InitializeLock
::Il2CppObject* System::Uri::get_InitializeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_InitializeLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "get_InitializeLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.get_Port
int System::Uri::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Fragment
::StringW System::Uri::get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Fragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Scheme
::StringW System::Uri::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalStringSwitched
bool System::Uri::get_OriginalStringSwitched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_OriginalStringSwitched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalStringSwitched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalString
::StringW System::Uri::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_OriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_DnsSafeHost
::StringW System::Uri::get_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_DnsSafeHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DnsSafeHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsAbsoluteUri
bool System::Uri::get_IsAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserEscaped
bool System::Uri::get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserEscaped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserEscaped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri..cctor
void System::Uri::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.IriParsingStatic
bool System::Uri::IriParsingStatic(::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IriParsingStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IriParsingStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.AllowIdnStatic
bool System::Uri::AllowIdnStatic(::System::UriParser* syntax, ::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::AllowIdnStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowIdnStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, syntax, flags);
}
// Autogenerated method: System.Uri.IsIntranet
bool System::Uri::IsIntranet(::StringW schemeHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsIntranet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIntranet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemeHost)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemeHost);
}
// Autogenerated method: System.Uri.SetUserDrivenParsing
void System::Uri::SetUserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::SetUserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUserDrivenParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.NotAny
bool System::Uri::NotAny(::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::NotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.InFact
bool System::Uri::InFact(::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.StaticNotAny
bool System::Uri::StaticNotAny(::System::Uri::Flags allFlags, ::System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticNotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticNotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allFlags), ::il2cpp_utils::ExtractType(checkFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.StaticInFact
bool System::Uri::StaticInFact(::System::Uri::Flags allFlags, ::System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticInFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticInFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allFlags), ::il2cpp_utils::ExtractType(checkFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.EnsureUriInfo
::System::Uri::UriInfo* System::Uri::EnsureUriInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureUriInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureUriInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::UriInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureParseRemaining
void System::Uri::EnsureParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureParseRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureParseRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureHostString
void System::Uri::EnsureHostString(bool allowDnsOptimization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureHostString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureHostString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowDnsOptimization)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allowDnsOptimization);
}
// Autogenerated method: System.Uri.CreateUri
void System::Uri::CreateUri(::System::Uri* baseUri, ::StringW relativeUri, bool dontEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractType(dontEscape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, relativeUri, dontEscape);
}
// Autogenerated method: System.Uri.GetCombinedString
::System::ParsingError System::Uri::GetCombinedString(::System::Uri* baseUri, ::StringW relativeStr, bool dontEscape, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetCombinedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "GetCombinedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeStr), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeStr, dontEscape, byref(result));
}
// Autogenerated method: System.Uri.GetException
::System::UriFormatException* System::Uri::GetException(::System::ParsingError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriFormatException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, err);
}
// Autogenerated method: System.Uri.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Uri::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.GetObjectData
void System::Uri::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.StaticIsFile
bool System::Uri::StaticIsFile(::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticIsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticIsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.InitializeUriConfig
void System::Uri::InitializeUriConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InitializeUriConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "InitializeUriConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.IsGenDelim
bool System::Uri::IsGenDelim(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsGenDelim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsGenDelim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.IsHexDigit
bool System::Uri::IsHexDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsHexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsHexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.FromHex
int System::Uri::FromHex(::Il2CppChar digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: System.Uri.ParseScheme
::System::ParsingError System::Uri::ParseScheme(::StringW uriString, ByRef<::System::Uri::Flags> flags, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ParseScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, byref(flags), byref(syntax));
}
// Autogenerated method: System.Uri.ParseMinimal
::System::UriFormatException* System::Uri::ParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseMinimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMinimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriFormatException*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimal
::System::ParsingError System::Uri::PrivateParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::PrivateParseMinimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivateParseMinimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimalIri
void System::Uri::PrivateParseMinimalIri(::StringW newHost, uint16_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::PrivateParseMinimalIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivateParseMinimalIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newHost, idx);
}
// Autogenerated method: System.Uri.CreateUriInfo
void System::Uri::CreateUriInfo(::System::Uri::Flags cF) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateUriInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUriInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cF)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cF);
}
// Autogenerated method: System.Uri.CreateHostString
void System::Uri::CreateHostString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHostString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHostString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.CreateHostStringHelper
::StringW System::Uri::CreateHostStringHelper(::StringW str, uint16_t idx, uint16_t end, ByRef<::System::Uri::Flags> flags, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHostStringHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CreateHostStringHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, idx, end, byref(flags), byref(scopeId));
}
// Autogenerated method: System.Uri.GetHostViaCustomSyntax
void System::Uri::GetHostViaCustomSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetHostViaCustomSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHostViaCustomSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.GetParts
::StringW System::Uri::GetParts(::System::UriComponents uriParts, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.GetEscapedParts
::StringW System::Uri::GetEscapedParts(::System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetEscapedParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEscapedParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.GetUnescapedParts
::StringW System::Uri::GetUnescapedParts(::System::UriComponents uriParts, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetUnescapedParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnescapedParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.ReCreateParts
::StringW System::Uri::ReCreateParts(::System::UriComponents parts, uint16_t nonCanonical, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ReCreateParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReCreateParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parts), ::il2cpp_utils::ExtractType(nonCanonical), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parts, nonCanonical, formatAs);
}
// Autogenerated method: System.Uri.GetUriPartsFromUserString
::StringW System::Uri::GetUriPartsFromUserString(::System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetUriPartsFromUserString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUriPartsFromUserString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.ParseRemaining
void System::Uri::ParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ParseSchemeCheckImplicitFile
uint16_t System::Uri::ParseSchemeCheckImplicitFile(::Il2CppChar* uriString, uint16_t length, ByRef<::System::ParsingError> err, ByRef<::System::Uri::Flags> flags, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseSchemeCheckImplicitFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ParseSchemeCheckImplicitFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, length, byref(err), byref(flags), byref(syntax));
}
// Autogenerated method: System.Uri.CheckKnownSchemes
bool System::Uri::CheckKnownSchemes(int64_t* lptr, uint16_t nChars, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckKnownSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckKnownSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lptr), ::il2cpp_utils::ExtractType(nChars), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lptr, nChars, byref(syntax));
}
// Autogenerated method: System.Uri.CheckSchemeSyntax
::System::ParsingError System::Uri::CheckSchemeSyntax(::Il2CppChar* ptr, uint16_t length, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckSchemeSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, length, byref(syntax));
}
// Autogenerated method: System.Uri.CheckAuthorityHelper
uint16_t System::Uri::CheckAuthorityHelper(::Il2CppChar* pString, uint16_t idx, uint16_t length, ByRef<::System::ParsingError> err, ByRef<::System::Uri::Flags> flags, ::System::UriParser* syntax, ByRef<::StringW> newHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(newHost)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, pString, idx, length, byref(err), byref(flags), syntax, byref(newHost));
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleDnsIri
void System::Uri::CheckAuthorityHelperHandleDnsIri(::Il2CppChar* pString, uint16_t start, int end, int startInput, bool iriParsing, bool hasUnicode, ::System::UriParser* syntax, ::StringW userInfoString, ByRef<::System::Uri::Flags> flags, ByRef<bool> justNormalized, ByRef<::StringW> newHost, ByRef<::System::ParsingError> err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelperHandleDnsIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleDnsIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(startInput), ::il2cpp_utils::ExtractType(iriParsing), ::il2cpp_utils::ExtractType(hasUnicode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(userInfoString), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(justNormalized), ::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(err)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pString, start, end, startInput, iriParsing, hasUnicode, syntax, userInfoString, byref(flags), byref(justNormalized), byref(newHost), byref(err));
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleAnyHostIri
void System::Uri::CheckAuthorityHelperHandleAnyHostIri(::Il2CppChar* pString, int startInput, int end, bool iriParsing, bool hasUnicode, ::System::UriParser* syntax, ByRef<::System::Uri::Flags> flags, ByRef<::StringW> newHost, ByRef<::System::ParsingError> err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelperHandleAnyHostIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleAnyHostIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(startInput), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(iriParsing), ::il2cpp_utils::ExtractType(hasUnicode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(err)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pString, startInput, end, iriParsing, hasUnicode, syntax, byref(flags), byref(newHost), byref(err));
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::StringW input, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::Il2CppChar* str, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.CheckCanonical
::System::Uri::Check System::Uri::CheckCanonical(::Il2CppChar* str, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::Check, false>(this, ___internal__method, str, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.GetCanonicalPath
::ArrayW<::Il2CppChar> System::Uri::GetCanonicalPath(::ArrayW<::Il2CppChar> dest, ByRef<int> pos, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetCanonicalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanonicalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method, dest, byref(pos), formatAs);
}
// Autogenerated method: System.Uri.UnescapeOnly
void System::Uri::UnescapeOnly(::Il2CppChar* pch, int start, ByRef<int> end, ::Il2CppChar ch1, ::Il2CppChar ch2, ::Il2CppChar ch3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UnescapeOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "UnescapeOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pch), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ch1), ::il2cpp_utils::ExtractType(ch2), ::il2cpp_utils::ExtractType(ch3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pch, start, byref(end), ch1, ch2, ch3);
}
// Autogenerated method: System.Uri.Compress
::ArrayW<::Il2CppChar> System::Uri::Compress(::ArrayW<::Il2CppChar> dest, uint16_t start, ByRef<int> destLength, ::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "Compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(destLength), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, start, byref(destLength), syntax);
}
// Autogenerated method: System.Uri.CalculateCaseInsensitiveHashCode
int System::Uri::CalculateCaseInsensitiveHashCode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CalculateCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CalculateCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Uri.CombineUri
::StringW System::Uri::CombineUri(::System::Uri* basePart, ::StringW relativePart, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CombineUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CombineUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basePart), ::il2cpp_utils::ExtractType(relativePart), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, basePart, relativePart, uriFormat);
}
// Autogenerated method: System.Uri.IsLWS
bool System::Uri::IsLWS(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsLWS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsLWS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.IsAsciiLetter
bool System::Uri::IsAsciiLetter(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsAsciiLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsAsciiLetterOrDigit
bool System::Uri::IsAsciiLetterOrDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsAsciiLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsBidiControlCharacter
bool System::Uri::IsBidiControlCharacter(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsBidiControlCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.StripBidiControlCharacter
::StringW System::Uri::StripBidiControlCharacter(::Il2CppChar* strToClean, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StripBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StripBidiControlCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strToClean), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strToClean, start, length);
}
// Autogenerated method: System.Uri.CreateThis
void System::Uri::CreateThis(::StringW uri, bool dontEscape, ::System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateThis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(uriKind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, dontEscape, uriKind);
}
// Autogenerated method: System.Uri.InitializeUri
void System::Uri::InitializeUri(::System::ParsingError err, ::System::UriKind uriKind, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InitializeUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, err, uriKind, byref(e));
}
// Autogenerated method: System.Uri.CheckForConfigLoad
bool System::Uri::CheckForConfigLoad(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForConfigLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForConfigLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForUnicode
bool System::Uri::CheckForUnicode(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForEscapedUnreserved
bool System::Uri::CheckForEscapedUnreserved(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForEscapedUnreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForEscapedUnreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.TryCreate
bool System::Uri::TryCreate(::StringW uriString, ::System::UriKind uriKind, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::TryCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "TryCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, uriKind, byref(result));
}
// Autogenerated method: System.Uri.GetComponents
::StringW System::Uri::GetComponents(::System::UriComponents components, ::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, components, format);
}
// Autogenerated method: System.Uri.UnescapeDataString
::StringW System::Uri::UnescapeDataString(::StringW stringToUnescape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UnescapeDataString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "UnescapeDataString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToUnescape)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringToUnescape);
}
// Autogenerated method: System.Uri.EscapeUnescapeIri
::StringW System::Uri::EscapeUnescapeIri(::StringW input, int start, int end, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, start, end, component);
}
// Autogenerated method: System.Uri.CreateHelper
::System::Uri* System::Uri::CreateHelper(::StringW uriString, bool dontEscape, ::System::UriKind uriKind, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CreateHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, dontEscape, uriKind, byref(e));
}
// Autogenerated method: System.Uri.ResolveHelper
::System::Uri* System::Uri::ResolveHelper(::System::Uri* baseUri, ::System::Uri* relativeUri, ByRef<::StringW> newUriString, ByRef<bool> userEscaped, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ResolveHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ResolveHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractType(newUriString), ::il2cpp_utils::ExtractType(userEscaped), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeUri, byref(newUriString), byref(userEscaped), byref(e));
}
// Autogenerated method: System.Uri.GetRelativeSerializationString
::StringW System::Uri::GetRelativeSerializationString(::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetRelativeSerializationString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRelativeSerializationString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Uri.GetComponentsHelper
::StringW System::Uri::GetComponentsHelper(::System::UriComponents uriComponents, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetComponentsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriComponents), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriComponents, uriFormat);
}
// Autogenerated method: System.Uri.CreateThisFromUri
void System::Uri::CreateThisFromUri(::System::Uri* otherUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateThisFromUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateThisFromUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherUri);
}
// Autogenerated method: System.Uri.GetHashCode
int System::Uri::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ToString
::StringW System::Uri::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.Equals
bool System::Uri::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Uri.op_Equality
bool System::operator ==(::System::Uri* uri1, ::System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri1), ::il2cpp_utils::ExtractType(&uri2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated method: System.Uri.op_Inequality
bool System::operator !=(::System::Uri* uri1, ::System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri1), ::il2cpp_utils::ExtractType(&uri2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.Flags
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags Zero
::System::Uri::Flags System::Uri::Flags::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags Zero
void System::Uri::Flags::_set_Zero(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags SchemeNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_SchemeNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_SchemeNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "SchemeNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags SchemeNotCanonical
void System::Uri::Flags::_set_SchemeNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_SchemeNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "SchemeNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserNotCanonical
void System::Uri::Flags::_set_UserNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostNotCanonical
void System::Uri::Flags::_set_HostNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags PortNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags PortNotCanonical
void System::Uri::Flags::_set_PortNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags PathNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags PathNotCanonical
void System::Uri::Flags::_set_PathNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags QueryNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags QueryNotCanonical
void System::Uri::Flags::_set_QueryNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags FragmentNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags FragmentNotCanonical
void System::Uri::Flags::_set_FragmentNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags CannotDisplayCanonical
::System::Uri::Flags System::Uri::Flags::_get_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags CannotDisplayCanonical
void System::Uri::Flags::_set_CannotDisplayCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_UserNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_UserNotCanonical
void System::Uri::Flags::_set_E_UserNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_HostNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_HostNotCanonical
void System::Uri::Flags::_set_E_HostNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_PortNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_PortNotCanonical
void System::Uri::Flags::_set_E_PortNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_PathNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_PathNotCanonical
void System::Uri::Flags::_set_E_PathNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_QueryNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_QueryNotCanonical
void System::Uri::Flags::_set_E_QueryNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_FragmentNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_FragmentNotCanonical
void System::Uri::Flags::_set_E_FragmentNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_CannotDisplayCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_CannotDisplayCanonical
void System::Uri::Flags::_set_E_CannotDisplayCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags ShouldBeCompressed
::System::Uri::Flags System::Uri::Flags::_get_ShouldBeCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ShouldBeCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ShouldBeCompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags ShouldBeCompressed
void System::Uri::Flags::_set_ShouldBeCompressed(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ShouldBeCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ShouldBeCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags FirstSlashAbsent
::System::Uri::Flags System::Uri::Flags::_get_FirstSlashAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FirstSlashAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FirstSlashAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags FirstSlashAbsent
void System::Uri::Flags::_set_FirstSlashAbsent(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FirstSlashAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FirstSlashAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags BackslashInPath
::System::Uri::Flags System::Uri::Flags::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags BackslashInPath
void System::Uri::Flags::_set_BackslashInPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IndexMask
::System::Uri::Flags System::Uri::Flags::_get_IndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IndexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IndexMask
void System::Uri::Flags::_set_IndexMask(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IndexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostTypeMask
::System::Uri::Flags System::Uri::Flags::_get_HostTypeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostTypeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostTypeMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostTypeMask
void System::Uri::Flags::_set_HostTypeMask(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostTypeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostTypeMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostNotParsed
::System::Uri::Flags System::Uri::Flags::_get_HostNotParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostNotParsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostNotParsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostNotParsed
void System::Uri::Flags::_set_HostNotParsed(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostNotParsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotParsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IPv6HostType
::System::Uri::Flags System::Uri::Flags::_get_IPv6HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IPv6HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IPv6HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IPv6HostType
void System::Uri::Flags::_set_IPv6HostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IPv6HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv6HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IPv4HostType
::System::Uri::Flags System::Uri::Flags::_get_IPv4HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IPv4HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IPv4HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IPv4HostType
void System::Uri::Flags::_set_IPv4HostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IPv4HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv4HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags DnsHostType
::System::Uri::Flags System::Uri::Flags::_get_DnsHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_DnsHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "DnsHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags DnsHostType
void System::Uri::Flags::_set_DnsHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_DnsHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DnsHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UncHostType
::System::Uri::Flags System::Uri::Flags::_get_UncHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UncHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UncHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UncHostType
void System::Uri::Flags::_set_UncHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UncHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags BasicHostType
::System::Uri::Flags System::Uri::Flags::_get_BasicHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_BasicHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "BasicHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags BasicHostType
void System::Uri::Flags::_set_BasicHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_BasicHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BasicHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UnusedHostType
::System::Uri::Flags System::Uri::Flags::_get_UnusedHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnusedHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnusedHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UnusedHostType
void System::Uri::Flags::_set_UnusedHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnusedHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnusedHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UnknownHostType
::System::Uri::Flags System::Uri::Flags::_get_UnknownHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnknownHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnknownHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UnknownHostType
void System::Uri::Flags::_set_UnknownHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnknownHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnknownHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserEscaped
::System::Uri::Flags System::Uri::Flags::_get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserEscaped
void System::Uri::Flags::_set_UserEscaped(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags AuthorityFound
::System::Uri::Flags System::Uri::Flags::_get_AuthorityFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_AuthorityFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "AuthorityFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags AuthorityFound
void System::Uri::Flags::_set_AuthorityFound(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_AuthorityFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AuthorityFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HasUserInfo
::System::Uri::Flags System::Uri::Flags::_get_HasUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HasUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HasUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HasUserInfo
void System::Uri::Flags::_set_HasUserInfo(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HasUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags LoopbackHost
::System::Uri::Flags System::Uri::Flags::_get_LoopbackHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_LoopbackHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "LoopbackHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags LoopbackHost
void System::Uri::Flags::_set_LoopbackHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_LoopbackHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "LoopbackHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags NotDefaultPort
::System::Uri::Flags System::Uri::Flags::_get_NotDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_NotDefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "NotDefaultPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags NotDefaultPort
void System::Uri::Flags::_set_NotDefaultPort(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_NotDefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "NotDefaultPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserDrivenParsing
::System::Uri::Flags System::Uri::Flags::_get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserDrivenParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserDrivenParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserDrivenParsing
void System::Uri::Flags::_set_UserDrivenParsing(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserDrivenParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserDrivenParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags CanonicalDnsHost
::System::Uri::Flags System::Uri::Flags::_get_CanonicalDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CanonicalDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CanonicalDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags CanonicalDnsHost
void System::Uri::Flags::_set_CanonicalDnsHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CanonicalDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CanonicalDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags ErrorOrParsingRecursion
::System::Uri::Flags System::Uri::Flags::_get_ErrorOrParsingRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ErrorOrParsingRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ErrorOrParsingRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags ErrorOrParsingRecursion
void System::Uri::Flags::_set_ErrorOrParsingRecursion(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ErrorOrParsingRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ErrorOrParsingRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags DosPath
::System::Uri::Flags System::Uri::Flags::_get_DosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_DosPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "DosPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags DosPath
void System::Uri::Flags::_set_DosPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_DosPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DosPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UncPath
::System::Uri::Flags System::Uri::Flags::_get_UncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UncPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UncPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UncPath
void System::Uri::Flags::_set_UncPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UncPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags ImplicitFile
::System::Uri::Flags System::Uri::Flags::_get_ImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ImplicitFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ImplicitFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags ImplicitFile
void System::Uri::Flags::_set_ImplicitFile(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ImplicitFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ImplicitFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags MinimalUriInfoSet
::System::Uri::Flags System::Uri::Flags::_get_MinimalUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_MinimalUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "MinimalUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags MinimalUriInfoSet
void System::Uri::Flags::_set_MinimalUriInfoSet(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_MinimalUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "MinimalUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags AllUriInfoSet
::System::Uri::Flags System::Uri::Flags::_get_AllUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_AllUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "AllUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags AllUriInfoSet
void System::Uri::Flags::_set_AllUriInfoSet(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_AllUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AllUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IdnHost
::System::Uri::Flags System::Uri::Flags::_get_IdnHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IdnHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IdnHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IdnHost
void System::Uri::Flags::_set_IdnHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IdnHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IdnHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HasUnicode
::System::Uri::Flags System::Uri::Flags::_get_HasUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HasUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HasUnicode"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HasUnicode
void System::Uri::Flags::_set_HasUnicode(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HasUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostUnicodeNormalized
::System::Uri::Flags System::Uri::Flags::_get_HostUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostUnicodeNormalized
void System::Uri::Flags::_set_HostUnicodeNormalized(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags RestUnicodeNormalized
::System::Uri::Flags System::Uri::Flags::_get_RestUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_RestUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "RestUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags RestUnicodeNormalized
void System::Uri::Flags::_set_RestUnicodeNormalized(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_RestUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "RestUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UnicodeHost
::System::Uri::Flags System::Uri::Flags::_get_UnicodeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnicodeHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnicodeHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UnicodeHost
void System::Uri::Flags::_set_UnicodeHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnicodeHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnicodeHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IntranetUri
::System::Uri::Flags System::Uri::Flags::_get_IntranetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IntranetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IntranetUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IntranetUri
void System::Uri::Flags::_set_IntranetUri(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IntranetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IntranetUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UseOrigUncdStrOffset
::System::Uri::Flags System::Uri::Flags::_get_UseOrigUncdStrOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UseOrigUncdStrOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UseOrigUncdStrOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UseOrigUncdStrOffset
void System::Uri::Flags::_set_UseOrigUncdStrOffset(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UseOrigUncdStrOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UseOrigUncdStrOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_UserIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserIriCanonical
void System::Uri::Flags::_set_UserIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags PathIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_PathIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PathIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PathIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags PathIriCanonical
void System::Uri::Flags::_set_PathIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PathIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags QueryIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_QueryIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_QueryIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "QueryIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags QueryIriCanonical
void System::Uri::Flags::_set_QueryIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_QueryIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags FragmentIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_FragmentIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FragmentIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FragmentIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags FragmentIriCanonical
void System::Uri::Flags::_set_FragmentIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FragmentIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IriCanonical
::System::Uri::Flags System::Uri::Flags::_get_IriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IriCanonical
void System::Uri::Flags::_set_IriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags CompressedSlashes
::System::Uri::Flags System::Uri::Flags::_get_CompressedSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CompressedSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CompressedSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags CompressedSlashes
void System::Uri::Flags::_set_CompressedSlashes(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CompressedSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CompressedSlashes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
uint64_t& System::Uri::Flags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/System.MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Host
::StringW& System::Uri::UriInfo::dyn_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_Host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ScopeId
::StringW& System::Uri::UriInfo::dyn_ScopeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_ScopeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScopeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String String
::StringW& System::Uri::UriInfo::dyn_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_String");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "String"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri/System.Offset Offset
::System::Uri::Offset& System::Uri::UriInfo::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::System::Uri::Offset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DnsSafeHost
::StringW& System::Uri::UriInfo::dyn_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_DnsSafeHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DnsSafeHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri/System.MoreInfo MoreInfo
::System::Uri::MoreInfo*& System::Uri::UriInfo::dyn_MoreInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_MoreInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoreInfo"))->offset;
  return *reinterpret_cast<::System::Uri::MoreInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Path
::StringW& System::Uri::MoreInfo::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Fragment
::StringW& System::Uri::MoreInfo::dyn_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Fragment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fragment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AbsoluteUri
::StringW& System::Uri::MoreInfo::dyn_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_AbsoluteUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AbsoluteUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Hash
int& System::Uri::MoreInfo::dyn_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RemoteUrl
::StringW& System::Uri::MoreInfo::dyn_RemoteUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_RemoteUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.Check
#include "System/Uri_Check.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check None
::System::Uri::Check System::Uri::Check::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check None
void System::Uri::Check::_set_None(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check EscapedCanonical
::System::Uri::Check System::Uri::Check::_get_EscapedCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_EscapedCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "EscapedCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check EscapedCanonical
void System::Uri::Check::_set_EscapedCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_EscapedCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "EscapedCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check DisplayCanonical
::System::Uri::Check System::Uri::Check::_get_DisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check DisplayCanonical
void System::Uri::Check::_set_DisplayCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check DotSlashAttn
::System::Uri::Check System::Uri::Check::_get_DotSlashAttn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DotSlashAttn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DotSlashAttn"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check DotSlashAttn
void System::Uri::Check::_set_DotSlashAttn(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DotSlashAttn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashAttn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check DotSlashEscaped
::System::Uri::Check System::Uri::Check::_get_DotSlashEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DotSlashEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DotSlashEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check DotSlashEscaped
void System::Uri::Check::_set_DotSlashEscaped(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DotSlashEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check BackslashInPath
::System::Uri::Check System::Uri::Check::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check BackslashInPath
void System::Uri::Check::_set_BackslashInPath(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check ReservedFound
::System::Uri::Check System::Uri::Check::_get_ReservedFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_ReservedFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "ReservedFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check ReservedFound
void System::Uri::Check::_set_ReservedFound(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_ReservedFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "ReservedFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check NotIriCanonical
::System::Uri::Check System::Uri::Check::_get_NotIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_NotIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "NotIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check NotIriCanonical
void System::Uri::Check::_set_NotIriCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_NotIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "NotIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check FoundNonAscii
::System::Uri::Check System::Uri::Check::_get_FoundNonAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_FoundNonAscii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "FoundNonAscii"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check FoundNonAscii
void System::Uri::Check::_set_FoundNonAscii(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_FoundNonAscii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "FoundNonAscii", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Uri::Check::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriFormatException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::UriFormatException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormatException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriKind
#include "System/UriKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriKind RelativeOrAbsolute
::System::UriKind System::UriKind::_get_RelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_RelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "RelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind RelativeOrAbsolute
void System::UriKind::_set_RelativeOrAbsolute(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_RelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "RelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Absolute
::System::UriKind System::UriKind::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Absolute
void System::UriKind::_set_Absolute(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Relative
::System::UriKind System::UriKind::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Relative
void System::UriKind::_set_Relative(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Relative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::UriKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriComponents Scheme
::System::UriComponents System::UriComponents::_get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Scheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Scheme"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Scheme
void System::UriComponents::_set_Scheme(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Scheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Scheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents UserInfo
::System::UriComponents System::UriComponents::_get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_UserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "UserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents UserInfo
void System::UriComponents::_set_UserInfo(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_UserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "UserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Host
::System::UriComponents System::UriComponents::_get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Host
void System::UriComponents::_set_Host(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Port
::System::UriComponents System::UriComponents::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Port
void System::UriComponents::_set_Port(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Path
::System::UriComponents System::UriComponents::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Path
void System::UriComponents::_set_Path(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Query
::System::UriComponents System::UriComponents::_get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Query");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Query"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Query
void System::UriComponents::_set_Query(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Query");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Query", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Fragment
::System::UriComponents System::UriComponents::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Fragment
void System::UriComponents::_set_Fragment(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongPort
::System::UriComponents System::UriComponents::_get_StrongPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_StrongPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "StrongPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongPort
void System::UriComponents::_set_StrongPort(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_StrongPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents NormalizedHost
::System::UriComponents System::UriComponents::_get_NormalizedHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_NormalizedHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "NormalizedHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents NormalizedHost
void System::UriComponents::_set_NormalizedHost(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_NormalizedHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "NormalizedHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents KeepDelimiter
::System::UriComponents System::UriComponents::_get_KeepDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_KeepDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "KeepDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents KeepDelimiter
void System::UriComponents::_set_KeepDelimiter(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_KeepDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "KeepDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SerializationInfoString
::System::UriComponents System::UriComponents::_get_SerializationInfoString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_SerializationInfoString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "SerializationInfoString"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SerializationInfoString
void System::UriComponents::_set_SerializationInfoString(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_SerializationInfoString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SerializationInfoString", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents AbsoluteUri
::System::UriComponents System::UriComponents::_get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_AbsoluteUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "AbsoluteUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents AbsoluteUri
void System::UriComponents::_set_AbsoluteUri(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_AbsoluteUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "AbsoluteUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HostAndPort
::System::UriComponents System::UriComponents::_get_HostAndPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_HostAndPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "HostAndPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HostAndPort
void System::UriComponents::_set_HostAndPort(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_HostAndPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HostAndPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongAuthority
::System::UriComponents System::UriComponents::_get_StrongAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_StrongAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "StrongAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongAuthority
void System::UriComponents::_set_StrongAuthority(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_StrongAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SchemeAndServer
::System::UriComponents System::UriComponents::_get_SchemeAndServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_SchemeAndServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "SchemeAndServer"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SchemeAndServer
void System::UriComponents::_set_SchemeAndServer(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_SchemeAndServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SchemeAndServer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HttpRequestUrl
::System::UriComponents System::UriComponents::_get_HttpRequestUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_HttpRequestUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "HttpRequestUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HttpRequestUrl
void System::UriComponents::_set_HttpRequestUrl(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_HttpRequestUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HttpRequestUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents PathAndQuery
::System::UriComponents System::UriComponents::_get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_PathAndQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "PathAndQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents PathAndQuery
void System::UriComponents::_set_PathAndQuery(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_PathAndQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "PathAndQuery", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::UriComponents::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriFormat UriEscaped
::System::UriFormat System::UriFormat::_get_UriEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_UriEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "UriEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat UriEscaped
void System::UriFormat::_set_UriEscaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_UriEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "UriEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat Unescaped
::System::UriFormat System::UriFormat::_get_Unescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_Unescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "Unescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat Unescaped
void System::UriFormat::_set_Unescaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_Unescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "Unescaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat SafeUnescaped
::System::UriFormat System::UriFormat::_get_SafeUnescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_SafeUnescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "SafeUnescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat SafeUnescaped
void System::UriFormat::_set_SafeUnescaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_SafeUnescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "SafeUnescaped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::UriFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriIdnScope
#include "System/UriIdnScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope None
::System::UriIdnScope System::UriIdnScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope None
void System::UriIdnScope::_set_None(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope AllExceptIntranet
::System::UriIdnScope System::UriIdnScope::_get_AllExceptIntranet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_AllExceptIntranet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "AllExceptIntranet"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope AllExceptIntranet
void System::UriIdnScope::_set_AllExceptIntranet(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_AllExceptIntranet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "AllExceptIntranet", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope All
::System::UriIdnScope System::UriIdnScope::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope All
void System::UriIdnScope::_set_All(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::UriIdnScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParsingError None
::System::ParsingError System::ParsingError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError None
void System::ParsingError::_set_None(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadFormat
::System::ParsingError System::ParsingError::_get_BadFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadFormat
void System::ParsingError::_set_BadFormat(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadScheme
::System::ParsingError System::ParsingError::_get_BadScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadScheme"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadScheme
void System::ParsingError::_set_BadScheme(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadScheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthority
::System::ParsingError System::ParsingError::_get_BadAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthority
void System::ParsingError::_set_BadAuthority(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError EmptyUriString
::System::ParsingError System::ParsingError::_get_EmptyUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_EmptyUriString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "EmptyUriString"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError EmptyUriString
void System::ParsingError::_set_EmptyUriString(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_EmptyUriString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "EmptyUriString", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError LastRelativeUriOkErrIndex
::System::ParsingError System::ParsingError::_get_LastRelativeUriOkErrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_LastRelativeUriOkErrIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "LastRelativeUriOkErrIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError LastRelativeUriOkErrIndex
void System::ParsingError::_set_LastRelativeUriOkErrIndex(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_LastRelativeUriOkErrIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "LastRelativeUriOkErrIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SchemeLimit
::System::ParsingError System::ParsingError::_get_SchemeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_SchemeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "SchemeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SchemeLimit
void System::ParsingError::_set_SchemeLimit(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_SchemeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SchemeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SizeLimit
::System::ParsingError System::ParsingError::_get_SizeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_SizeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "SizeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SizeLimit
void System::ParsingError::_set_SizeLimit(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_SizeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SizeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError MustRootedPath
::System::ParsingError System::ParsingError::_get_MustRootedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_MustRootedPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "MustRootedPath"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError MustRootedPath
void System::ParsingError::_set_MustRootedPath(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_MustRootedPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "MustRootedPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadHostName
::System::ParsingError System::ParsingError::_get_BadHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadHostName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadHostName"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadHostName
void System::ParsingError::_set_BadHostName(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadHostName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadHostName", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError NonEmptyHost
::System::ParsingError System::ParsingError::_get_NonEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_NonEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "NonEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError NonEmptyHost
void System::ParsingError::_set_NonEmptyHost(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_NonEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "NonEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadPort
::System::ParsingError System::ParsingError::_get_BadPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadPort"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadPort
void System::ParsingError::_set_BadPort(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthorityTerminator
::System::ParsingError System::ParsingError::_get_BadAuthorityTerminator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadAuthorityTerminator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadAuthorityTerminator"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthorityTerminator
void System::ParsingError::_set_BadAuthorityTerminator(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadAuthorityTerminator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthorityTerminator", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError CannotCreateRelative
::System::ParsingError System::ParsingError::_get_CannotCreateRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_CannotCreateRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "CannotCreateRelative"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError CannotCreateRelative
void System::ParsingError::_set_CannotCreateRelative(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_CannotCreateRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "CannotCreateRelative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::ParsingError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode CopyOnly
::System::UnescapeMode System::UnescapeMode::_get_CopyOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_CopyOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "CopyOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode CopyOnly
void System::UnescapeMode::_set_CopyOnly(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_CopyOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "CopyOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Escape
::System::UnescapeMode System::UnescapeMode::_get_Escape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_Escape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "Escape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Escape
void System::UnescapeMode::_set_Escape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_Escape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Escape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Unescape
::System::UnescapeMode System::UnescapeMode::_get_Unescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_Unescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "Unescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Unescape
void System::UnescapeMode::_set_Unescape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_Unescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Unescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode EscapeUnescape
::System::UnescapeMode System::UnescapeMode::_get_EscapeUnescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_EscapeUnescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "EscapeUnescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode EscapeUnescape
void System::UnescapeMode::_set_EscapeUnescape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_EscapeUnescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "EscapeUnescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode V1ToStringFlag
::System::UnescapeMode System::UnescapeMode::_get_V1ToStringFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_V1ToStringFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "V1ToStringFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode V1ToStringFlag
void System::UnescapeMode::_set_V1ToStringFlag(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_V1ToStringFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "V1ToStringFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAll
::System::UnescapeMode System::UnescapeMode::_get_UnescapeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_UnescapeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "UnescapeAll"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAll
void System::UnescapeMode::_set_UnescapeAll(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_UnescapeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAllOrThrow
::System::UnescapeMode System::UnescapeMode::_get_UnescapeAllOrThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_UnescapeAllOrThrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "UnescapeAllOrThrow"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAllOrThrow
void System::UnescapeMode::_set_UnescapeAllOrThrow(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_UnescapeAllOrThrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAllOrThrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::UnescapeMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriHelper
#include "System/UriHelper.hpp"
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] HexUpperChars
::ArrayW<::Il2CppChar> System::UriHelper::_get_HexUpperChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::_get_HexUpperChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "UriHelper", "HexUpperChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] HexUpperChars
void System::UriHelper::_set_HexUpperChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::_set_HexUpperChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHelper", "HexUpperChars", value));
}
// Autogenerated method: System.UriHelper..cctor
void System::UriHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriHelper.EscapeString
::ArrayW<::Il2CppChar> System::UriHelper::EscapeString(::StringW input, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPos, bool isUriString, ::Il2CppChar force1, ::Il2CppChar force2, ::Il2CppChar rsvd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(isUriString), ::il2cpp_utils::ExtractType(force1), ::il2cpp_utils::ExtractType(force2), ::il2cpp_utils::ExtractType(rsvd)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, start, end, dest, byref(destPos), isUriString, force1, force2, rsvd);
}
// Autogenerated method: System.UriHelper.EnsureDestinationSize
::ArrayW<::Il2CppChar> System::UriHelper::EnsureDestinationSize(::Il2CppChar* pStr, ::ArrayW<::Il2CppChar> dest, int currentInputPos, int16_t charsToAdd, int16_t minReallocateChars, ByRef<int> destPos, int prevInputPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EnsureDestinationSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EnsureDestinationSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStr), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(currentInputPos), ::il2cpp_utils::ExtractType(charsToAdd), ::il2cpp_utils::ExtractType(minReallocateChars), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(prevInputPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStr, dest, currentInputPos, charsToAdd, minReallocateChars, byref(destPos), prevInputPos);
}
// Autogenerated method: System.UriHelper.UnescapeString
::ArrayW<::Il2CppChar> System::UriHelper::UnescapeString(::StringW input, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, ::System::UnescapeMode unescapeMode, ::System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPosition), ::il2cpp_utils::ExtractType(rsvd1), ::il2cpp_utils::ExtractType(rsvd2), ::il2cpp_utils::ExtractType(rsvd3), ::il2cpp_utils::ExtractType(unescapeMode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, start, end, dest, byref(destPosition), rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.UnescapeString
::ArrayW<::Il2CppChar> System::UriHelper::UnescapeString(::Il2CppChar* pStr, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, ::System::UnescapeMode unescapeMode, ::System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStr), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPosition), ::il2cpp_utils::ExtractType(rsvd1), ::il2cpp_utils::ExtractType(rsvd2), ::il2cpp_utils::ExtractType(rsvd3), ::il2cpp_utils::ExtractType(unescapeMode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStr, start, end, dest, byref(destPosition), rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.MatchUTF8Sequence
void System::UriHelper::MatchUTF8Sequence(::Il2CppChar* pDest, ::ArrayW<::Il2CppChar> dest, ByRef<int> destOffset, ::ArrayW<::Il2CppChar> unescapedChars, int charCount, ::ArrayW<uint8_t> bytes, int byteCount, bool isQuery, bool iriParsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::MatchUTF8Sequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "MatchUTF8Sequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDest), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destOffset), ::il2cpp_utils::ExtractType(unescapedChars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(isQuery), ::il2cpp_utils::ExtractType(iriParsing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDest, dest, byref(destOffset), unescapedChars, charCount, bytes, byteCount, isQuery, iriParsing);
}
// Autogenerated method: System.UriHelper.EscapeAsciiChar
void System::UriHelper::EscapeAsciiChar(::Il2CppChar ch, ::ArrayW<::Il2CppChar> to, ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapeAsciiChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeAsciiChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, to, byref(pos));
}
// Autogenerated method: System.UriHelper.EscapedAscii
::Il2CppChar System::UriHelper::EscapedAscii(::Il2CppChar digit, ::Il2CppChar next) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapedAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapedAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit), ::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit, next);
}
// Autogenerated method: System.UriHelper.IsNotSafeForUnescape
bool System::UriHelper::IsNotSafeForUnescape(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsNotSafeForUnescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsNotSafeForUnescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.UriHelper.IsReservedUnreservedOrHash
bool System::UriHelper::IsReservedUnreservedOrHash(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsReservedUnreservedOrHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsReservedUnreservedOrHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.IsUnreserved
bool System::UriHelper::IsUnreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsUnreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsUnreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.Is3986Unreserved
bool System::UriHelper::Is3986Unreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::Is3986Unreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "Is3986Unreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.UriParser/System.BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* System::UriParser::_get_m_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_m_Table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>*>("System", "UriParser", "m_Table")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
void System::UriParser::_set_m_Table(::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_m_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_Table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* System::UriParser::_get_m_TempTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_m_TempTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>*>("System", "UriParser", "m_TempTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
void System::UriParser::_set_m_TempTable(::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_m_TempTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_TempTable", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpUri
::System::UriParser* System::UriParser::_get_HttpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "HttpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpUri
void System::UriParser::_set_HttpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpsUri
::System::UriParser* System::UriParser::_get_HttpsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "HttpsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpsUri
void System::UriParser::_set_HttpsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WsUri
::System::UriParser* System::UriParser::_get_WsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_WsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "WsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WsUri
void System::UriParser::_set_WsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_WsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WssUri
::System::UriParser* System::UriParser::_get_WssUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_WssUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "WssUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WssUri
void System::UriParser::_set_WssUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_WssUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WssUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FtpUri
::System::UriParser* System::UriParser::_get_FtpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FtpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "FtpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FtpUri
void System::UriParser::_set_FtpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FtpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FtpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FileUri
::System::UriParser* System::UriParser::_get_FileUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FileUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "FileUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FileUri
void System::UriParser::_set_FileUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FileUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser GopherUri
::System::UriParser* System::UriParser::_get_GopherUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_GopherUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "GopherUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser GopherUri
void System::UriParser::_set_GopherUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_GopherUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "GopherUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NntpUri
::System::UriParser* System::UriParser::_get_NntpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NntpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NntpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NntpUri
void System::UriParser::_set_NntpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NntpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NntpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NewsUri
::System::UriParser* System::UriParser::_get_NewsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NewsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NewsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NewsUri
void System::UriParser::_set_NewsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NewsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NewsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser MailToUri
::System::UriParser* System::UriParser::_get_MailToUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_MailToUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "MailToUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser MailToUri
void System::UriParser::_set_MailToUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_MailToUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "MailToUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser UuidUri
::System::UriParser* System::UriParser::_get_UuidUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_UuidUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "UuidUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser UuidUri
void System::UriParser::_set_UuidUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_UuidUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "UuidUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser TelnetUri
::System::UriParser* System::UriParser::_get_TelnetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_TelnetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "TelnetUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser TelnetUri
void System::UriParser::_set_TelnetUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_TelnetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "TelnetUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser LdapUri
::System::UriParser* System::UriParser::_get_LdapUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_LdapUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "LdapUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser LdapUri
void System::UriParser::_set_LdapUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_LdapUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "LdapUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetTcpUri
::System::UriParser* System::UriParser::_get_NetTcpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetTcpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NetTcpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetTcpUri
void System::UriParser::_set_NetTcpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetTcpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetTcpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetPipeUri
::System::UriParser* System::UriParser::_get_NetPipeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetPipeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NetPipeUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetPipeUri
void System::UriParser::_set_NetPipeUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetPipeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetPipeUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser VsMacrosUri
::System::UriParser* System::UriParser::_get_VsMacrosUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_VsMacrosUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "VsMacrosUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser VsMacrosUri
void System::UriParser::_set_VsMacrosUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_VsMacrosUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "VsMacrosUri", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriParser/System.UriQuirksVersion s_QuirksVersion
::System::UriParser::UriQuirksVersion System::UriParser::_get_s_QuirksVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_s_QuirksVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser", "s_QuirksVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriParser/System.UriQuirksVersion s_QuirksVersion
void System::UriParser::_set_s_QuirksVersion(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_s_QuirksVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "s_QuirksVersion", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_HttpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "HttpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
void System::UriParser::_set_HttpSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_FileSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FileSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "FileSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
void System::UriParser::_set_FileSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FileSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileSyntaxFlags", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UriSyntaxFlags m_Flags
::System::UriSyntaxFlags& System::UriParser::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::System::UriSyntaxFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriSyntaxFlags m_UpdatableFlags
::System::UriSyntaxFlags& System::UriParser::dyn_m_UpdatableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_UpdatableFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatableFlags"))->offset;
  return *reinterpret_cast<::System::UriSyntaxFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UpdatableFlagsUsed
bool& System::UriParser::dyn_m_UpdatableFlagsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_UpdatableFlagsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatableFlagsUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Port
int& System::UriParser::dyn_m_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Scheme
::StringW& System::UriParser::dyn_m_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Scheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scheme"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UriParser.get_SchemeName
::StringW System::UriParser::get_SchemeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_SchemeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_DefaultPort
int System::UriParser::get_DefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_DefaultPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_ShouldUseLegacyV2Quirks
bool System::UriParser::get_ShouldUseLegacyV2Quirks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_ShouldUseLegacyV2Quirks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "get_ShouldUseLegacyV2Quirks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser.get_Flags
::System::UriSyntaxFlags System::UriParser::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriSyntaxFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_IsSimple
bool System::UriParser::get_IsSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_IsSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser..cctor
void System::UriParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser.OnNewUri
::System::UriParser* System::UriParser::OnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::OnNewUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InitializeAndValidate
void System::UriParser::InitializeAndValidate(::System::Uri* uri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InitializeAndValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAndValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, byref(parsingError));
}
// Autogenerated method: System.UriParser.Resolve
::StringW System::UriParser::Resolve(::System::Uri* baseUri, ::System::Uri* relativeUri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::Resolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, baseUri, relativeUri, byref(parsingError));
}
// Autogenerated method: System.UriParser.GetComponents
::StringW System::UriParser::GetComponents(::System::Uri* uri, ::System::UriComponents components, ::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::GetComponents");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri, components, format);
}
// Autogenerated method: System.UriParser.NotAny
bool System::UriParser::NotAny(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::NotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.InFact
bool System::UriParser::InFact(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsAllSet
bool System::UriParser::IsAllSet(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsAllSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAllSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsFullMatch
bool System::UriParser::IsFullMatch(::System::UriSyntaxFlags flags, ::System::UriSyntaxFlags expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsFullMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFullMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags, expected);
}
// Autogenerated method: System.UriParser.FindOrFetchAsUnknownV1Syntax
::System::UriParser* System::UriParser::FindOrFetchAsUnknownV1Syntax(::StringW lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::FindOrFetchAsUnknownV1Syntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "FindOrFetchAsUnknownV1Syntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lwrCaseScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.InternalOnNewUri
::System::UriParser* System::UriParser::InternalOnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalOnNewUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalOnNewUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalValidate
void System::UriParser::InternalValidate(::System::Uri* thisUri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisUri, byref(parsingError));
}
// Autogenerated method: System.UriParser.InternalResolve
::StringW System::UriParser::InternalResolve(::System::Uri* thisBaseUri, ::System::Uri* uriLink, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisBaseUri), ::il2cpp_utils::ExtractType(uriLink), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, thisBaseUri, uriLink, byref(parsingError));
}
// Autogenerated method: System.UriParser.InternalGetComponents
::StringW System::UriParser::InternalGetComponents(::System::Uri* thisUri, ::System::UriComponents uriComponents, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalGetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri), ::il2cpp_utils::ExtractType(uriComponents), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, thisUri, uriComponents, uriFormat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser/System.UriQuirksVersion
#include "System/UriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriParser/System.UriQuirksVersion V2
::System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V2"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/System.UriQuirksVersion V2
void System::UriParser::UriQuirksVersion::_set_V2(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriParser/System.UriQuirksVersion V3
::System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V3"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/System.UriQuirksVersion V3
void System::UriParser::UriQuirksVersion::_set_V3(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V3", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::UriParser::UriQuirksVersion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser/System.BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DomainNameHelper
#include "System/DomainNameHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DomainNameHelper.ParseCanonicalName
::StringW System::DomainNameHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(loopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(loopback));
}
// Autogenerated method: System.DomainNameHelper.IsValid
bool System::DomainNameHelper::IsValid(::Il2CppChar* name, uint16_t pos, ByRef<int> returnedEnd, ByRef<bool> notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notCanonical), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, pos, byref(returnedEnd), byref(notCanonical), notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IsValidByIri
bool System::DomainNameHelper::IsValidByIri(::Il2CppChar* name, uint16_t pos, ByRef<int> returnedEnd, ByRef<bool> notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValidByIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidByIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notCanonical), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, pos, byref(returnedEnd), byref(notCanonical), notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::StringW System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<bool> atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(atLeastOneValidIdn)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::StringW System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<::StringW> bidiStrippedHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(bidiStrippedHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(bidiStrippedHost));
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::StringW input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppChar* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::StringW System::DomainNameHelper::UnicodeEquivalent(::StringW idnHost, ::Il2CppChar* hostname, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idnHost), ::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idnHost, hostname, start, end);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::StringW System::DomainNameHelper::UnicodeEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<bool> atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(atLeastOneValidIdn)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IsASCIILetterOrDigit
bool System::DomainNameHelper::IsASCIILetterOrDigit(::Il2CppChar character, ByRef<bool> notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsASCIILetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsASCIILetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(notCanonical)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character, byref(notCanonical));
}
// Autogenerated method: System.DomainNameHelper.IsValidDomainLabelCharacter
bool System::DomainNameHelper::IsValidDomainLabelCharacter(::Il2CppChar character, ByRef<bool> notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValidDomainLabelCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidDomainLabelCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(notCanonical)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character, byref(notCanonical));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IPv4AddressHelper
#include "System/IPv4AddressHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv4AddressHelper.ParseCanonicalName
::StringW System::IPv4AddressHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> isLoopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(isLoopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(isLoopback));
}
// Autogenerated method: System.IPv4AddressHelper.ParseHostNumber
int System::IPv4AddressHelper::ParseHostNumber(::StringW str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseHostNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseHostNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.IsValid
bool System::IPv4AddressHelper::IsValid(::Il2CppChar* name, int start, ByRef<int> end, bool allowIPv6, bool notImplicitFile, bool unknownScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allowIPv6), ::il2cpp_utils::ExtractType(notImplicitFile), ::il2cpp_utils::ExtractType(unknownScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), allowIPv6, notImplicitFile, unknownScheme);
}
// Autogenerated method: System.IPv4AddressHelper.IsValidCanonical
bool System::IPv4AddressHelper::IsValidCanonical(::Il2CppChar* name, int start, ByRef<int> end, bool allowIPv6, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::IsValidCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValidCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allowIPv6), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), allowIPv6, notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.ParseNonCanonical
int64_t System::IPv4AddressHelper::ParseNonCanonical(::Il2CppChar* name, int start, ByRef<int> end, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseNonCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseNonCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.Parse
bool System::IPv4AddressHelper::Parse(::StringW name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.ParseCanonical
bool System::IPv4AddressHelper::ParseCanonical(::StringW name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IPv6AddressHelper
#include "System/IPv6AddressHelper.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv6AddressHelper.ParseCanonicalName
::StringW System::IPv6AddressHelper::ParseCanonicalName(::StringW str, int start, ByRef<bool> isLoopback, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(isLoopback), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, byref(isLoopback), byref(scopeId));
}
// Autogenerated method: System.IPv6AddressHelper.CreateCanonicalName
::StringW System::IPv6AddressHelper::CreateCanonicalName(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::CreateCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "CreateCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.FindCompressionRange
::System::Collections::Generic::KeyValuePair_2<int, int> System::IPv6AddressHelper::FindCompressionRange(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::FindCompressionRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "FindCompressionRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<int, int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.ShouldHaveIpv4Embedded
bool System::IPv6AddressHelper::ShouldHaveIpv4Embedded(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::ShouldHaveIpv4Embedded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ShouldHaveIpv4Embedded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.InternalIsValid
bool System::IPv6AddressHelper::InternalIsValid(::Il2CppChar* name, int start, ByRef<int> end, bool validateStrictAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::InternalIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "InternalIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(validateStrictAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), validateStrictAddress);
}
// Autogenerated method: System.IPv6AddressHelper.IsValid
bool System::IPv6AddressHelper::IsValid(::Il2CppChar* name, int start, ByRef<int> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end));
}
// Autogenerated method: System.IPv6AddressHelper.IsValidStrict
bool System::IPv6AddressHelper::IsValidStrict(::Il2CppChar* name, int start, ByRef<int> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::IsValidStrict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValidStrict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end));
}
// Autogenerated method: System.IPv6AddressHelper.Parse
bool System::IPv6AddressHelper::Parse(::StringW address, uint16_t* numbers, int start, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, numbers, start, byref(scopeId));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UncNameHelper
#include "System/UncNameHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UncNameHelper.ParseCanonicalName
::StringW System::UncNameHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UncNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UncNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(loopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(loopback));
}
// Autogenerated method: System.UncNameHelper.IsValid
bool System::UncNameHelper::IsValid(::Il2CppChar* name, uint16_t start, ByRef<int> returnedEnd, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UncNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UncNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(returnedEnd), notImplicitFile);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriSyntaxFlags
#include "System/UriSyntaxFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags None
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags None
void System::UriSyntaxFlags::_set_None(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MustHaveAuthority
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MustHaveAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MustHaveAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MustHaveAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MustHaveAuthority
void System::UriSyntaxFlags::_set_MustHaveAuthority(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MustHaveAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MustHaveAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags OptionalAuthority
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_OptionalAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_OptionalAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "OptionalAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags OptionalAuthority
void System::UriSyntaxFlags::_set_OptionalAuthority(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_OptionalAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "OptionalAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveUserInfo
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveUserInfo
void System::UriSyntaxFlags::_set_MayHaveUserInfo(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePort
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHavePort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePort
void System::UriSyntaxFlags::_set_MayHavePort(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHavePort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHavePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePath
void System::UriSyntaxFlags::_set_MayHavePath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHavePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveQuery
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveQuery
void System::UriSyntaxFlags::_set_MayHaveQuery(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveFragment
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveFragment
void System::UriSyntaxFlags::_set_MayHaveFragment(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowEmptyHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowEmptyHost
void System::UriSyntaxFlags::_set_AllowEmptyHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowUncHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowUncHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowUncHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowUncHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowUncHost
void System::UriSyntaxFlags::_set_AllowUncHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowUncHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowUncHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDnsHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDnsHost
void System::UriSyntaxFlags::_set_AllowDnsHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv4Host
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv4Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIPv4Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv4Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv4Host
void System::UriSyntaxFlags::_set_AllowIPv4Host(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIPv4Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv4Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv6Host
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv6Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIPv6Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv6Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv6Host
void System::UriSyntaxFlags::_set_AllowIPv6Host(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIPv6Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv6Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnInternetHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnInternetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowAnInternetHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnInternetHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnInternetHost
void System::UriSyntaxFlags::_set_AllowAnInternetHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowAnInternetHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnInternetHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnyOtherHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnyOtherHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowAnyOtherHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnyOtherHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnyOtherHost
void System::UriSyntaxFlags::_set_AllowAnyOtherHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowAnyOtherHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnyOtherHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags FileLikeUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_FileLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_FileLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "FileLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags FileLikeUri
void System::UriSyntaxFlags::_set_FileLikeUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_FileLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "FileLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MailToLikeUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MailToLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MailToLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MailToLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MailToLikeUri
void System::UriSyntaxFlags::_set_MailToLikeUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MailToLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MailToLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags V1_UnknownUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_V1_UnknownUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_V1_UnknownUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "V1_UnknownUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags V1_UnknownUri
void System::UriSyntaxFlags::_set_V1_UnknownUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_V1_UnknownUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "V1_UnknownUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags SimpleUserSyntax
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_SimpleUserSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_SimpleUserSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "SimpleUserSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags SimpleUserSyntax
void System::UriSyntaxFlags::_set_SimpleUserSyntax(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_SimpleUserSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "SimpleUserSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags BuiltInSyntax
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_BuiltInSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_BuiltInSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "BuiltInSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags BuiltInSyntax
void System::UriSyntaxFlags::_set_BuiltInSyntax(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_BuiltInSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "BuiltInSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ParserSchemeOnly
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_ParserSchemeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_ParserSchemeOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ParserSchemeOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ParserSchemeOnly
void System::UriSyntaxFlags::_set_ParserSchemeOnly(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_ParserSchemeOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ParserSchemeOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDOSPath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDOSPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowDOSPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDOSPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDOSPath
void System::UriSyntaxFlags::_set_AllowDOSPath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowDOSPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDOSPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags PathIsRooted
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_PathIsRooted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_PathIsRooted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "PathIsRooted"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags PathIsRooted
void System::UriSyntaxFlags::_set_PathIsRooted(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_PathIsRooted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "PathIsRooted", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ConvertPathSlashes
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_ConvertPathSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_ConvertPathSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ConvertPathSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ConvertPathSlashes
void System::UriSyntaxFlags::_set_ConvertPathSlashes(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_ConvertPathSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ConvertPathSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CompressPath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_CompressPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_CompressPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CompressPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CompressPath
void System::UriSyntaxFlags::_set_CompressPath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_CompressPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CompressPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_CanonicalizeAsFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_CanonicalizeAsFilePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CanonicalizeAsFilePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
void System::UriSyntaxFlags::_set_CanonicalizeAsFilePath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_CanonicalizeAsFilePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CanonicalizeAsFilePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
void System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIdn
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIdn"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIdn
void System::UriSyntaxFlags::_set_AllowIdn(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIriParsing
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIriParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIriParsing
void System::UriSyntaxFlags::_set_AllowIriParsing(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIriParsing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::UriSyntaxFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOOperation
#include "System/IOOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IOOperation Read
::System::IOOperation System::IOOperation::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IOOperation>("System", "IOOperation", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Read
void System::IOOperation::_set_Read(::System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IOOperation Write
::System::IOOperation System::IOOperation::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IOOperation>("System", "IOOperation", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Write
void System::IOOperation::_set_Write(::System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Write", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IOOperation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOAsyncCallback.Invoke
void System::IOAsyncCallback::Invoke(::System::IOAsyncResult* ioares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ioares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ioares);
}
// Autogenerated method: System.IOAsyncCallback.BeginInvoke
::System::IAsyncResult* System::IOAsyncCallback::BeginInvoke(::System::IOAsyncResult* ioares, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ioares), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ioares, callback, object);
}
// Autogenerated method: System.IOAsyncCallback.EndInvoke
void System::IOAsyncCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback async_callback
::System::AsyncCallback*& System::IOAsyncResult::dyn_async_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_async_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async_callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object async_state
::Il2CppObject*& System::IOAsyncResult::dyn_async_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_async_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async_state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent wait_handle
::System::Threading::ManualResetEvent*& System::IOAsyncResult::dyn_wait_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_wait_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wait_handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed_synchronously
bool& System::IOAsyncResult::dyn_completed_synchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_completed_synchronously");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed_synchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
bool& System::IOAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncCallback
::System::AsyncCallback* System::IOAsyncResult::get_AsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AsyncCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncState
::Il2CppObject* System::IOAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IOAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_CompletedSynchronously
bool System::IOAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.set_CompletedSynchronously
void System::IOAsyncResult::set_CompletedSynchronously(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::set_CompletedSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.get_IsCompleted
bool System::IOAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.set_IsCompleted
void System::IOAsyncResult::set_IsCompleted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::set_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.CompleteDisposed
void System::IOAsyncResult::CompleteDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::CompleteDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IOOperation operation
::System::IOOperation& System::IOSelectorJob::dyn_operation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_operation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "operation"))->offset;
  return *reinterpret_cast<::System::IOOperation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IOAsyncCallback callback
::System::IOAsyncCallback*& System::IOSelectorJob::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::IOAsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IOAsyncResult state
::System::IOAsyncResult*& System::IOSelectorJob::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::IOAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tae)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.IOSelectorJob.MarkDisposed
void System::IOSelectorJob::MarkDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::MarkDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOSelector
#include "System/IOSelector.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOSelector.Add
void System::IOSelector::Add(::System::IntPtr handle, ::System::IOSelectorJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelector::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IOSelector", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(job)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, job);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriTypeConverter
#include "System/UriTypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Text.RegularExpressions.CachedCodeEntry
#include "System/Text/RegularExpressions/CachedCodeEntry.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan MaximumMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_MaximumMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_MaximumMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "MaximumMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan MaximumMatchTimeout
void System::Text::RegularExpressions::Regex::_set_MaximumMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_MaximumMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "MaximumMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan InfiniteMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan InfiniteMatchTimeout
void System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan FallbackDefaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_FallbackDefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_FallbackDefaultMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "FallbackDefaultMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan FallbackDefaultMatchTimeout
void System::Text::RegularExpressions::Regex::_set_FallbackDefaultMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_FallbackDefaultMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "FallbackDefaultMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan DefaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan DefaultMatchTimeout
void System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.LinkedList`1<System.Text.RegularExpressions.CachedCodeEntry> livecode
::System::Collections::Generic::LinkedList_1<::System::Text::RegularExpressions::CachedCodeEntry*>* System::Text::RegularExpressions::Regex::_get_livecode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_livecode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::LinkedList_1<::System::Text::RegularExpressions::CachedCodeEntry*>*>("System.Text.RegularExpressions", "Regex", "livecode"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.LinkedList`1<System.Text.RegularExpressions.CachedCodeEntry> livecode
void System::Text::RegularExpressions::Regex::_set_livecode(::System::Collections::Generic::LinkedList_1<::System::Text::RegularExpressions::CachedCodeEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_livecode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "livecode", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 cacheSize
int System::Text::RegularExpressions::Regex::_get_cacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_cacheSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "Regex", "cacheSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 cacheSize
void System::Text::RegularExpressions::Regex::_set_cacheSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_cacheSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "cacheSize", value));
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String pattern
::StringW& System::Text::RegularExpressions::Regex::dyn_pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.RegexRunnerFactory factory
::System::Text::RegularExpressions::RegexRunnerFactory*& System::Text::RegularExpressions::Regex::dyn_factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_factory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factory"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunnerFactory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.RegexOptions roptions
::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::Regex::dyn_roptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_roptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roptions"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.TimeSpan internalMatchTimeout
::System::TimeSpan& System::Text::RegularExpressions::Regex::dyn_internalMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_internalMatchTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalMatchTimeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Hashtable caps
::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::dyn_caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Hashtable capnames
::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::dyn_capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String[] capslist
::ArrayW<::StringW>& System::Text::RegularExpressions::Regex::dyn_capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 capsize
int& System::Text::RegularExpressions::Regex::dyn_capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.ExclusiveReference runnerref
::System::Text::RegularExpressions::ExclusiveReference*& System::Text::RegularExpressions::Regex::dyn_runnerref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_runnerref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runnerref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::ExclusiveReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.SharedReference replref
::System::Text::RegularExpressions::SharedReference*& System::Text::RegularExpressions::Regex::dyn_replref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_replref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::SharedReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCode code
::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::Regex::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean refsInitialized
bool& System::Text::RegularExpressions::Regex::dyn_refsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_refsInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refsInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_Options
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::Regex::get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_MatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::get_MatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_MatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_RightToLeft
bool System::Text::RegularExpressions::Regex::get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_RightToLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightToLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex..cctor
void System::Text::RegularExpressions::Regex::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::Regex::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* si, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, si, context);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ValidateMatchTimeout
void System::Text::RegularExpressions::Regex::ValidateMatchTimeout(::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::ValidateMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "ValidateMatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitDefaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "InitDefaultMatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.GroupNameFromNumber
::StringW System::Text::RegularExpressions::Regex::GroupNameFromNumber(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::GroupNameFromNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupNameFromNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Matches
::System::Text::RegularExpressions::MatchCollection* System::Text::RegularExpressions::Regex::Matches(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::MatchCollection*, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Matches
::System::Text::RegularExpressions::MatchCollection* System::Text::RegularExpressions::Regex::Matches(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::MatchCollection*, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::StringW replacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(replacement)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, replacement);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::StringW replacement, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, replacement, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW replacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(replacement)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, replacement);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW replacement, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, replacement, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitializeReferences
void System::Text::RegularExpressions::Regex::InitializeReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::InitializeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Run
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Run(bool quick, int prevlen, ::StringW input, int beginning, int length, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quick), ::il2cpp_utils::ExtractType(prevlen), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(beginning), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick, prevlen, input, beginning, length, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.LookupCachedAndUpdate
::System::Text::RegularExpressions::CachedCodeEntry* System::Text::RegularExpressions::Regex::LookupCachedAndUpdate(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::LookupCachedAndUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "LookupCachedAndUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::CachedCodeEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.CacheCode
::System::Text::RegularExpressions::CachedCodeEntry* System::Text::RegularExpressions::Regex::CacheCode(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CacheCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::CachedCodeEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionR
bool System::Text::RegularExpressions::Regex::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionInvariant
bool System::Text::RegularExpressions::Regex::UseOptionInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::UseOptionInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ToString
::StringW System::Text::RegularExpressions::Regex::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.CachedCodeEntry
#include "System/Text/RegularExpressions/CachedCodeEntry.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _key
::StringW& System::Text::RegularExpressions::CachedCodeEntry::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCode _code
::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::CachedCodeEntry::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
::System::Collections::Hashtable*& System::Text::RegularExpressions::CachedCodeEntry::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _capnames
::System::Collections::Hashtable*& System::Text::RegularExpressions::CachedCodeEntry::dyn__capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _capslist
::ArrayW<::StringW>& System::Text::RegularExpressions::CachedCodeEntry::dyn__capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capsize
int& System::Text::RegularExpressions::CachedCodeEntry::dyn__capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexRunnerFactory _factory
::System::Text::RegularExpressions::RegexRunnerFactory*& System::Text::RegularExpressions::CachedCodeEntry::dyn__factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__factory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_factory"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunnerFactory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.ExclusiveReference _runnerref
::System::Text::RegularExpressions::ExclusiveReference*& System::Text::RegularExpressions::CachedCodeEntry::dyn__runnerref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__runnerref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runnerref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::ExclusiveReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.SharedReference _replref
::System::Text::RegularExpressions::SharedReference*& System::Text::RegularExpressions::CachedCodeEntry::dyn__replref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__replref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::SharedReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexRunner _ref
::System::Text::RegularExpressions::RegexRunner*& System::Text::RegularExpressions::ExclusiveReference::dyn__ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _obj
::Il2CppObject*& System::Text::RegularExpressions::ExclusiveReference::dyn__obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__obj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _locked
int& System::Text::RegularExpressions::ExclusiveReference::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Get
::Il2CppObject* System::Text::RegularExpressions::ExclusiveReference::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Release
void System::Text::RegularExpressions::ExclusiveReference::Release(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.WeakReference _ref
::System::WeakReference*& System::Text::RegularExpressions::SharedReference::dyn__ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::dyn__ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ref"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _locked
int& System::Text::RegularExpressions::SharedReference::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.SharedReference.Get
::Il2CppObject* System::Text::RegularExpressions::SharedReference::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.SharedReference.Cache
void System::Text::RegularExpressions::SharedReference::Cache(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32[] _positive
::ArrayW<int>& System::Text::RegularExpressions::RegexBoyerMoore::dyn__positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__positive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positive"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _negativeASCII
::ArrayW<int>& System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negativeASCII"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[][] _negativeUnicode
::ArrayW<::ArrayW<int>>& System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeUnicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negativeUnicode"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _pattern
::StringW& System::Text::RegularExpressions::RegexBoyerMoore::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _lowASCII
int& System::Text::RegularExpressions::RegexBoyerMoore::dyn__lowASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__lowASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowASCII"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _highASCII
int& System::Text::RegularExpressions::RegexBoyerMoore::dyn__highASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__highASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highASCII"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _rightToLeft
bool& System::Text::RegularExpressions::RegexBoyerMoore::dyn__rightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__rightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _caseInsensitive
bool& System::Text::RegularExpressions::RegexBoyerMoore::dyn__caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureInfo _culture
::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexBoyerMoore::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.MatchPattern
bool System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern(::StringW text, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, index);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.IsMatch
bool System::Text::RegularExpressions::RegexBoyerMoore::IsMatch(::StringW text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(beglimit), ::il2cpp_utils::ExtractType(endlimit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.Scan
int System::Text::RegularExpressions::RegexBoyerMoore::Scan(::StringW text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(beglimit), ::il2cpp_utils::ExtractType(endlimit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.ToString
::StringW System::Text::RegularExpressions::RegexBoyerMoore::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _text
::StringW& System::Text::RegularExpressions::Capture::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _index
int& System::Text::RegularExpressions::Capture::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _length
int& System::Text::RegularExpressions::Capture::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Index
int System::Text::RegularExpressions::Capture::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Length
int System::Text::RegularExpressions::Capture::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Value
::StringW System::Text::RegularExpressions::Capture::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetOriginalString
::StringW System::Text::RegularExpressions::Capture::GetOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetLeftSubstring
::StringW System::Text::RegularExpressions::Capture::GetLeftSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetLeftSubstring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeftSubstring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetRightSubstring
::StringW System::Text::RegularExpressions::Capture::GetRightSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetRightSubstring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRightSubstring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.ToString
::StringW System::Text::RegularExpressions::Capture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String InternalRegexIgnoreCase
::StringW System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String InternalRegexIgnoreCase
void System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Space
::StringW System::Text::RegularExpressions::RegexCharClass::_get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "Space"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Space
void System::Text::RegularExpressions::RegexCharClass::_set_Space(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Space", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotSpace
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotSpace"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotSpace
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpace", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Word
::StringW System::Text::RegularExpressions::RegexCharClass::_get_Word() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_Word");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "Word"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Word
void System::Text::RegularExpressions::RegexCharClass::_set_Word(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_Word");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Word", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotWord
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotWord
void System::Text::RegularExpressions::RegexCharClass::_set_NotWord(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWord", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String SpaceClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String SpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotSpaceClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotSpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String WordClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_WordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_WordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "WordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String WordClass
void System::Text::RegularExpressions::RegexCharClass::_set_WordClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_WordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "WordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotWordClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotWordClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DigitClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_DigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_DigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "DigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_DigitClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_DigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "DigitClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotDigitClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotDigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::Text::RegularExpressions::RegexCharClass::_get__definedCategories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get__definedCategories");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
void System::Text::RegularExpressions::RegexCharClass::_set__definedCategories(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set__definedCategories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[,] _propTable
::ArrayW<::StringW> System::Text::RegularExpressions::RegexCharClass::_get__propTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get__propTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Text.RegularExpressions", "RegexCharClass", "_propTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[,] _propTable
void System::Text::RegularExpressions::RegexCharClass::_set__propTable(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set__propTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_propTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping[] _lcTable
::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping> System::Text::RegularExpressions::RegexCharClass::_get__lcTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get__lcTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>>("System.Text.RegularExpressions", "RegexCharClass", "_lcTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping[] _lcTable
void System::Text::RegularExpressions::RegexCharClass::_set__lcTable(::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set__lcTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_lcTable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange> _rangelist
::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexCharClass::SingleRange*>*& System::Text::RegularExpressions::RegexCharClass::dyn__rangelist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__rangelist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rangelist"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexCharClass::SingleRange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _categories
::System::Text::StringBuilder*& System::Text::RegularExpressions::RegexCharClass::dyn__categories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__categories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_categories"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canonical
bool& System::Text::RegularExpressions::RegexCharClass::dyn__canonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__canonical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canonical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _negate
bool& System::Text::RegularExpressions::RegexCharClass::dyn__negate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__negate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexCharClass _subtractor
::System::Text::RegularExpressions::RegexCharClass*& System::Text::RegularExpressions::RegexCharClass::dyn__subtractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__subtractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subtractor"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCharClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.get_CanMerge
bool System::Text::RegularExpressions::RegexCharClass::get_CanMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::get_CanMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.set_Negate
void System::Text::RegularExpressions::RegexCharClass::set_Negate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::set_Negate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Negate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..cctor
void System::Text::RegularExpressions::RegexCharClass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddChar
void System::Text::RegularExpressions::RegexCharClass::AddChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCharClass
void System::Text::RegularExpressions::RegexCharClass::AddCharClass(::System::Text::RegularExpressions::RegexCharClass* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSet
void System::Text::RegularExpressions::RegexCharClass::AddSet(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSubtraction
void System::Text::RegularExpressions::RegexCharClass::AddSubtraction(::System::Text::RegularExpressions::RegexCharClass* sub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSubtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSubtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sub);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddRange
void System::Text::RegularExpressions::RegexCharClass::AddRange(::Il2CppChar first, ::Il2CppChar last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first, last);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName
void System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName(::StringW categoryName, bool invert, bool caseInsensitive, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCategoryFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(categoryName), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(caseInsensitive), ::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, categoryName, invert, caseInsensitive, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategory
void System::Text::RegularExpressions::RegexCharClass::AddCategory(::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercase
void System::Text::RegularExpressions::RegexCharClass::AddLowercase(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddLowercase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLowercase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercaseRange
void System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange(::Il2CppChar chMin, ::Il2CppChar chMax, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLowercaseRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chMin), ::il2cpp_utils::ExtractType(chMax), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chMin, chMax, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddWord
void System::Text::RegularExpressions::RegexCharClass::AddWord(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSpace
void System::Text::RegularExpressions::RegexCharClass::AddSpace(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddDigit
void System::Text::RegularExpressions::RegexCharClass::AddDigit(bool ecma, bool negate, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate), ::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SingletonChar
::Il2CppChar System::Text::RegularExpressions::RegexCharClass::SingletonChar(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingletonChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SingletonChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsMergeable
bool System::Text::RegularExpressions::RegexCharClass::IsMergeable(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsMergeable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsMergeable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsEmpty
bool System::Text::RegularExpressions::RegexCharClass::IsEmpty(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingleton
bool System::Text::RegularExpressions::RegexCharClass::IsSingleton(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSingleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse
bool System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingletonInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSubtraction
bool System::Text::RegularExpressions::RegexCharClass::IsSubtraction(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSubtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSubtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsNegated
bool System::Text::RegularExpressions::RegexCharClass::IsNegated(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsNegated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsNegated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsECMAWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsECMAWordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsWordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsWordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClass
bool System::Text::RegularExpressions::RegexCharClass::CharInClass(::Il2CppChar ch, ::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive
bool System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive(::Il2CppChar ch, ::StringW set, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassInternal
bool System::Text::RegularExpressions::RegexCharClass::CharInClassInternal(::Il2CppChar ch, ::StringW set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClassInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(mySetLength), ::il2cpp_utils::ExtractType(myCategoryLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategory
bool System::Text::RegularExpressions::RegexCharClass::CharInCategory(::Il2CppChar ch, ::StringW set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(mySetLength), ::il2cpp_utils::ExtractType(myCategoryLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup
bool System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup(::Il2CppChar ch, ::System::Globalization::UnicodeCategory chcategory, ::StringW category, ByRef<int> i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategoryGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(chcategory), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, chcategory, category, byref(i));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.NegateCategory
::StringW System::Text::RegularExpressions::RegexCharClass::NegateCategory(::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::NegateCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "NegateCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Parse
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::Parse(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ParseRecursive
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::ParseRecursive(::StringW charClass, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::ParseRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "ParseRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.RangeCount
int System::Text::RegularExpressions::RegexCharClass::RangeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::RangeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RangeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ToStringClass
::StringW System::Text::RegularExpressions::RegexCharClass::ToStringClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::ToStringClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.GetRangeAt
::System::Text::RegularExpressions::RegexCharClass::SingleRange* System::Text::RegularExpressions::RegexCharClass::GetRangeAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::GetRangeAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRangeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass::SingleRange*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Canonicalize
void System::Text::RegularExpressions::RegexCharClass::Canonicalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::Canonicalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Canonicalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SetFromProperty
::StringW System::Text::RegularExpressions::RegexCharClass::SetFromProperty(::StringW capname, bool invert, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SetFromProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SetFromProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capname, invert, pattern);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char _chMin
::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chMin"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char _chMax
::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chMax"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _lcOp
int& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__lcOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__lcOp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lcOp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _data
int& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping..ctor
// ABORTED elsewhere.  System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::LowerCaseMapping(::Il2CppChar chMin, ::Il2CppChar chMax, int lcOp, int data)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRangeComparer.Compare
int System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare(::System::Text::RegularExpressions::RegexCharClass::SingleRange* x, ::System::Text::RegularExpressions::RegexCharClass::SingleRange* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char _first
::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__first() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_first"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char _last
::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_last"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32[] _codes
::ArrayW<int>& System::Text::RegularExpressions::RegexCode::dyn__codes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__codes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _strings
::ArrayW<::StringW>& System::Text::RegularExpressions::RegexCode::dyn__strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _trackcount
int& System::Text::RegularExpressions::RegexCode::dyn__trackcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__trackcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexCode::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capsize
int& System::Text::RegularExpressions::RegexCode::dyn__capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexPrefix _fcPrefix
::System::Text::RegularExpressions::RegexPrefix*& System::Text::RegularExpressions::RegexCode::dyn__fcPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__fcPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fcPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexPrefix**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexBoyerMoore _bmPrefix
::System::Text::RegularExpressions::RegexBoyerMoore*& System::Text::RegularExpressions::RegexCode::dyn__bmPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__bmPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bmPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexBoyerMoore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _anchors
int& System::Text::RegularExpressions::RegexCode::dyn__anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__anchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _rightToLeft
bool& System::Text::RegularExpressions::RegexCode::dyn__rightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__rightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCode.OpcodeBacktracks
bool System::Text::RegularExpressions::RegexCode::OpcodeBacktracks(int Op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::OpcodeBacktracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCode", "OpcodeBacktracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexFCD
#include "System/Text/RegularExpressions/RegexFCD.hpp"
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _intStack
::ArrayW<int>& System::Text::RegularExpressions::RegexFCD::dyn__intStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__intStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intStack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _intDepth
int& System::Text::RegularExpressions::RegexFCD::dyn__intDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__intDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexFC[] _fcStack
::ArrayW<::System::Text::RegularExpressions::RegexFC*>& System::Text::RegularExpressions::RegexFCD::dyn__fcStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__fcStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fcStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Text::RegularExpressions::RegexFC*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _fcDepth
int& System::Text::RegularExpressions::RegexFCD::dyn__fcDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__fcDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fcDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _skipAllChildren
bool& System::Text::RegularExpressions::RegexFCD::dyn__skipAllChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__skipAllChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipAllChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _skipchild
bool& System::Text::RegularExpressions::RegexFCD::dyn__skipchild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__skipchild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipchild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _failed
bool& System::Text::RegularExpressions::RegexFCD::dyn__failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__failed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FirstChars
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::FirstChars(::System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::FirstChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "FirstChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Prefix
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::Prefix(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Anchors
int System::Text::RegularExpressions::RegexFCD::Anchors(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::Anchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Anchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.AnchorFromType
int System::Text::RegularExpressions::RegexFCD::AnchorFromType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::AnchorFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "AnchorFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushInt
void System::Text::RegularExpressions::RegexFCD::PushInt(int I) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PushInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.IntIsEmpty
bool System::Text::RegularExpressions::RegexFCD::IntIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::IntIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopInt
int System::Text::RegularExpressions::RegexFCD::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PopInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushFC
void System::Text::RegularExpressions::RegexFCD::PushFC(::System::Text::RegularExpressions::RegexFC* fc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PushFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FCIsEmpty
bool System::Text::RegularExpressions::RegexFCD::FCIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::FCIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FCIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopFC
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::PopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PopFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.TopFC
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::TopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::TopFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.RegexFCFromRegexTree
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegexFCFromRegexTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.SkipChild
void System::Text::RegularExpressions::RegexFCD::SkipChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::SkipChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.CalculateFC
void System::Text::RegularExpressions::RegexFCD::CalculateFC(int NodeType, ::System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::CalculateFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(NodeType), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(CurIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, NodeType, node, CurIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCharClass _cc
::System::Text::RegularExpressions::RegexCharClass*& System::Text::RegularExpressions::RegexFC::dyn__cc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__cc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cc"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCharClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _nullable
bool& System::Text::RegularExpressions::RegexFC::dyn__nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__nullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _caseInsensitive
bool& System::Text::RegularExpressions::RegexFC::dyn__caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.AddFC
bool System::Text::RegularExpressions::RegexFC::AddFC(::System::Text::RegularExpressions::RegexFC* fc, bool concatenate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::AddFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fc), ::il2cpp_utils::ExtractType(concatenate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fc, concatenate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.GetFirstChars
::StringW System::Text::RegularExpressions::RegexFC::GetFirstChars(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::GetFirstChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.IsCaseInsensitive
bool System::Text::RegularExpressions::RegexFC::IsCaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::IsCaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaseInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.RegexPrefix _empty
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::_get__empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::_get__empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexPrefix*>("System.Text.RegularExpressions", "RegexPrefix", "_empty"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.RegexPrefix _empty
void System::Text::RegularExpressions::RegexPrefix::_set__empty(::System::Text::RegularExpressions::RegexPrefix* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::_set__empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexPrefix", "_empty", value));
}
// Autogenerated instance field getter
// Get instance field: System.String _prefix
::StringW& System::Text::RegularExpressions::RegexPrefix::dyn__prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::dyn__prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _caseInsensitive
bool& System::Text::RegularExpressions::RegexPrefix::dyn__caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::dyn__caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Prefix
::StringW System::Text::RegularExpressions::RegexPrefix::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_CaseInsensitive
bool System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CaseInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Empty
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix..cctor
void System::Text::RegularExpressions::RegexPrefix::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.Group _emptygroup
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::Group::_get__emptygroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::_get__emptygroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Group*>("System.Text.RegularExpressions", "Group", "_emptygroup"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.Group _emptygroup
void System::Text::RegularExpressions::Group::_set__emptygroup(::System::Text::RegularExpressions::Group* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::_set__emptygroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Group", "_emptygroup", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _caps
::ArrayW<int>& System::Text::RegularExpressions::Group::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capcount
int& System::Text::RegularExpressions::Group::dyn__capcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__capcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _name
::StringW& System::Text::RegularExpressions::Group::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Group.get_Success
bool System::Text::RegularExpressions::Group::get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::get_Success");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Success", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Group..cctor
void System::Text::RegularExpressions::Group::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Group", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Match _match
::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::GroupCollection::dyn__match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_match"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _captureMap
::System::Collections::Hashtable*& System::Text::RegularExpressions::GroupCollection::dyn__captureMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__captureMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureMap"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Group[] _groups
::ArrayW<::System::Text::RegularExpressions::Group*>& System::Text::RegularExpressions::GroupCollection::dyn__groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groups"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Text::RegularExpressions::Group*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Count
int System::Text::RegularExpressions::GroupCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Item
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::get_Item(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroup
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroup(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroupImpl
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroupImpl(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetGroupImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.CopyTo
void System::Text::RegularExpressions::GroupCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetEnumerator
::System::Collections::IEnumerator* System::Text::RegularExpressions::GroupCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.GroupEnumerator
#include "System/Text/RegularExpressions/GroupEnumerator.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.GroupCollection _rgc
::System::Text::RegularExpressions::GroupCollection*& System::Text::RegularExpressions::GroupEnumerator::dyn__rgc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::dyn__rgc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgc"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::GroupCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _curindex
int& System::Text::RegularExpressions::GroupEnumerator::dyn__curindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::dyn__curindex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curindex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.get_Current
::Il2CppObject* System::Text::RegularExpressions::GroupEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.get_Capture
::System::Text::RegularExpressions::Capture* System::Text::RegularExpressions::GroupEnumerator::get_Capture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::get_Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Capture*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.MoveNext
bool System::Text::RegularExpressions::GroupEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.Reset
void System::Text::RegularExpressions::GroupEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexInterpreter
#include "System/Text/RegularExpressions/RegexInterpreter.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 runoperator
int& System::Text::RegularExpressions::RegexInterpreter::dyn_runoperator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runoperator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runoperator"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] runcodes
::ArrayW<int>& System::Text::RegularExpressions::RegexInterpreter::dyn_runcodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runcodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcodes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 runcodepos
int& System::Text::RegularExpressions::RegexInterpreter::dyn_runcodepos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runcodepos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcodepos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] runstrings
::ArrayW<::StringW>& System::Text::RegularExpressions::RegexInterpreter::dyn_runstrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runstrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCode runcode
::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::RegexInterpreter::dyn_runcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcode"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexPrefix runfcPrefix
::System::Text::RegularExpressions::RegexPrefix*& System::Text::RegularExpressions::RegexInterpreter::dyn_runfcPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runfcPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runfcPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexPrefix**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexBoyerMoore runbmPrefix
::System::Text::RegularExpressions::RegexBoyerMoore*& System::Text::RegularExpressions::RegexInterpreter::dyn_runbmPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runbmPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runbmPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexBoyerMoore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 runanchors
int& System::Text::RegularExpressions::RegexInterpreter::dyn_runanchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runanchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runanchors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean runrtl
bool& System::Text::RegularExpressions::RegexInterpreter::dyn_runrtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runrtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runrtl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean runci
bool& System::Text::RegularExpressions::RegexInterpreter::dyn_runci() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runci");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runci"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureInfo runculture
::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexInterpreter::dyn_runculture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runculture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runculture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Advance
void System::Text::RegularExpressions::RegexInterpreter::Advance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Advance
void System::Text::RegularExpressions::RegexInterpreter::Advance(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Goto
void System::Text::RegularExpressions::RegexInterpreter::Goto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Goto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Goto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textto
void System::Text::RegularExpressions::RegexInterpreter::Textto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackto
void System::Text::RegularExpressions::RegexInterpreter::Trackto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Trackto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trackto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textstart
int System::Text::RegularExpressions::RegexInterpreter::Textstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textstart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textstart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textpos
int System::Text::RegularExpressions::RegexInterpreter::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackpos
int System::Text::RegularExpressions::RegexInterpreter::Trackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Trackpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trackpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2, int I3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2), ::il2cpp_utils::ExtractType(I3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2, I3);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backtrack
void System::Text::RegularExpressions::RegexInterpreter::Backtrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Backtrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backtrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.SetOperator
void System::Text::RegularExpressions::RegexInterpreter::SetOperator(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::SetOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framesize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framesize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operator
int System::Text::RegularExpressions::RegexInterpreter::Operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Operator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Operator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operand
int System::Text::RegularExpressions::RegexInterpreter::Operand(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Operand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Operand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Leftchars
int System::Text::RegularExpressions::RegexInterpreter::Leftchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Leftchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leftchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Rightchars
int System::Text::RegularExpressions::RegexInterpreter::Rightchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Rightchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rightchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Bump
int System::Text::RegularExpressions::RegexInterpreter::Bump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Bump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardchars
int System::Text::RegularExpressions::RegexInterpreter::Forwardchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Forwardchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Forwardchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardcharnext
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Forwardcharnext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Stringmatch
bool System::Text::RegularExpressions::RegexInterpreter::Stringmatch(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Stringmatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stringmatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Refmatch
bool System::Text::RegularExpressions::RegexInterpreter::Refmatch(int index, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Refmatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refmatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, len);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backwardnext
void System::Text::RegularExpressions::RegexInterpreter::Backwardnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Backwardnext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backwardnext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::CharAt(int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::CharAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(j)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, j);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.InitTrackCount
void System::Text::RegularExpressions::RegexInterpreter::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::InitTrackCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.FindFirstChar
bool System::Text::RegularExpressions::RegexInterpreter::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::FindFirstChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindFirstChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Go
void System::Text::RegularExpressions::RegexInterpreter::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Go");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.Match _empty
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::_get__empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::_get__empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Match*>("System.Text.RegularExpressions", "Match", "_empty"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.Match _empty
void System::Text::RegularExpressions::Match::_set__empty(::System::Text::RegularExpressions::Match* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::_set__empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Match", "_empty", value));
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.GroupCollection _groupcoll
::System::Text::RegularExpressions::GroupCollection*& System::Text::RegularExpressions::Match::dyn__groupcoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__groupcoll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupcoll"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::GroupCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Regex _regex
::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::Match::dyn__regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textbeg
int& System::Text::RegularExpressions::Match::dyn__textbeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textbeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textbeg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textpos
int& System::Text::RegularExpressions::Match::dyn__textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textend
int& System::Text::RegularExpressions::Match::dyn__textend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textend"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textstart
int& System::Text::RegularExpressions::Match::dyn__textstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[][] _matches
::ArrayW<::ArrayW<int>>& System::Text::RegularExpressions::Match::dyn__matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matches"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _matchcount
::ArrayW<int>& System::Text::RegularExpressions::Match::dyn__matchcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__matchcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matchcount"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _balancing
bool& System::Text::RegularExpressions::Match::dyn__balancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__balancing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_balancing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Empty
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Groups
::System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::Match::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::get_Groups");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Reset
void System::Text::RegularExpressions::Match::Reset(::System::Text::RegularExpressions::Regex* regex, ::StringW text, int textbeg, int textend, int textstart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textbeg), ::il2cpp_utils::ExtractType(textend), ::il2cpp_utils::ExtractType(textstart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regex, text, textbeg, textend, textstart);
}
// Autogenerated method: System.Text.RegularExpressions.Match.NextMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::NextMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::NextMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.GroupToStringImpl
::StringW System::Text::RegularExpressions::Match::GroupToStringImpl(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::GroupToStringImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupToStringImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.Match.LastGroupToStringImpl
::StringW System::Text::RegularExpressions::Match::LastGroupToStringImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::LastGroupToStringImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastGroupToStringImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.AddMatch
void System::Text::RegularExpressions::Match::AddMatch(int cap, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::AddMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap, start, len);
}
// Autogenerated method: System.Text.RegularExpressions.Match.BalanceMatch
void System::Text::RegularExpressions::Match::BalanceMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::BalanceMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BalanceMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.RemoveMatch
void System::Text::RegularExpressions::Match::RemoveMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::RemoveMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.IsMatched
bool System::Text::RegularExpressions::Match::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::IsMatched");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchIndex
int System::Text::RegularExpressions::Match::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::MatchIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchLength
int System::Text::RegularExpressions::Match::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::MatchLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Tidy
void System::Text::RegularExpressions::Match::Tidy(int textpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::Tidy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tidy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textpos);
}
// Autogenerated method: System.Text.RegularExpressions.Match..cctor
void System::Text::RegularExpressions::Match::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.MatchSparse
#include "System/Text/RegularExpressions/MatchSparse.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
::System::Collections::Hashtable*& System::Text::RegularExpressions::MatchSparse::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchSparse::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchSparse.get_Groups
::System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::MatchSparse::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchSparse::get_Groups");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 infinite
int System::Text::RegularExpressions::MatchCollection::_get_infinite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::_get_infinite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "MatchCollection", "infinite"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 infinite
void System::Text::RegularExpressions::MatchCollection::_set_infinite(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::_set_infinite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "MatchCollection", "infinite", value));
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Regex _regex
::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::MatchCollection::dyn__regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ArrayList _matches
::System::Collections::ArrayList*& System::Text::RegularExpressions::MatchCollection::dyn__matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matches"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _done
bool& System::Text::RegularExpressions::MatchCollection::dyn__done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _input
::StringW& System::Text::RegularExpressions::MatchCollection::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _beginning
int& System::Text::RegularExpressions::MatchCollection::dyn__beginning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__beginning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beginning"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _length
int& System::Text::RegularExpressions::MatchCollection::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _startat
int& System::Text::RegularExpressions::MatchCollection::dyn__startat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__startat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startat"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _prevlen
int& System::Text::RegularExpressions::MatchCollection::dyn__prevlen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__prevlen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevlen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_Count
int System::Text::RegularExpressions::MatchCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection..cctor
void System::Text::RegularExpressions::MatchCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "MatchCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.GetMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::MatchCollection::GetMatch(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::GetMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.CopyTo
void System::Text::RegularExpressions::MatchCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.GetEnumerator
::System::Collections::IEnumerator* System::Text::RegularExpressions::MatchCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchEnumerator
#include "System/Text/RegularExpressions/MatchEnumerator.hpp"
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.MatchCollection _matchcoll
::System::Text::RegularExpressions::MatchCollection*& System::Text::RegularExpressions::MatchEnumerator::dyn__matchcoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__matchcoll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matchcoll"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::MatchCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Match _match
::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::MatchEnumerator::dyn__match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_match"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _curindex
int& System::Text::RegularExpressions::MatchEnumerator::dyn__curindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__curindex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curindex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _done
bool& System::Text::RegularExpressions::MatchEnumerator::dyn__done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEnumerator.get_Current
::Il2CppObject* System::Text::RegularExpressions::MatchEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEnumerator.MoveNext
bool System::Text::RegularExpressions::MatchEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEnumerator.Reset
void System::Text::RegularExpressions::MatchEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexMatchTimeoutException
#include "System/Text/RegularExpressions/RegexMatchTimeoutException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String regexInput
::StringW& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regexInput"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String regexPattern
::StringW& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regexPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan matchTimeout
::System::TimeSpan& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_matchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_matchTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matchTimeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::RegexMatchTimeoutException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* si, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, si, context);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.Init
void System::Text::RegularExpressions::RegexMatchTimeoutException::Init(::StringW input, ::StringW pattern, ::System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, pattern, timeout);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.Init
void System::Text::RegularExpressions::RegexMatchTimeoutException::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 _type
int& System::Text::RegularExpressions::RegexNode::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexNode> _children
::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexNode*>*& System::Text::RegularExpressions::RegexNode::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _str
::StringW& System::Text::RegularExpressions::RegexNode::dyn__str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char _ch
::Il2CppChar& System::Text::RegularExpressions::RegexNode::dyn__ch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__ch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ch"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _m
int& System::Text::RegularExpressions::RegexNode::dyn__m() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__m");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_m"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _n
int& System::Text::RegularExpressions::RegexNode::dyn__n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_n"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexOptions _options
::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexNode::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _next
::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexNode::dyn__next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_next"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.UseOptionR
bool System::Text::RegularExpressions::RegexNode::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReverseLeft
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReverseLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReverseLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeRep
void System::Text::RegularExpressions::RegexNode::MakeRep(int type, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::MakeRep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Reduce
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Reduce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.StripEnation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::StripEnation(int emptyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::StripEnation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StripEnation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emptyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, emptyType);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceGroup
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceRep
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceRep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceRep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceRep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceSet
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceAlternation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceAlternation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceAlternation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceAlternation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceConcatenation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceConcatenation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceConcatenation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceConcatenation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeQuantifier
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::MakeQuantifier(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::MakeQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.AddChild
void System::Text::RegularExpressions::RegexNode::AddChild(::System::Text::RegularExpressions::RegexNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newChild);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Child
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Child(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Child");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Child", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ChildCount
int System::Text::RegularExpressions::RegexNode::ChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ChildCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChildCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Type
int System::Text::RegularExpressions::RegexNode::Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions None
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions None
void System::Text::RegularExpressions::RegexOptions::_set_None(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
void System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Multiline
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Multiline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Multiline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Multiline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Multiline
void System::Text::RegularExpressions::RegexOptions::_set_Multiline(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Multiline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Multiline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
void System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Compiled
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Compiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Compiled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Compiled"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Compiled
void System::Text::RegularExpressions::RegexOptions::_set_Compiled(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Compiled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Compiled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Singleline
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Singleline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Singleline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Singleline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Singleline
void System::Text::RegularExpressions::RegexOptions::_set_Singleline(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Singleline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Singleline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
void System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
void System::Text::RegularExpressions::RegexOptions::_set_RightToLeft(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ECMAScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_ECMAScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ECMAScript"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
void System::Text::RegularExpressions::RegexOptions::_set_ECMAScript(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_ECMAScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ECMAScript", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
void System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Text::RegularExpressions::RegexOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexParser
#include "System/Text/RegularExpressions/RegexParser.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] _category
::ArrayW<uint8_t> System::Text::RegularExpressions::RegexParser::_get__category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::_get__category");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Text.RegularExpressions", "RegexParser", "_category"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] _category
void System::Text::RegularExpressions::RegexParser::_set__category(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::_set__category");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexParser", "_category", value));
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _stack
::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _group
::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_group"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _alternation
::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__alternation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__alternation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alternation"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _concatenation
::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__concatenation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__concatenation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_concatenation"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _unit
::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unit"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _pattern
::StringW& System::Text::RegularExpressions::RegexParser::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _currentPos
int& System::Text::RegularExpressions::RegexParser::dyn__currentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__currentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureInfo _culture
::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexParser::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _autocap
int& System::Text::RegularExpressions::RegexParser::dyn__autocap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__autocap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autocap"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capcount
int& System::Text::RegularExpressions::RegexParser::dyn__capcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _captop
int& System::Text::RegularExpressions::RegexParser::dyn__captop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__captop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capsize
int& System::Text::RegularExpressions::RegexParser::dyn__capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexParser::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _capnames
::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexParser::dyn__capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _capnumlist
::ArrayW<int>& System::Text::RegularExpressions::RegexParser::dyn__capnumlist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnumlist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnumlist"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> _capnamelist
::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexParser::dyn__capnamelist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnamelist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnamelist"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexOptions _options
::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexParser::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexOptions> _optionsStack
::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexOptions>*& System::Text::RegularExpressions::RegexParser::dyn__optionsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__optionsStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionsStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexOptions>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _ignoreNextParen
bool& System::Text::RegularExpressions::RegexParser::dyn__ignoreNextParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__ignoreNextParen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreNextParen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser..cctor
void System::Text::RegularExpressions::RegexParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Parse
::System::Text::RegularExpressions::RegexTree* System::Text::RegularExpressions::RegexParser::Parse(::StringW re, ::System::Text::RegularExpressions::RegexOptions op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(re), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexTree*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, re, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ParseReplacement
::System::Text::RegularExpressions::RegexReplacement* System::Text::RegularExpressions::RegexParser::ParseReplacement(::StringW rep, ::System::Collections::Hashtable* caps, int capsize, ::System::Collections::Hashtable* capnames, ::System::Text::RegularExpressions::RegexOptions op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ParseReplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "ParseReplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rep), ::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(capsize), ::il2cpp_utils::ExtractType(capnames), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexReplacement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rep, caps, capsize, capnames, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.SetPattern
void System::Text::RegularExpressions::RegexParser::SetPattern(::StringW Re) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::SetPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Re)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Re);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Reset
void System::Text::RegularExpressions::RegexParser::Reset(::System::Text::RegularExpressions::RegexOptions topopts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topopts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topopts);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanRegex
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanReplacement
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanReplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanReplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanReplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharClass
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexParser::ScanCharClass(bool caseInsensitive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caseInsensitive)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(this, ___internal__method, caseInsensitive);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharClass
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexParser::ScanCharClass(bool caseInsensitive, bool scanOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caseInsensitive), ::il2cpp_utils::ExtractType(scanOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(this, ___internal__method, caseInsensitive, scanOnly);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanGroupOpen
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanGroupOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanGroupOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanGroupOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBlank
void System::Text::RegularExpressions::RegexParser::ScanBlank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBlank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBlank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBackslash
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBackslash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBackslash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBackslash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBasicBackslash
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBasicBackslash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBasicBackslash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBasicBackslash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanDollar
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanDollar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanDollar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDollar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCapname
::StringW System::Text::RegularExpressions::RegexParser::ScanCapname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCapname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCapname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOctal
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanOctal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanOctal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOctal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanDecimal
int System::Text::RegularExpressions::RegexParser::ScanDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanHex
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanHex(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.HexDigit
int System::Text::RegularExpressions::RegexParser::HexDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::HexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "HexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanControl
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsOnlyTopOption
bool System::Text::RegularExpressions::RegexParser::IsOnlyTopOption(::System::Text::RegularExpressions::RegexOptions option) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsOnlyTopOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnlyTopOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(option)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, option);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOptions
void System::Text::RegularExpressions::RegexParser::ScanOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharEscape
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanCharEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ParseProperty
::StringW System::Text::RegularExpressions::RegexParser::ParseProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ParseProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.TypeFromCode
int System::Text::RegularExpressions::RegexParser::TypeFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::TypeFromCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TypeFromCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.OptionFromCode
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexParser::OptionFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::OptionFromCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "OptionFromCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexOptions, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CountCaptures
void System::Text::RegularExpressions::RegexParser::CountCaptures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CountCaptures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CountCaptures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureSlot
void System::Text::RegularExpressions::RegexParser::NoteCaptureSlot(int i, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptureSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureName
void System::Text::RegularExpressions::RegexParser::NoteCaptureName(::StringW name, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptures
void System::Text::RegularExpressions::RegexParser::NoteCaptures(::System::Collections::Hashtable* caps, int capsize, ::System::Collections::Hashtable* capnames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(capsize), ::il2cpp_utils::ExtractType(capnames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, caps, capsize, capnames);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AssignNameSlots
void System::Text::RegularExpressions::RegexParser::AssignNameSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AssignNameSlots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignNameSlots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CaptureSlotFromName
int System::Text::RegularExpressions::RegexParser::CaptureSlotFromName(::StringW capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CaptureSlotFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureSlotFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureSlot
bool System::Text::RegularExpressions::RegexParser::IsCaptureSlot(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaptureSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureName
bool System::Text::RegularExpressions::RegexParser::IsCaptureName(::StringW capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsCaptureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaptureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionN
bool System::Text::RegularExpressions::RegexParser::UseOptionN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionI
bool System::Text::RegularExpressions::RegexParser::UseOptionI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionM
bool System::Text::RegularExpressions::RegexParser::UseOptionM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionS
bool System::Text::RegularExpressions::RegexParser::UseOptionS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionX
bool System::Text::RegularExpressions::RegexParser::UseOptionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionE
bool System::Text::RegularExpressions::RegexParser::UseOptionE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpecial
bool System::Text::RegularExpressions::RegexParser::IsSpecial(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsStopperX
bool System::Text::RegularExpressions::RegexParser::IsStopperX(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsStopperX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsStopperX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsQuantifier
bool System::Text::RegularExpressions::RegexParser::IsQuantifier(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsTrueQuantifier
bool System::Text::RegularExpressions::RegexParser::IsTrueQuantifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsTrueQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTrueQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpace
bool System::Text::RegularExpressions::RegexParser::IsSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(int pos, int cch, bool isReplacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(cch), ::il2cpp_utils::ExtractType(isReplacement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, cch, isReplacement);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushGroup
void System::Text::RegularExpressions::RegexParser::PushGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PushGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopGroup
void System::Text::RegularExpressions::RegexParser::PopGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyStack
bool System::Text::RegularExpressions::RegexParser::EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::EmptyStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.StartGroup
void System::Text::RegularExpressions::RegexParser::StartGroup(::System::Text::RegularExpressions::RegexNode* openGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::StartGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, openGroup);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddAlternate
void System::Text::RegularExpressions::RegexParser::AddAlternate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddAlternate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAlternate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Unit
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitOne
void System::Text::RegularExpressions::RegexParser::AddUnitOne(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNotone
void System::Text::RegularExpressions::RegexParser::AddUnitNotone(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitNotone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitNotone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitSet
void System::Text::RegularExpressions::RegexParser::AddUnitSet(::StringW cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNode
void System::Text::RegularExpressions::RegexParser::AddUnitNode(::System::Text::RegularExpressions::RegexNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitType
void System::Text::RegularExpressions::RegexParser::AddUnitType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddGroup
void System::Text::RegularExpressions::RegexParser::AddGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushOptions
void System::Text::RegularExpressions::RegexParser::PushOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PushOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopOptions
void System::Text::RegularExpressions::RegexParser::PopOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyOptionsStack
bool System::Text::RegularExpressions::RegexParser::EmptyOptionsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::EmptyOptionsStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyOptionsStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopKeepOptions
void System::Text::RegularExpressions::RegexParser::PopKeepOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopKeepOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopKeepOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MakeException
::System::ArgumentException* System::Text::RegularExpressions::RegexParser::MakeException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MakeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textpos
int System::Text::RegularExpressions::RegexParser::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Textpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textto
void System::Text::RegularExpressions::RegexParser::Textto(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Textto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRightGetChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::MoveRightGetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRightGetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRightGetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveLeft
void System::Text::RegularExpressions::RegexParser::MoveLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexParser::CharAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CharAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharsRight
int System::Text::RegularExpressions::RegexParser::CharsRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CharsRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharsRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _rep
::StringW& System::Text::RegularExpressions::RegexReplacement::dyn__rep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__rep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rep"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> _strings
::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexReplacement::dyn__strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Int32> _rules
::System::Collections::Generic::List_1<int>*& System::Text::RegularExpressions::RegexReplacement::dyn__rules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__rules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.get_Pattern
::StringW System::Text::RegularExpressions::RegexReplacement::get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::get_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.ReplacementImpl
void System::Text::RegularExpressions::RegexReplacement::ReplacementImpl(::System::Text::StringBuilder* sb, ::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::ReplacementImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplacementImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(match)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, match);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.ReplacementImplRTL
void System::Text::RegularExpressions::RegexReplacement::ReplacementImplRTL(::System::Collections::Generic::List_1<::StringW>* al, ::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::ReplacementImplRTL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplacementImplRTL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(al), ::il2cpp_utils::ExtractType(match)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, al, match);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.Replace
::StringW System::Text::RegularExpressions::RegexReplacement::Replace(::System::Text::RegularExpressions::Regex* regex, ::StringW input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, regex, input, count, startat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextbeg
int& System::Text::RegularExpressions::RegexRunner::dyn_runtextbeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextbeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextbeg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextend
int& System::Text::RegularExpressions::RegexRunner::dyn_runtextend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextend"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextstart
int& System::Text::RegularExpressions::RegexRunner::dyn_runtextstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String runtext
::StringW& System::Text::RegularExpressions::RegexRunner::dyn_runtext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtext"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextpos
int& System::Text::RegularExpressions::RegexRunner::dyn_runtextpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runtrack
::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runtrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtrackpos
int& System::Text::RegularExpressions::RegexRunner::dyn_runtrackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrackpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrackpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runstack
::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runstack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runstack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runstackpos
int& System::Text::RegularExpressions::RegexRunner::dyn_runstackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runstackpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstackpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runcrawl
::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runcrawl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcrawl"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runcrawlpos
int& System::Text::RegularExpressions::RegexRunner::dyn_runcrawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runcrawlpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcrawlpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtrackcount
int& System::Text::RegularExpressions::RegexRunner::dyn_runtrackcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrackcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrackcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.Match runmatch
::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::RegexRunner::dyn_runmatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runmatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runmatch"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.Regex runregex
::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::RegexRunner::dyn_runregex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runregex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runregex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeout
int& System::Text::RegularExpressions::RegexRunner::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreTimeout
bool& System::Text::RegularExpressions::RegexRunner::dyn_ignoreTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_ignoreTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreTimeout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeoutOccursAt
int& System::Text::RegularExpressions::RegexRunner::dyn_timeoutOccursAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_timeoutOccursAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeoutOccursAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeoutChecksToSkip
int& System::Text::RegularExpressions::RegexRunner::dyn_timeoutChecksToSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_timeoutChecksToSkip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeoutChecksToSkip"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Scan
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::Scan(::System::Text::RegularExpressions::Regex* regex, ::StringW text, int textbeg, int textend, int textstart, int prevlen, bool quick, ::System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textbeg), ::il2cpp_utils::ExtractType(textend), ::il2cpp_utils::ExtractType(textstart), ::il2cpp_utils::ExtractType(prevlen), ::il2cpp_utils::ExtractType(quick), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, regex, text, textbeg, textend, textstart, prevlen, quick, timeout);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.StartTimeoutWatch
void System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTimeoutWatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.CheckTimeout
void System::Text::RegularExpressions::RegexRunner::CheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::CheckTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoCheckTimeout
void System::Text::RegularExpressions::RegexRunner::DoCheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoCheckTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCheckTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Go
void System::Text::RegularExpressions::RegexRunner::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Go");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.FindFirstChar
bool System::Text::RegularExpressions::RegexRunner::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::FindFirstChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindFirstChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitTrackCount
void System::Text::RegularExpressions::RegexRunner::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::InitTrackCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitMatch
void System::Text::RegularExpressions::RegexRunner::InitMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::InitMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TidyMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::TidyMatch(bool quick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::TidyMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TidyMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quick)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.EnsureStorage
void System::Text::RegularExpressions::RegexRunner::EnsureStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::EnsureStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsBoundary
bool System::Text::RegularExpressions::RegexRunner::IsBoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startpos), ::il2cpp_utils::ExtractType(endpos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsECMABoundary
bool System::Text::RegularExpressions::RegexRunner::IsECMABoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsECMABoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsECMABoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startpos), ::il2cpp_utils::ExtractType(endpos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleTrack
void System::Text::RegularExpressions::RegexRunner::DoubleTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleStack
void System::Text::RegularExpressions::RegexRunner::DoubleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleCrawl
void System::Text::RegularExpressions::RegexRunner::DoubleCrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleCrawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleCrawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawl
void System::Text::RegularExpressions::RegexRunner::Crawl(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Crawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Crawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Popcrawl
int System::Text::RegularExpressions::RegexRunner::Popcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Popcrawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Popcrawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawlpos
int System::Text::RegularExpressions::RegexRunner::Crawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Crawlpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Crawlpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Capture
void System::Text::RegularExpressions::RegexRunner::Capture(int capnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TransferCapture
void System::Text::RegularExpressions::RegexRunner::TransferCapture(int capnum, int uncapnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::TransferCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum), ::il2cpp_utils::ExtractType(uncapnum), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capnum, uncapnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Uncapture
void System::Text::RegularExpressions::RegexRunner::Uncapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Uncapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Uncapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsMatched
bool System::Text::RegularExpressions::RegexRunner::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsMatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchIndex
int System::Text::RegularExpressions::RegexRunner::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::MatchIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchLength
int System::Text::RegularExpressions::RegexRunner::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::MatchLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
::System::Text::RegularExpressions::RegexRunner* System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexRunner*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _root
::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexTree::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexTree::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _capnumlist
::ArrayW<int>& System::Text::RegularExpressions::RegexTree::dyn__capnumlist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__capnumlist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnumlist"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _capnames
::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexTree::dyn__capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _capslist
::ArrayW<::StringW>& System::Text::RegularExpressions::RegexTree::dyn__capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexOptions _options
::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexTree::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _captop
int& System::Text::RegularExpressions::RegexTree::dyn__captop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__captop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexWriter
#include "System/Text/RegularExpressions/RegexWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32[] _intStack
::ArrayW<int>& System::Text::RegularExpressions::RegexWriter::dyn__intStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__intStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intStack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _depth
int& System::Text::RegularExpressions::RegexWriter::dyn__depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _emitted
::ArrayW<int>& System::Text::RegularExpressions::RegexWriter::dyn__emitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__emitted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitted"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _curpos
int& System::Text::RegularExpressions::RegexWriter::dyn__curpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__curpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.String,System.Int32> _stringhash
::System::Collections::Generic::Dictionary_2<::StringW, int>*& System::Text::RegularExpressions::RegexWriter::dyn__stringhash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__stringhash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringhash"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> _stringtable
::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexWriter::dyn__stringtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__stringtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringtable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _counting
bool& System::Text::RegularExpressions::RegexWriter::dyn__counting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__counting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _count
int& System::Text::RegularExpressions::RegexWriter::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _trackcount
int& System::Text::RegularExpressions::RegexWriter::dyn__trackcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__trackcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexWriter::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Write
::System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::Write(::System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexWriter", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PushInt
void System::Text::RegularExpressions::RegexWriter::PushInt(int I) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::PushInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.EmptyStack
bool System::Text::RegularExpressions::RegexWriter::EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::EmptyStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PopInt
int System::Text::RegularExpressions::RegexWriter::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::PopInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.CurPos
int System::Text::RegularExpressions::RegexWriter::CurPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::CurPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PatchJump
void System::Text::RegularExpressions::RegexWriter::PatchJump(int Offset, int jumpDest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::PatchJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PatchJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Offset), ::il2cpp_utils::ExtractType(jumpDest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Offset, jumpDest);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(opd1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, opd1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1, int opd2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(opd1), ::il2cpp_utils::ExtractType(opd2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, opd1, opd2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.StringCode
int System::Text::RegularExpressions::RegexWriter::StringCode(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::StringCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.MakeException
::System::ArgumentException* System::Text::RegularExpressions::RegexWriter::MakeException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::MakeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.MapCapnum
int System::Text::RegularExpressions::RegexWriter::MapCapnum(int capnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::MapCapnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapCapnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, capnum);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.RegexCodeFromRegexTree
::System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegexCodeFromRegexTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCode*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.EmitFragment
void System::Text::RegularExpressions::RegexWriter::EmitFragment(int nodetype, ::System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::EmitFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmitFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodetype), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(CurIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodetype, node, CurIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 Frequency
int64_t System::Diagnostics::Stopwatch::_get_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_Frequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Diagnostics", "Stopwatch", "Frequency"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 Frequency
void System::Diagnostics::Stopwatch::_set_Frequency(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_Frequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "Frequency", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsHighResolution
bool System::Diagnostics::Stopwatch::_get_IsHighResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_IsHighResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "Stopwatch", "IsHighResolution"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsHighResolution
void System::Diagnostics::Stopwatch::_set_IsHighResolution(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_IsHighResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "IsHighResolution", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 elapsed
int64_t& System::Diagnostics::Stopwatch::dyn_elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_elapsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elapsed"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 started
int64_t& System::Diagnostics::Stopwatch::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_running
bool& System::Diagnostics::Stopwatch::dyn_is_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_is_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_Elapsed
::System::TimeSpan System::Diagnostics::Stopwatch::get_Elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_Elapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Elapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedMilliseconds
int64_t System::Diagnostics::Stopwatch::get_ElapsedMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedTicks
int64_t System::Diagnostics::Stopwatch::get_ElapsedTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch..cctor
void System::Diagnostics::Stopwatch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.GetTimestamp
int64_t System::Diagnostics::Stopwatch::GetTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.StartNew
::System::Diagnostics::Stopwatch* System::Diagnostics::Stopwatch::StartNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::StartNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "StartNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Stopwatch*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Start
void System::Diagnostics::Stopwatch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ArrayConverter
#include "System/ComponentModel/ArrayConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.BooleanConverter
#include "System/ComponentModel/BooleanConverter.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::_get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_get_values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeConverter::StandardValuesCollection*>("System.ComponentModel", "BooleanConverter", "values"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
void System::ComponentModel::BooleanConverter::_set_values(::System::ComponentModel::TypeConverter::StandardValuesCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_set_values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BooleanConverter", "values", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.CollectionConverter
#include "System/ComponentModel/CollectionConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DecimalConverter
#include "System/ComponentModel/DecimalConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DescriptionAttribute
#include "System/ComponentModel/DescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DescriptionAttribute Default
::System::ComponentModel::DescriptionAttribute* System::ComponentModel::DescriptionAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DescriptionAttribute*>("System.ComponentModel", "DescriptionAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DescriptionAttribute Default
void System::ComponentModel::DescriptionAttribute::_set_Default(::System::ComponentModel::DescriptionAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DescriptionAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String description
::StringW& System::ComponentModel::DescriptionAttribute::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_Description
::StringW System::ComponentModel::DescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_DescriptionValue
::StringW System::ComponentModel::DescriptionAttribute::get_DescriptionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DescriptionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute..cctor
void System::ComponentModel::DescriptionAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DescriptionAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.Equals
bool System::ComponentModel::DescriptionAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.GetHashCode
int System::ComponentModel::DescriptionAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DoubleConverter
#include "System/ComponentModel/DoubleConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorBrowsableAttribute
#include "System/ComponentModel/EditorBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EditorBrowsableState browsableState
::System::ComponentModel::EditorBrowsableState& System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browsableState"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EditorBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.Equals
bool System::ComponentModel::EditorBrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.GetHashCode
int System::ComponentModel::EditorBrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.EditorBrowsableState
#include "System/ComponentModel/EditorBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Always
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Always
void System::ComponentModel::EditorBrowsableState::_set_Always(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Never
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Never
void System::ComponentModel::EditorBrowsableState::_set_Never(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Advanced
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Advanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Advanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Advanced"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Advanced
void System::ComponentModel::EditorBrowsableState::_set_Advanced(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Advanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Advanced", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::ComponentModel::EditorBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.EnumConverter
#include "System/ComponentModel/EnumConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
::System::ComponentModel::TypeConverter::StandardValuesCollection*& System::ComponentModel::EnumConverter::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter::StandardValuesCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
::System::Type*& System::ComponentModel::EnumConverter::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.Int16Converter
#include "System/ComponentModel/Int16Converter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.Int32Converter
#include "System/ComponentModel/Int32Converter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.Int64Converter
#include "System/ComponentModel/Int64Converter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.SingleConverter
#include "System/ComponentModel/SingleConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.StringConverter
#include "System/ComponentModel/StringConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TimeSpanConverter
#include "System/ComponentModel/TimeSpanConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String s_UseCompatibleTypeConverterBehavior
::StringW System::ComponentModel::TypeConverter::_get_s_UseCompatibleTypeConverterBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_get_s_UseCompatibleTypeConverterBehavior");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_UseCompatibleTypeConverterBehavior
void System::ComponentModel::TypeConverter::_set_s_UseCompatibleTypeConverterBehavior(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_set_s_UseCompatibleTypeConverterBehavior");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useCompatibleTypeConversion
bool System::ComponentModel::TypeConverter::_get_useCompatibleTypeConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_get_useCompatibleTypeConversion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useCompatibleTypeConversion
void System::ComponentModel::TypeConverter::_set_useCompatibleTypeConversion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_set_useCompatibleTypeConversion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion", value));
}
