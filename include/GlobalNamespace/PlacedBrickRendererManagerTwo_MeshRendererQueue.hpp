// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlacedBrickRendererManagerTwo
#include "GlobalNamespace/PlacedBrickRendererManagerTwo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Vector4
  struct Vector4;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*, "", "PlacedBrickRendererManagerTwo/MeshRendererQueue");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: PlacedBrickRendererManagerTwo/MeshRendererQueue
  // [TokenAttribute] Offset: FFFFFFFF
  class PlacedBrickRendererManagerTwo::MeshRendererQueue : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public UnityEngine.Mesh Mesh
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Mesh* Mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // private readonly System.Collections.Generic.List`1<PlacedBrickRendererManagerTwo/RenderQueueGroup> _renderQueueGroups
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*>* renderQueueGroups;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*>*) == 0x8);
    // private readonly UnityEngine.MaterialPropertyBlock _materialPropertyBlock
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::MaterialPropertyBlock* materialPropertyBlock;
    // Field size check
    static_assert(sizeof(::UnityEngine::MaterialPropertyBlock*) == 0x8);
    // private readonly UnityEngine.Material _material
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Material* material;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private readonly PlacedBrickRendererManagerTwo/RendererBufferRecycler _rendererBufferRecycler
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler* rendererBufferRecycler;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Mesh Mesh
    ::UnityEngine::Mesh*& dyn_Mesh();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<PlacedBrickRendererManagerTwo/RenderQueueGroup> _renderQueueGroups
    ::System::Collections::Generic::List_1<::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*>*& dyn__renderQueueGroups();
    // Get instance field reference: private readonly UnityEngine.MaterialPropertyBlock _materialPropertyBlock
    ::UnityEngine::MaterialPropertyBlock*& dyn__materialPropertyBlock();
    // Get instance field reference: private readonly UnityEngine.Material _material
    ::UnityEngine::Material*& dyn__material();
    // Get instance field reference: private readonly PlacedBrickRendererManagerTwo/RendererBufferRecycler _rendererBufferRecycler
    ::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler*& dyn__rendererBufferRecycler();
    // public System.Void .ctor(UnityEngine.Mesh mesh, UnityEngine.Material material, PlacedBrickRendererManagerTwo/RendererBufferRecycler rendererBufferRecycler)
    // Offset: 0x1059950
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlacedBrickRendererManagerTwo::MeshRendererQueue* New_ctor(::UnityEngine::Mesh* mesh, ::UnityEngine::Material* material, ::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler* rendererBufferRecycler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlacedBrickRendererManagerTwo::MeshRendererQueue*, creationType>(mesh, material, rendererBufferRecycler)));
    }
    // public System.Void AddMeshToRender(UnityEngine.Matrix4x4 transformationMatrix, UnityEngine.Vector4 color, System.Int32 objectHashCode)
    // Offset: 0x1059A34
    void AddMeshToRender(::UnityEngine::Matrix4x4 transformationMatrix, ::UnityEngine::Vector4 color, int objectHashCode);
    // public System.Void Render(System.Collections.Generic.Dictionary`2<System.Int32,System.Boolean> objectsToRemove)
    // Offset: 0x1059E84
    void Render(::System::Collections::Generic::Dictionary_2<int, bool>* objectsToRemove);
    // private System.Void RenderNthGroup(PlacedBrickRendererManagerTwo/RenderQueueGroup renderQueueGroup)
    // Offset: 0x105A674
    void RenderNthGroup(::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup* renderQueueGroup);
    // public System.Void RemoveObjectFromQueue(System.Int32 objectInstanceId)
    // Offset: 0x1059BE8
    void RemoveObjectFromQueue(int objectInstanceId);
    // private System.Void CleanRenderQueue(System.Collections.Generic.Dictionary`2<System.Int32,System.Boolean> objectsToRemove)
    // Offset: 0x105A3F4
    void CleanRenderQueue(::System::Collections::Generic::Dictionary_2<int, bool>* objectsToRemove);
  }; // PlacedBrickRendererManagerTwo/MeshRendererQueue
  #pragma pack(pop)
  static check_size<sizeof(PlacedBrickRendererManagerTwo::MeshRendererQueue), 48 + sizeof(::GlobalNamespace::PlacedBrickRendererManagerTwo::RendererBufferRecycler*)> __GlobalNamespace_PlacedBrickRendererManagerTwo_MeshRendererQueueSizeCheck;
  static_assert(sizeof(PlacedBrickRendererManagerTwo::MeshRendererQueue) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::AddMeshToRender
// Il2CppName: AddMeshToRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::*)(::UnityEngine::Matrix4x4, ::UnityEngine::Vector4, int)>(&GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::AddMeshToRender)> {
  static const MethodInfo* get() {
    static auto* transformationMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    static auto* objectHashCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*), "AddMeshToRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transformationMatrix, color, objectHashCode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::Render
// Il2CppName: Render
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::*)(::System::Collections::Generic::Dictionary_2<int, bool>*)>(&GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::Render)> {
  static const MethodInfo* get() {
    static auto* objectsToRemove = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*), "Render", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectsToRemove});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RenderNthGroup
// Il2CppName: RenderNthGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::*)(::GlobalNamespace::PlacedBrickRendererManagerTwo::RenderQueueGroup*)>(&GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RenderNthGroup)> {
  static const MethodInfo* get() {
    static auto* renderQueueGroup = &::il2cpp_utils::GetClassFromName("", "PlacedBrickRendererManagerTwo/RenderQueueGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*), "RenderNthGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderQueueGroup});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RemoveObjectFromQueue
// Il2CppName: RemoveObjectFromQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::*)(int)>(&GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::RemoveObjectFromQueue)> {
  static const MethodInfo* get() {
    static auto* objectInstanceId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*), "RemoveObjectFromQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectInstanceId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::CleanRenderQueue
// Il2CppName: CleanRenderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::*)(::System::Collections::Generic::Dictionary_2<int, bool>*)>(&GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue::CleanRenderQueue)> {
  static const MethodInfo* get() {
    static auto* objectsToRemove = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlacedBrickRendererManagerTwo::MeshRendererQueue*), "CleanRenderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectsToRemove});
  }
};
