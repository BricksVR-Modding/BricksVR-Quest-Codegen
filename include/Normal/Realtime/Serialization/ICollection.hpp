// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Normal.Realtime.Serialization.IStreamWriter
#include "Normal/Realtime/Serialization/IStreamWriter.hpp"
// Including type: Normal.Realtime.Serialization.IStreamReader
#include "Normal/Realtime/Serialization/IStreamReader.hpp"
// Completed includes
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: ICollection
  class ICollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::Serialization::ICollection);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Serialization::ICollection*, "Normal.Realtime.Serialization", "ICollection");
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Serialization.ICollection
  // [TokenAttribute] Offset: FFFFFFFF
  class ICollection/*, public ::Normal::Realtime::Serialization::IStreamWriter, public ::Normal::Realtime::Serialization::IStreamReader*/ {
    public:
    // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IStreamWriter
    operator ::Normal::Realtime::Serialization::IStreamWriter() noexcept {
      return *reinterpret_cast<::Normal::Realtime::Serialization::IStreamWriter*>(this);
    }
    // Creating interface conversion operator: operator ::Normal::Realtime::Serialization::IStreamReader
    operator ::Normal::Realtime::Serialization::IStreamReader() noexcept {
      return *reinterpret_cast<::Normal::Realtime::Serialization::IStreamReader*>(this);
    }
    // public System.UInt32 GetCollectionTypeID()
    // Offset: 0xFFFFFFFFFFFFFFFF
    uint GetCollectionTypeID();
  }; // Normal.Realtime.Serialization.ICollection
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::Serialization::ICollection::GetCollectionTypeID
// Il2CppName: GetCollectionTypeID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Normal::Realtime::Serialization::ICollection::*)()>(&Normal::Realtime::Serialization::ICollection::GetCollectionTypeID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::ICollection*), "GetCollectionTypeID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
