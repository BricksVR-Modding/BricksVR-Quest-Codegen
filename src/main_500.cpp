// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectedCategoryManager
#include "GlobalNamespace/SelectedCategoryManager.hpp"
// Including type: AnimateBrickCategoryImages
#include "GlobalNamespace/AnimateBrickCategoryImages.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BrickPickerManager
#include "GlobalNamespace/BrickPickerManager.hpp"
// Including type: HapticsManager
#include "GlobalNamespace/HapticsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AnimateBrickCategoryImages selectedBrickCategory
::GlobalNamespace::AnimateBrickCategoryImages*& GlobalNamespace::SelectedCategoryManager::dyn_selectedBrickCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn_selectedBrickCategory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedBrickCategory"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnimateBrickCategoryImages**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject tabButtonContainer
::UnityEngine::GameObject*& GlobalNamespace::SelectedCategoryManager::dyn_tabButtonContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn_tabButtonContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tabButtonContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::SelectedCategoryManager::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ValueTuple`2<AnimateBrickCategoryImages,UnityEngine.Transform>[] _brickCategories
::ArrayW<::System::ValueTuple_2<::GlobalNamespace::AnimateBrickCategoryImages*, ::UnityEngine::Transform*>>& GlobalNamespace::SelectedCategoryManager::dyn__brickCategories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn__brickCategories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brickCategories"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ValueTuple_2<::GlobalNamespace::AnimateBrickCategoryImages*, ::UnityEngine::Transform*>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastPos
::UnityEngine::Vector3& GlobalNamespace::SelectedCategoryManager::dyn__lastPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn__lastPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform sliderBeginObject
::UnityEngine::Transform*& GlobalNamespace::SelectedCategoryManager::dyn_sliderBeginObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn_sliderBeginObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderBeginObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform sliderEndObject
::UnityEngine::Transform*& GlobalNamespace::SelectedCategoryManager::dyn_sliderEndObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn_sliderEndObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderEndObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastLocalSliderBegin
::UnityEngine::Vector3& GlobalNamespace::SelectedCategoryManager::dyn__lastLocalSliderBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn__lastLocalSliderBegin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastLocalSliderBegin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isGrabbed
bool& GlobalNamespace::SelectedCategoryManager::dyn__isGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn__isGrabbed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isGrabbed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeReleased
float& GlobalNamespace::SelectedCategoryManager::dyn__timeReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn__timeReleased");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeReleased"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeForSliderToSnap
float& GlobalNamespace::SelectedCategoryManager::dyn_timeForSliderToSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn_timeForSliderToSnap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeForSliderToSnap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BrickPickerManager brickPickerManager
::GlobalNamespace::BrickPickerManager*& GlobalNamespace::SelectedCategoryManager::dyn_brickPickerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn_brickPickerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brickPickerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrickPickerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HapticsManager _hapticsManager
::GlobalNamespace::HapticsManager*& GlobalNamespace::SelectedCategoryManager::dyn__hapticsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::dyn__hapticsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HapticsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SelectedCategoryManager.get_SliderBegin
::UnityEngine::Vector3 GlobalNamespace::SelectedCategoryManager::get_SliderBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::get_SliderBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SliderBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.get_SliderEnd
::UnityEngine::Vector3 GlobalNamespace::SelectedCategoryManager::get_SliderEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::get_SliderEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SliderEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.Awake
void GlobalNamespace::SelectedCategoryManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.Start
void GlobalNamespace::SelectedCategoryManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.Update
void GlobalNamespace::SelectedCategoryManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.SetPosition
void GlobalNamespace::SelectedCategoryManager::SetPosition(::UnityEngine::Vector3 pos, bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(leftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, leftHand);
}
// Autogenerated method: SelectedCategoryManager.GravitateSliderTowardsNearestItem
void GlobalNamespace::SelectedCategoryManager::GravitateSliderTowardsNearestItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::GravitateSliderTowardsNearestItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GravitateSliderTowardsNearestItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.OnDrawGizmos
void GlobalNamespace::SelectedCategoryManager::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.UpdateSliderPosition
void GlobalNamespace::SelectedCategoryManager::UpdateSliderPosition(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::UpdateSliderPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSliderPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: SelectedCategoryManager.PlayerGrabbed
void GlobalNamespace::SelectedCategoryManager::PlayerGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::PlayerGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.PlayerReleased
void GlobalNamespace::SelectedCategoryManager::PlayerReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::PlayerReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.ClosestBrickCategoryImage
::GlobalNamespace::AnimateBrickCategoryImages* GlobalNamespace::SelectedCategoryManager::ClosestBrickCategoryImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::ClosestBrickCategoryImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestBrickCategoryImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AnimateBrickCategoryImages*, false>(this, ___internal__method);
}
// Autogenerated method: SelectedCategoryManager.GetClosestPointOnInfiniteLine
::UnityEngine::Vector3 GlobalNamespace::SelectedCategoryManager::GetClosestPointOnInfiniteLine(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::GetClosestPointOnInfiniteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SelectedCategoryManager", "GetClosestPointOnInfiniteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, lineStart, lineEnd);
}
// Autogenerated method: SelectedCategoryManager.GetClosestPointOnFiniteLine
::UnityEngine::Vector3 GlobalNamespace::SelectedCategoryManager::GetClosestPointOnFiniteLine(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectedCategoryManager::GetClosestPointOnFiniteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SelectedCategoryManager", "GetClosestPointOnFiniteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, lineStart, lineEnd);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.AllowList
#include "ProfanityFilter/AllowList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _allowList
::System::Collections::Generic::List_1<::StringW>*& ProfanityFilter::AllowList::dyn__allowList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::AllowList::dyn__allowList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.AllowList.get_ToList
::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>* ProfanityFilter::AllowList::get_ToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::AllowList::get_ToList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.AllowList.get_Count
int ProfanityFilter::AllowList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::AllowList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.AllowList.Add
void ProfanityFilter::AllowList::Add(::StringW wordToAllowlist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::AllowList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wordToAllowlist)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wordToAllowlist);
}
// Autogenerated method: ProfanityFilter.AllowList.Contains
bool ProfanityFilter::AllowList::Contains(::StringW wordToCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::AllowList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wordToCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, wordToCheck);
}
// Autogenerated method: ProfanityFilter.AllowList.Clear
void ProfanityFilter::AllowList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::AllowList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.AllowList.Remove
bool ProfanityFilter::AllowList::Remove(::StringW wordToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::AllowList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wordToRemove)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, wordToRemove);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.ProfanityBase
#include "ProfanityFilter/ProfanityBase.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> _profanities
::System::Collections::Generic::List_1<::StringW>*& ProfanityFilter::ProfanityBase::dyn__profanities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::dyn__profanities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_profanities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] _wordList
::ArrayW<::StringW>& ProfanityFilter::ProfanityBase::dyn__wordList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::dyn__wordList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wordList"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.get_Count
int ProfanityFilter::ProfanityBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.AddProfanity
void ProfanityFilter::ProfanityBase::AddProfanity(::StringW profanity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::AddProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, profanity);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.AddProfanity
void ProfanityFilter::ProfanityBase::AddProfanity(::ArrayW<::StringW> profanityList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::AddProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanityList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, profanityList);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.AddProfanity
void ProfanityFilter::ProfanityBase::AddProfanity(::System::Collections::Generic::List_1<::StringW>* profanityList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::AddProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanityList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, profanityList);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.RemoveProfanity
bool ProfanityFilter::ProfanityBase::RemoveProfanity(::StringW profanity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::RemoveProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanity)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, profanity);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.RemoveProfanity
bool ProfanityFilter::ProfanityBase::RemoveProfanity(::System::Collections::Generic::List_1<::StringW>* profanities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::RemoveProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanities)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, profanities);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.RemoveProfanity
bool ProfanityFilter::ProfanityBase::RemoveProfanity(::ArrayW<::StringW> profanities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::RemoveProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanities)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, profanities);
}
// Autogenerated method: ProfanityFilter.ProfanityBase.Clear
void ProfanityFilter::ProfanityBase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityBase::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.ProfanityFilter
#include "ProfanityFilter/ProfanityFilter.hpp"
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass8_0
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass8_0.hpp"
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass8_1
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass8_1.hpp"
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass13_0
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass13_0.hpp"
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c
#include "ProfanityFilter/ProfanityFilter_--c.hpp"
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass18_0
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass18_0.hpp"
// Including type: ProfanityFilter.Interfaces.IAllowList
#include "ProfanityFilter/Interfaces/IAllowList.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ProfanityFilter.Interfaces.IAllowList <AllowList>k__BackingField
::ProfanityFilter::Interfaces::IAllowList*& ProfanityFilter::ProfanityFilter::dyn_$AllowList$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::dyn_$AllowList$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AllowList>k__BackingField"))->offset;
  return *reinterpret_cast<::ProfanityFilter::Interfaces::IAllowList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.get_AllowList
::ProfanityFilter::Interfaces::IAllowList* ProfanityFilter::ProfanityFilter::get_AllowList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::get_AllowList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ProfanityFilter::Interfaces::IAllowList*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.IsProfanity
bool ProfanityFilter::ProfanityFilter::IsProfanity(::StringW word) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::IsProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, word);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.DetectAllProfanities
::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>* ProfanityFilter::ProfanityFilter::DetectAllProfanities(::StringW sentence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::DetectAllProfanities");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectAllProfanities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>*, false>(this, ___internal__method, sentence);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.DetectAllProfanities
::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>* ProfanityFilter::ProfanityFilter::DetectAllProfanities(::StringW sentence, bool removePartialMatches) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::DetectAllProfanities");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectAllProfanities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence), ::il2cpp_utils::ExtractType(removePartialMatches)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>*, false>(this, ___internal__method, sentence, removePartialMatches);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.CensorString
::StringW ProfanityFilter::ProfanityFilter::CensorString(::StringW sentence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::CensorString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CensorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sentence);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.CensorString
::StringW ProfanityFilter::ProfanityFilter::CensorString(::StringW sentence, ::Il2CppChar censorCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::CensorString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CensorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence), ::il2cpp_utils::ExtractType(censorCharacter)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sentence, censorCharacter);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.CensorString
::StringW ProfanityFilter::ProfanityFilter::CensorString(::StringW sentence, ::Il2CppChar censorCharacter, bool ignoreNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::CensorString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CensorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence), ::il2cpp_utils::ExtractType(censorCharacter), ::il2cpp_utils::ExtractType(ignoreNumbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sentence, censorCharacter, ignoreNumbers);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.GetCompleteWord
::System::Nullable_1<::System::ValueTuple_3<int, int, ::StringW>> ProfanityFilter::ProfanityFilter::GetCompleteWord(::StringW toCheck, ::StringW profanity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::GetCompleteWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompleteWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toCheck), ::il2cpp_utils::ExtractType(profanity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::ValueTuple_3<int, int, ::StringW>>, false>(this, ___internal__method, toCheck, profanity);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.ContainsProfanity
bool ProfanityFilter::ProfanityFilter::ContainsProfanity(::StringW term) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::ContainsProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(term)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, term);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.CensorStringByProfanityList
::System::Text::StringBuilder* ProfanityFilter::ProfanityFilter::CensorStringByProfanityList(::Il2CppChar censorCharacter, ::System::Collections::Generic::List_1<::StringW>* swearList, ::System::Text::StringBuilder* censored, ::System::Text::StringBuilder* tracker, bool ignoreNumeric) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::CensorStringByProfanityList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CensorStringByProfanityList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(censorCharacter), ::il2cpp_utils::ExtractType(swearList), ::il2cpp_utils::ExtractType(censored), ::il2cpp_utils::ExtractType(tracker), ::il2cpp_utils::ExtractType(ignoreNumeric)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(this, ___internal__method, censorCharacter, swearList, censored, tracker, ignoreNumeric);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.FilterSwearListForCompleteWordsOnly
::System::Collections::Generic::List_1<::StringW>* ProfanityFilter::ProfanityFilter::FilterSwearListForCompleteWordsOnly(::StringW sentence, ::System::Collections::Generic::List_1<::StringW>* swearList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::FilterSwearListForCompleteWordsOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterSwearListForCompleteWordsOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence), ::il2cpp_utils::ExtractType(swearList)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, sentence, swearList);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.FilterWordListByAllowList
::System::Collections::Generic::List_1<::StringW>* ProfanityFilter::ProfanityFilter::FilterWordListByAllowList(::ArrayW<::StringW> words) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::FilterWordListByAllowList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterWordListByAllowList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(words)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, words);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.ConvertWordListToSentence
::StringW ProfanityFilter::ProfanityFilter::ConvertWordListToSentence(::System::Collections::Generic::List_1<::StringW>* postAllowList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::ConvertWordListToSentence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ProfanityFilter", "ProfanityFilter", "ConvertWordListToSentence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postAllowList)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postAllowList);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.AddMultiWordProfanities
void ProfanityFilter::ProfanityFilter::AddMultiWordProfanities(::System::Collections::Generic::List_1<::StringW>* swearList, ::StringW postAllowListSentence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::AddMultiWordProfanities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMultiWordProfanities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(swearList), ::il2cpp_utils::ExtractType(postAllowListSentence)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, swearList, postAllowListSentence);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter.CreateCensoredString
::StringW ProfanityFilter::ProfanityFilter::CreateCensoredString(::StringW word, ::Il2CppChar censorCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::CreateCensoredString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ProfanityFilter", "ProfanityFilter", "CreateCensoredString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(censorCharacter)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, word, censorCharacter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass8_0
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> swearList
::System::Collections::Generic::List_1<::StringW>*& ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_0::dyn_swearList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_0::dyn_swearList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swearList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass8_0.<DetectAllProfanities>b__0
bool ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_0::$DetectAllProfanities$b__0(::StringW x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_0::<DetectAllProfanities>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DetectAllProfanities>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass8_1
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass8_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String x
::StringW& ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_1::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_1::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass8_1.<DetectAllProfanities>b__1
bool ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_1::$DetectAllProfanities$b__1(::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass8_1::<DetectAllProfanities>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DetectAllProfanities>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass13_0
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass13_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String term
::StringW& ProfanityFilter::ProfanityFilter::$$c__DisplayClass13_0::dyn_term() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass13_0::dyn_term");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "term"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass13_0.<ContainsProfanity>b__0
bool ProfanityFilter::ProfanityFilter::$$c__DisplayClass13_0::$ContainsProfanity$b__0(::StringW word) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass13_0::<ContainsProfanity>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContainsProfanity>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, word);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c
#include "ProfanityFilter/ProfanityFilter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c <>9
::ProfanityFilter::ProfanityFilter::$$c* ProfanityFilter::ProfanityFilter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ProfanityFilter::ProfanityFilter::$$c*>("ProfanityFilter", "ProfanityFilter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c <>9
void ProfanityFilter::ProfanityFilter::$$c::_set_$$9(::ProfanityFilter::ProfanityFilter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ProfanityFilter", "ProfanityFilter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Int32> <>9__14_0
::System::Func_2<::StringW, int>* ProfanityFilter::ProfanityFilter::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, int>*>("ProfanityFilter", "ProfanityFilter/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Int32> <>9__14_0
void ProfanityFilter::ProfanityFilter::$$c::_set_$$9__14_0(::System::Func_2<::StringW, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ProfanityFilter", "ProfanityFilter/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Int32> <>9__15_0
::System::Func_2<::StringW, int>* ProfanityFilter::ProfanityFilter::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, int>*>("ProfanityFilter", "ProfanityFilter/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Int32> <>9__15_0
void ProfanityFilter::ProfanityFilter::$$c::_set_$$9__15_0(::System::Func_2<::StringW, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ProfanityFilter", "ProfanityFilter/<>c", "<>9__15_0", value)));
}
// Autogenerated method: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c..cctor
void ProfanityFilter::ProfanityFilter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ProfanityFilter", "ProfanityFilter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c.<CensorStringByProfanityList>b__14_0
int ProfanityFilter::ProfanityFilter::$$c::$CensorStringByProfanityList$b__14_0(::StringW x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::<CensorStringByProfanityList>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CensorStringByProfanityList>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c.<FilterSwearListForCompleteWordsOnly>b__15_0
int ProfanityFilter::ProfanityFilter::$$c::$FilterSwearListForCompleteWordsOnly$b__15_0(::StringW x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c::<FilterSwearListForCompleteWordsOnly>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FilterSwearListForCompleteWordsOnly>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass18_0
#include "ProfanityFilter/ProfanityFilter_--c__DisplayClass18_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String postAllowListSentence
::StringW& ProfanityFilter::ProfanityFilter::$$c__DisplayClass18_0::dyn_postAllowListSentence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass18_0::dyn_postAllowListSentence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postAllowListSentence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.ProfanityFilter/ProfanityFilter.<>c__DisplayClass18_0.<AddMultiWordProfanities>b__0
bool ProfanityFilter::ProfanityFilter::$$c__DisplayClass18_0::$AddMultiWordProfanities$b__0(::StringW profanity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::ProfanityFilter::$$c__DisplayClass18_0::<AddMultiWordProfanities>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddMultiWordProfanities>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanity)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, profanity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.Interfaces.IAllowList
#include "ProfanityFilter/Interfaces/IAllowList.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ProfanityFilter.Interfaces.IAllowList.get_Count
int ProfanityFilter::Interfaces::IAllowList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IAllowList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.Interfaces.IAllowList.get_ToList
::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>* ProfanityFilter::Interfaces::IAllowList::get_ToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IAllowList::get_ToList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.Interfaces.IAllowList.Add
void ProfanityFilter::Interfaces::IAllowList::Add(::StringW wordToAllowlist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IAllowList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wordToAllowlist)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wordToAllowlist);
}
// Autogenerated method: ProfanityFilter.Interfaces.IAllowList.Contains
bool ProfanityFilter::Interfaces::IAllowList::Contains(::StringW wordToCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IAllowList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wordToCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, wordToCheck);
}
// Autogenerated method: ProfanityFilter.Interfaces.IAllowList.Remove
bool ProfanityFilter::Interfaces::IAllowList::Remove(::StringW wordToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IAllowList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wordToRemove)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, wordToRemove);
}
// Autogenerated method: ProfanityFilter.Interfaces.IAllowList.Clear
void ProfanityFilter::Interfaces::IAllowList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IAllowList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter.Interfaces.IProfanityFilter
#include "ProfanityFilter/Interfaces/IProfanityFilter.hpp"
// Including type: ProfanityFilter.Interfaces.IAllowList
#include "ProfanityFilter/Interfaces/IAllowList.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.get_AllowList
::ProfanityFilter::Interfaces::IAllowList* ProfanityFilter::Interfaces::IProfanityFilter::get_AllowList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::get_AllowList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ProfanityFilter::Interfaces::IAllowList*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.get_Count
int ProfanityFilter::Interfaces::IProfanityFilter::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.IsProfanity
bool ProfanityFilter::Interfaces::IProfanityFilter::IsProfanity(::StringW word) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::IsProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, word);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.DetectAllProfanities
::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>* ProfanityFilter::Interfaces::IProfanityFilter::DetectAllProfanities(::StringW sentence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::DetectAllProfanities");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectAllProfanities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>*, false>(this, ___internal__method, sentence);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.DetectAllProfanities
::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>* ProfanityFilter::Interfaces::IProfanityFilter::DetectAllProfanities(::StringW sentence, bool removePartialMatches) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::DetectAllProfanities");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectAllProfanities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence), ::il2cpp_utils::ExtractType(removePartialMatches)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::StringW>*, false>(this, ___internal__method, sentence, removePartialMatches);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.ContainsProfanity
bool ProfanityFilter::Interfaces::IProfanityFilter::ContainsProfanity(::StringW term) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::ContainsProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(term)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, term);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.CensorString
::StringW ProfanityFilter::Interfaces::IProfanityFilter::CensorString(::StringW sentence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::CensorString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CensorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sentence);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.CensorString
::StringW ProfanityFilter::Interfaces::IProfanityFilter::CensorString(::StringW sentence, ::Il2CppChar censorCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::CensorString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CensorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence), ::il2cpp_utils::ExtractType(censorCharacter)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sentence, censorCharacter);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.CensorString
::StringW ProfanityFilter::Interfaces::IProfanityFilter::CensorString(::StringW sentence, ::Il2CppChar censorCharacter, bool ignoreNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::CensorString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CensorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sentence), ::il2cpp_utils::ExtractType(censorCharacter), ::il2cpp_utils::ExtractType(ignoreNumbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sentence, censorCharacter, ignoreNumbers);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.GetCompleteWord
::System::Nullable_1<::System::ValueTuple_3<int, int, ::StringW>> ProfanityFilter::Interfaces::IProfanityFilter::GetCompleteWord(::StringW toCheck, ::StringW profanity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::GetCompleteWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompleteWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toCheck), ::il2cpp_utils::ExtractType(profanity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::ValueTuple_3<int, int, ::StringW>>, false>(this, ___internal__method, toCheck, profanity);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.AddProfanity
void ProfanityFilter::Interfaces::IProfanityFilter::AddProfanity(::StringW profanity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::AddProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, profanity);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.AddProfanity
void ProfanityFilter::Interfaces::IProfanityFilter::AddProfanity(::ArrayW<::StringW> profanityList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::AddProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanityList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, profanityList);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.AddProfanity
void ProfanityFilter::Interfaces::IProfanityFilter::AddProfanity(::System::Collections::Generic::List_1<::StringW>* profanityList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::AddProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanityList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, profanityList);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.RemoveProfanity
bool ProfanityFilter::Interfaces::IProfanityFilter::RemoveProfanity(::StringW profanity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::RemoveProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanity)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, profanity);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.RemoveProfanity
bool ProfanityFilter::Interfaces::IProfanityFilter::RemoveProfanity(::System::Collections::Generic::List_1<::StringW>* profanities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::RemoveProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanities)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, profanities);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.RemoveProfanity
bool ProfanityFilter::Interfaces::IProfanityFilter::RemoveProfanity(::ArrayW<::StringW> profanities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::RemoveProfanity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveProfanity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profanities)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, profanities);
}
// Autogenerated method: ProfanityFilter.Interfaces.IProfanityFilter.Clear
void ProfanityFilter::Interfaces::IProfanityFilter::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ProfanityFilter::Interfaces::IProfanityFilter::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Shopify.NetworkedInteractor
#include "Shopify/NetworkedInteractor.hpp"
// Including type: Shopify.NetworkedInteractor/Shopify.<DelayedReEnableInteractable>d__5
#include "Shopify/NetworkedInteractor_-DelayedReEnableInteractable-d__5.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor _interactor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& Shopify::NetworkedInteractor::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Shopify.NetworkedInteractor.Awake
void Shopify::NetworkedInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.NetworkedInteractor.OnEnable
void Shopify::NetworkedInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.NetworkedInteractor.OnDisable
void Shopify::NetworkedInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.NetworkedInteractor.OnGrab
void Shopify::NetworkedInteractor::OnGrab(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::OnGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Shopify.NetworkedInteractor.DelayedReEnableInteractable
::System::Collections::IEnumerator* Shopify::NetworkedInteractor::DelayedReEnableInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::DelayedReEnableInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Shopify", "NetworkedInteractor", "DelayedReEnableInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Shopify.NetworkedInteractor/Shopify.<DelayedReEnableInteractable>d__5
#include "Shopify/NetworkedInteractor_-DelayedReEnableInteractable-d__5.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::dyn_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::dyn_interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Shopify.NetworkedInteractor/Shopify.<DelayedReEnableInteractable>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.NetworkedInteractor/Shopify.<DelayedReEnableInteractable>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.NetworkedInteractor/Shopify.<DelayedReEnableInteractable>d__5.System.IDisposable.Dispose
void Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.NetworkedInteractor/Shopify.<DelayedReEnableInteractable>d__5.MoveNext
bool Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.NetworkedInteractor/Shopify.<DelayedReEnableInteractable>d__5.System.Collections.IEnumerator.Reset
void Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::NetworkedInteractor::$DelayedReEnableInteractable$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Shopify.PrecisionAttach
#include "Shopify/PrecisionAttach.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _mAttachPoint
::UnityEngine::Transform*& Shopify::PrecisionAttach::dyn__mAttachPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::dyn__mAttachPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mAttachPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _originalPosition
::UnityEngine::Vector3& Shopify::PrecisionAttach::dyn__originalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::dyn__originalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _originalRotation
::UnityEngine::Quaternion& Shopify::PrecisionAttach::dyn__originalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::dyn__originalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Shopify.PrecisionAttach.Awake
void Shopify::PrecisionAttach::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.PrecisionAttach.OnEnable
void Shopify::PrecisionAttach::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.PrecisionAttach.OnDisable
void Shopify::PrecisionAttach::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Shopify.PrecisionAttach.UpdatePos
void Shopify::PrecisionAttach::UpdatePos(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::UpdatePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Shopify.PrecisionAttach.ResetPos
void Shopify::PrecisionAttach::ResetPos(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Shopify::PrecisionAttach::ResetPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.Hand
#include "OVRTouchSample/Hand.hpp"
// Including type: OVRTouchSample.Hand/OVRTouchSample.<>c
#include "OVRTouchSample/Hand_--c.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: OVRTouchSample.HandPose
#include "OVRTouchSample/HandPose.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: ChangeHandGesture
#include "GlobalNamespace/ChangeHandGesture.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String AnimLayerNamePoint
::StringW OVRTouchSample::Hand::_get_AnimLayerNamePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_AnimLayerNamePoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "AnimLayerNamePoint"));
}
// Autogenerated static field setter
// Set static field: static public System.String AnimLayerNamePoint
void OVRTouchSample::Hand::_set_AnimLayerNamePoint(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_AnimLayerNamePoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "AnimLayerNamePoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AnimLayerNameThumb
::StringW OVRTouchSample::Hand::_get_AnimLayerNameThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_AnimLayerNameThumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "AnimLayerNameThumb"));
}
// Autogenerated static field setter
// Set static field: static public System.String AnimLayerNameThumb
void OVRTouchSample::Hand::_set_AnimLayerNameThumb(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_AnimLayerNameThumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "AnimLayerNameThumb", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AnimParamNameFlex
::StringW OVRTouchSample::Hand::_get_AnimParamNameFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_AnimParamNameFlex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "AnimParamNameFlex"));
}
// Autogenerated static field setter
// Set static field: static public System.String AnimParamNameFlex
void OVRTouchSample::Hand::_set_AnimParamNameFlex(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_AnimParamNameFlex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "AnimParamNameFlex", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AnimParamNamePose
::StringW OVRTouchSample::Hand::_get_AnimParamNamePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_AnimParamNamePose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "AnimParamNamePose"));
}
// Autogenerated static field setter
// Set static field: static public System.String AnimParamNamePose
void OVRTouchSample::Hand::_set_AnimParamNamePose(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_AnimParamNamePose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "AnimParamNamePose", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ThreshCollisionFlex
float OVRTouchSample::Hand::_get_ThreshCollisionFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ThreshCollisionFlex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "ThreshCollisionFlex"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ThreshCollisionFlex
void OVRTouchSample::Hand::_set_ThreshCollisionFlex(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ThreshCollisionFlex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ThreshCollisionFlex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single InputRateChange
float OVRTouchSample::Hand::_get_InputRateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_InputRateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "InputRateChange"));
}
// Autogenerated static field setter
// Set static field: static public System.Single InputRateChange
void OVRTouchSample::Hand::_set_InputRateChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_InputRateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "InputRateChange", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ColliderScaleMIN
float OVRTouchSample::Hand::_get_ColliderScaleMIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ColliderScaleMIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "ColliderScaleMIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ColliderScaleMIN
void OVRTouchSample::Hand::_set_ColliderScaleMIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ColliderScaleMIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ColliderScaleMIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ColliderScaleMAX
float OVRTouchSample::Hand::_get_ColliderScaleMAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ColliderScaleMAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "ColliderScaleMAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ColliderScaleMAX
void OVRTouchSample::Hand::_set_ColliderScaleMAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ColliderScaleMAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ColliderScaleMAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ColliderScalePerSecond
float OVRTouchSample::Hand::_get_ColliderScalePerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ColliderScalePerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "ColliderScalePerSecond"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ColliderScalePerSecond
void OVRTouchSample::Hand::_set_ColliderScalePerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ColliderScalePerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ColliderScalePerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single TriggerDebounceTime
float OVRTouchSample::Hand::_get_TriggerDebounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_TriggerDebounceTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "TriggerDebounceTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Single TriggerDebounceTime
void OVRTouchSample::Hand::_set_TriggerDebounceTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_TriggerDebounceTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "TriggerDebounceTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ThumbDebounceTime
float OVRTouchSample::Hand::_get_ThumbDebounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ThumbDebounceTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "ThumbDebounceTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ThumbDebounceTime
void OVRTouchSample::Hand::_set_ThumbDebounceTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ThumbDebounceTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ThumbDebounceTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PointLockAnimationDuration
float OVRTouchSample::Hand::_get_PointLockAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_PointLockAnimationDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "PointLockAnimationDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PointLockAnimationDuration
void OVRTouchSample::Hand::_set_PointLockAnimationDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_PointLockAnimationDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "PointLockAnimationDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject avatar
::UnityEngine::GameObject*& OVRTouchSample::Hand::dyn_avatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_avatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatar"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller mController
::GlobalNamespace::OVRInput::Controller& OVRTouchSample::Hand::dyn_mController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_mController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator mAnimator
::UnityEngine::Animator*& OVRTouchSample::Hand::dyn_mAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_mAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTouchSample.HandPose mDefaultGrabPose
::OVRTouchSample::HandPose*& OVRTouchSample::Hand::dyn_mDefaultGrabPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_mDefaultGrabPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mDefaultGrabPose"))->offset;
  return *reinterpret_cast<::OVRTouchSample::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _mColliders
::ArrayW<::UnityEngine::Collider*>& OVRTouchSample::Hand::dyn__mColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mCollisionEnabled
bool& OVRTouchSample::Hand::dyn__mCollisionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mCollisionEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mCollisionEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor mGrabber
::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor*& OVRTouchSample::Hand::dyn_mGrabber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_mGrabber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mGrabber"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isLocalHand
bool& OVRTouchSample::Hand::dyn__isLocalHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__isLocalHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLocalHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> _mShowAfterInputFocusAcquired
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& OVRTouchSample::Hand::dyn__mShowAfterInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mShowAfterInputFocusAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mShowAfterInputFocusAcquired"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _mAnimLayerIndexThumb
int& OVRTouchSample::Hand::dyn__mAnimLayerIndexThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mAnimLayerIndexThumb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mAnimLayerIndexThumb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _mAnimLayerIndexPoint
int& OVRTouchSample::Hand::dyn__mAnimLayerIndexPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mAnimLayerIndexPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mAnimLayerIndexPoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _mAnimParamIndexFlex
int& OVRTouchSample::Hand::dyn__mAnimParamIndexFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mAnimParamIndexFlex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mAnimParamIndexFlex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _mAnimParamIndexPose
int& OVRTouchSample::Hand::dyn__mAnimParamIndexPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mAnimParamIndexPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mAnimParamIndexPose"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mIsPointing
bool& OVRTouchSample::Hand::dyn__mIsPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mIsPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mIsPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mIsGivingThumbsUp
bool& OVRTouchSample::Hand::dyn__mIsGivingThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mIsGivingThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mIsGivingThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _mPointBlend
float& OVRTouchSample::Hand::dyn__mPointBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mPointBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mPointBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _mThumbsUpBlend
float& OVRTouchSample::Hand::dyn__mThumbsUpBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mThumbsUpBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mThumbsUpBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mPointLock
bool& OVRTouchSample::Hand::dyn__mPointLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mPointLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mPointLock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _mPointLockBegin
float& OVRTouchSample::Hand::dyn__mPointLockBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mPointLockBegin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mPointLockBegin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mRestoreOnInputAcquired
bool& OVRTouchSample::Hand::dyn__mRestoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mRestoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mRestoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ChangeHandGesture _changeHandGesture
::GlobalNamespace::ChangeHandGesture*& OVRTouchSample::Hand::dyn__changeHandGesture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__changeHandGesture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeHandGesture"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ChangeHandGesture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHand
bool& OVRTouchSample::Hand::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pointLockCounter
int& OVRTouchSample::Hand::dyn__pointLockCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__pointLockCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointLockCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _mCollisionScaleCurrent
float& OVRTouchSample::Hand::dyn__mCollisionScaleCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn__mCollisionScaleCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mCollisionScaleCurrent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.Hand.get__mPointLockEnd
float OVRTouchSample::Hand::get__mPointLockEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::get__mPointLockEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__mPointLockEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.Start
void OVRTouchSample::Hand::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.SetPointLock
void OVRTouchSample::Hand::SetPointLock(bool isPointing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::SetPointLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPointLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPointing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPointing);
}
// Autogenerated method: OVRTouchSample.Hand.PointLockLerpValue
float OVRTouchSample::Hand::PointLockLerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::PointLockLerpValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointLockLerpValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnDestroy
void OVRTouchSample::Hand::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.Update
void OVRTouchSample::Hand::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.UpdateCapTouchStates
void OVRTouchSample::Hand::UpdateCapTouchStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::UpdateCapTouchStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCapTouchStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.LateUpdate
void OVRTouchSample::Hand::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnInputFocusLost
void OVRTouchSample::Hand::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnInputFocusAcquired
void OVRTouchSample::Hand::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.InputValueRateChange
float OVRTouchSample::Hand::InputValueRateChange(bool isDown, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::InputValueRateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputValueRateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDown), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, isDown, value);
}
// Autogenerated method: OVRTouchSample.Hand.UpdateAnimStates
void OVRTouchSample::Hand::UpdateAnimStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::UpdateAnimStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnimStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.CollisionEnable
void OVRTouchSample::Hand::CollisionEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::CollisionEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollisionEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.Hand/OVRTouchSample.<>c
#include "OVRTouchSample/Hand_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRTouchSample.Hand/OVRTouchSample.<>c <>9
::OVRTouchSample::Hand::$$c* OVRTouchSample::Hand::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVRTouchSample::Hand::$$c*>("OVRTouchSample", "Hand/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTouchSample.Hand/OVRTouchSample.<>c <>9
void OVRTouchSample::Hand::$$c::_set_$$9(::OVRTouchSample::Hand::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__36_0
::System::Func_2<::UnityEngine::Collider*, bool>* OVRTouchSample::Hand::$$c::_get_$$9__36_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_get_$$9__36_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Collider*, bool>*>("OVRTouchSample", "Hand/<>c", "<>9__36_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__36_0
void OVRTouchSample::Hand::$$c::_set_$$9__36_0(::System::Func_2<::UnityEngine::Collider*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_set_$$9__36_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand/<>c", "<>9__36_0", value)));
}
// Autogenerated method: OVRTouchSample.Hand/OVRTouchSample.<>c..cctor
void OVRTouchSample::Hand::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRTouchSample", "Hand/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand/OVRTouchSample.<>c.<Start>b__36_0
bool OVRTouchSample::Hand::$$c::$Start$b__36_0(::UnityEngine::Collider* childCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::<Start>b__36_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__36_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, childCollider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ProceduralImage.ModifierID
#include "UnityEngine/UI/ProceduralImage/ModifierID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& UnityEngine::UI::ProceduralImage::ModifierID::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ModifierID::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ModifierID.get_Name
::StringW UnityEngine::UI::ProceduralImage::ModifierID::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ModifierID::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImage
#include "UnityEngine/UI/ProceduralImage/ProceduralImage.hpp"
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImageModifier
#include "UnityEngine/UI/ProceduralImage/ProceduralImageModifier.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImageInfo
#include "UnityEngine/UI/ProceduralImage/ProceduralImageInfo.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material materialInstance
::UnityEngine::Material* UnityEngine::UI::ProceduralImage::ProceduralImage::_get_materialInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::_get_materialInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("UnityEngine.UI.ProceduralImage", "ProceduralImage", "materialInstance"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material materialInstance
void UnityEngine::UI::ProceduralImage::ProceduralImage::_set_materialInstance(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::_set_materialInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI.ProceduralImage", "ProceduralImage", "materialInstance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single borderWidth
float& UnityEngine::UI::ProceduralImage::ProceduralImage::dyn_borderWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::dyn_borderWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "borderWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ProceduralImage.ProceduralImageModifier modifier
::UnityEngine::UI::ProceduralImage::ProceduralImageModifier*& UnityEngine::UI::ProceduralImage::ProceduralImage::dyn_modifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::dyn_modifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifier"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ProceduralImage::ProceduralImageModifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single falloffDistance
float& UnityEngine::UI::ProceduralImage::ProceduralImage::dyn_falloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::dyn_falloffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.get_DefaultProceduralImageMaterial
::UnityEngine::Material* UnityEngine::UI::ProceduralImage::ProceduralImage::get_DefaultProceduralImageMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::get_DefaultProceduralImageMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI.ProceduralImage", "ProceduralImage", "get_DefaultProceduralImageMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.set_DefaultProceduralImageMaterial
void UnityEngine::UI::ProceduralImage::ProceduralImage::set_DefaultProceduralImageMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::set_DefaultProceduralImageMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI.ProceduralImage", "ProceduralImage", "set_DefaultProceduralImageMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.get_BorderWidth
float UnityEngine::UI::ProceduralImage::ProceduralImage::get_BorderWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::get_BorderWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BorderWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.set_BorderWidth
void UnityEngine::UI::ProceduralImage::ProceduralImage::set_BorderWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::set_BorderWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BorderWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.get_FalloffDistance
float UnityEngine::UI::ProceduralImage::ProceduralImage::get_FalloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::get_FalloffDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FalloffDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.set_FalloffDistance
void UnityEngine::UI::ProceduralImage::ProceduralImage::set_FalloffDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::set_FalloffDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FalloffDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.get_Modifier
::UnityEngine::UI::ProceduralImage::ProceduralImageModifier* UnityEngine::UI::ProceduralImage::ProceduralImage::get_Modifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::get_Modifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Modifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ProceduralImage::ProceduralImageModifier*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.set_Modifier
void UnityEngine::UI::ProceduralImage::ProceduralImage::set_Modifier(::UnityEngine::UI::ProceduralImage::ProceduralImageModifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::set_Modifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Modifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.get_ModifierType
::System::Type* UnityEngine::UI::ProceduralImage::ProceduralImage::get_ModifierType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::get_ModifierType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ModifierType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.set_ModifierType
void UnityEngine::UI::ProceduralImage::ProceduralImage::set_ModifierType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::set_ModifierType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ModifierType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.Init
void UnityEngine::UI::ProceduralImage::ProceduralImage::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.OnVerticesDirty
void UnityEngine::UI::ProceduralImage::ProceduralImage::OnVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::OnVerticesDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.FixTexCoordsInCanvas
void UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTexCoordsInCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.FixTexCoordsInCanvas
void UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas(::UnityEngine::Canvas* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::FixTexCoordsInCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTexCoordsInCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.FixRadius
::UnityEngine::Vector4 UnityEngine::UI::ProceduralImage::ProceduralImage::FixRadius(::UnityEngine::Vector4 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::FixRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, vec);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.CalculateInfo
::UnityEngine::UI::ProceduralImage::ProceduralImageInfo UnityEngine::UI::ProceduralImage::ProceduralImage::CalculateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::CalculateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ProceduralImage::ProceduralImageInfo, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.EncodeAllInfoIntoVertices
void UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeAllInfoIntoVertices(::UnityEngine::UI::VertexHelper* vh, ::UnityEngine::UI::ProceduralImage::ProceduralImageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeAllInfoIntoVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeAllInfoIntoVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh, info);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.EncodeFloats_0_1_16_16
float UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeFloats_0_1_16_16(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::EncodeFloats_0_1_16_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeFloats_0_1_16_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.get_material
::UnityEngine::Material* UnityEngine::UI::ProceduralImage::ProceduralImage::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::get_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.set_material
void UnityEngine::UI::ProceduralImage::ProceduralImage::set_material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::set_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.OnEnable
void UnityEngine::UI::ProceduralImage::ProceduralImage::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.OnDisable
void UnityEngine::UI::ProceduralImage::ProceduralImage::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.OnPopulateMesh
void UnityEngine::UI::ProceduralImage::ProceduralImage::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImage.OnTransformParentChanged
void UnityEngine::UI::ProceduralImage::ProceduralImage::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImage::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImageInfo
#include "UnityEngine/UI/ProceduralImage/ProceduralImageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single width
float& UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
float& UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fallOffDistance
float& UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_fallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_fallOffDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 radius
::UnityEngine::Vector4& UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_radius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single borderWidth
float& UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_borderWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_borderWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "borderWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pixelSize
float& UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_pixelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageInfo::dyn_pixelSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImageInfo..ctor
UnityEngine::UI::ProceduralImage::ProceduralImageInfo::ProceduralImageInfo(float width, float height, float fallOffDistance, float pixelSize, ::UnityEngine::Vector4 radius, float borderWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(fallOffDistance), ::il2cpp_utils::ExtractType(pixelSize), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(borderWidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height, fallOffDistance, pixelSize, radius, borderWidth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ProceduralImage.ProceduralImageModifier
#include "UnityEngine/UI/ProceduralImage/ProceduralImageModifier.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Graphic graphic
::UnityEngine::UI::Graphic*& UnityEngine::UI::ProceduralImage::ProceduralImageModifier::dyn_graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageModifier::dyn_graphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphic"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImageModifier.get__Graphic
::UnityEngine::UI::Graphic* UnityEngine::UI::ProceduralImage::ProceduralImageModifier::get__Graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageModifier::get__Graphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Graphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ProceduralImage.ProceduralImageModifier.CalculateRadius
::UnityEngine::Vector4 UnityEngine::UI::ProceduralImage::ProceduralImageModifier::CalculateRadius(::UnityEngine::Rect imageRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ProceduralImage::ProceduralImageModifier::CalculateRadius");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(imageRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, imageRect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.Tunnelling
#include "Sigtrap/VrTunnellingPro/Tunnelling.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Sigtrap.VrTunnellingPro.Tunnelling.OnRenderImage
void Sigtrap::VrTunnellingPro::Tunnelling::OnRenderImage(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Tunnelling::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Tunnelling.get__maskCmdEvt
::UnityEngine::Rendering::CameraEvent Sigtrap::VrTunnellingPro::Tunnelling::get__maskCmdEvt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Tunnelling::get__maskCmdEvt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__maskCmdEvt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase
#include "Sigtrap/VrTunnellingPro/TunnellingBase.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode
#include "Sigtrap/VrTunnellingPro/TunnellingBase_BackgroundMode.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode
#include "Sigtrap/VrTunnellingPro/TunnellingBase_MaskMode.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA
#include "Sigtrap/VrTunnellingPro/TunnellingBase_MSAA.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingPresetBase
#include "Sigtrap/VrTunnellingPro/TunnellingPresetBase.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String VRTP_VERSION
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String VRTP_VERSION
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VRTP_VERSION_MAJOR
int Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_MAJOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_MAJOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_MAJOR"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VRTP_VERSION_MAJOR
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_MAJOR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_MAJOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_MAJOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VRTP_VERSION_MINOR
int Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_MINOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_MINOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_MINOR"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VRTP_VERSION_MINOR
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_MINOR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_MINOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_MINOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VRTP_VERSION_PATCH
int Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_PATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_PATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_PATCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VRTP_VERSION_PATCH
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_PATCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_PATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_PATCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.String VRTP_VERSION_BETA
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_BETA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_VRTP_VERSION_BETA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_BETA"));
}
// Autogenerated static field setter
// Set static field: static public System.String VRTP_VERSION_BETA
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_BETA(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_VRTP_VERSION_BETA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "VRTP_VERSION_BETA", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_FOGCOLOR
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGCOLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGCOLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGCOLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_FOGCOLOR
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGCOLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGCOLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGCOLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_FOGDENSITY
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGDENSITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGDENSITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGDENSITY"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_FOGDENSITY
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGDENSITY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGDENSITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGDENSITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_FOGPOWER
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGPOWER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGPOWER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGPOWER"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_FOGPOWER
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGPOWER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGPOWER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGPOWER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_FOGBLEND
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGBLEND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_GLOBAL_PROP_FOGBLEND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGBLEND"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_FOGBLEND
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGBLEND(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_GLOBAL_PROP_FOGBLEND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "GLOBAL_PROP_FOGBLEND", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PATH_SHADERS
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PATH_SHADERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PATH_SHADERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PATH_SHADERS"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PATH_SHADERS
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PATH_SHADERS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PATH_SHADERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PATH_SHADERS", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PATH_MESHES
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PATH_MESHES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PATH_MESHES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PATH_MESHES"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PATH_MESHES
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PATH_MESHES(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PATH_MESHES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PATH_MESHES", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PATH_IRISMESH
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PATH_IRISMESH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PATH_IRISMESH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PATH_IRISMESH"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PATH_IRISMESH
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PATH_IRISMESH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PATH_IRISMESH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PATH_IRISMESH", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PROP_OUTER
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_OUTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_OUTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_OUTER"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PROP_OUTER
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_OUTER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_OUTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_OUTER", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PROP_INNER
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_INNER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_INNER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_INNER"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PROP_INNER
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_INNER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_INNER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_INNER", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PROP_COLOR
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_COLOR"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PROP_COLOR
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PROP_SKYBOX
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_SKYBOX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_SKYBOX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_SKYBOX"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PROP_SKYBOX
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_SKYBOX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_SKYBOX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_SKYBOX", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PROP_EYEPRJ
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_EYEPRJ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_EYEPRJ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_EYEPRJ"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PROP_EYEPRJ
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_EYEPRJ(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_EYEPRJ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_EYEPRJ", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String PROP_EYEMAT
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_EYEMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_PROP_EYEMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_EYEMAT"));
}
// Autogenerated static field setter
// Set static field: static protected System.String PROP_EYEMAT
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_EYEMAT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_PROP_EYEMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "PROP_EYEMAT", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String KEYWORD_BKG
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_KEYWORD_BKG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_KEYWORD_BKG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "KEYWORD_BKG"));
}
// Autogenerated static field setter
// Set static field: static protected System.String KEYWORD_BKG
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_KEYWORD_BKG(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_KEYWORD_BKG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "KEYWORD_BKG", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String KEYWORD_SKYBOX
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_KEYWORD_SKYBOX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_KEYWORD_SKYBOX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "KEYWORD_SKYBOX"));
}
// Autogenerated static field setter
// Set static field: static protected System.String KEYWORD_SKYBOX
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_KEYWORD_SKYBOX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_KEYWORD_SKYBOX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "KEYWORD_SKYBOX", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String KEYWORD_OVERLAY
::StringW Sigtrap::VrTunnellingPro::TunnellingBase::_get_KEYWORD_OVERLAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_KEYWORD_OVERLAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingBase", "KEYWORD_OVERLAY"));
}
// Autogenerated static field setter
// Set static field: static protected System.String KEYWORD_OVERLAY
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_KEYWORD_OVERLAY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_KEYWORD_OVERLAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "KEYWORD_OVERLAY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FEATHER_MAX
float Sigtrap::VrTunnellingPro::TunnellingBase::_get_FEATHER_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_FEATHER_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Sigtrap.VrTunnellingPro", "TunnellingBase", "FEATHER_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FEATHER_MAX
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_FEATHER_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_FEATHER_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "FEATHER_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MOTION_STRENGTH_MAX
float Sigtrap::VrTunnellingPro::TunnellingBase::_get_MOTION_STRENGTH_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_MOTION_STRENGTH_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Sigtrap.VrTunnellingPro", "TunnellingBase", "MOTION_STRENGTH_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MOTION_STRENGTH_MAX
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_MOTION_STRENGTH_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_MOTION_STRENGTH_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "MOTION_STRENGTH_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single COUNTER_STRENGTH_MAX
float Sigtrap::VrTunnellingPro::TunnellingBase::_get_COUNTER_STRENGTH_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_COUNTER_STRENGTH_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Sigtrap.VrTunnellingPro", "TunnellingBase", "COUNTER_STRENGTH_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single COUNTER_STRENGTH_MAX
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_COUNTER_STRENGTH_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_COUNTER_STRENGTH_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "COUNTER_STRENGTH_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 FPSDIV_MAX
int Sigtrap::VrTunnellingPro::TunnellingBase::_get_FPSDIV_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_FPSDIV_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingBase", "FPSDIV_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 FPSDIV_MAX
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_FPSDIV_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_FPSDIV_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "FPSDIV_MAX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single COVERAGE_MIN
float Sigtrap::VrTunnellingPro::TunnellingBase::_get_COVERAGE_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_get_COVERAGE_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Sigtrap.VrTunnellingPro", "TunnellingBase", "COVERAGE_MIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single COVERAGE_MIN
void Sigtrap::VrTunnellingPro::TunnellingBase::_set_COVERAGE_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::_set_COVERAGE_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase", "COVERAGE_MIN", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _propFxInner
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propFxInner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propFxInner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propFxInner"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _propFxOuter
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propFxOuter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propFxOuter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propFxOuter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propEyeProjection
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propEyeProjection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propEyeProjection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propEyeProjection"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propEyeToWorld
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propEyeToWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__propEyeToWorld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propEyeToWorld"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _globPropFogColor
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropFogColor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _globPropFogDensity
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropFogDensity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _globPropFogPower
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropFogPower"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _globPropFogBlend
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__globPropFogBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropFogBlend"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[] _eyeToWorld
::ArrayW<::UnityEngine::Matrix4x4>& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__eyeToWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__eyeToWorld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeToWorld"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[] _eyeProjection
::ArrayW<::UnityEngine::Matrix4x4>& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__eyeProjection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__eyeProjection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeProjection"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform motionTarget
::UnityEngine::Transform*& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_motionTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_motionTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motionTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color effectColor
::UnityEngine::Color& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single effectCoverage
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectCoverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectCoverage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single effectFeather
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectFeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectFeather");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectFeather"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Cubemap effectSkybox
::UnityEngine::Cubemap*& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_effectSkybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectSkybox"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean applyColorToBackground
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_applyColorToBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_applyColorToBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applyColorToBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useAngularVelocity
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAngularVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angularVelocityStrength
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocityStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularVelocityStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angularVelocityMin
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocityMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocityMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularVelocityMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angularVelocityMax
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocityMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocityMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularVelocityMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angularVelocitySmoothing
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocitySmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_angularVelocitySmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angularVelocitySmoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useAcceleration
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAcceleration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single accelerationStrength
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accelerationStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single accelerationMin
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accelerationMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single accelerationMax
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accelerationMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single accelerationSmoothing
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_accelerationSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accelerationSmoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useVelocity
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityStrength
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocityStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityMin
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocityMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocityMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityMax
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocityMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocityMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocitySmoothing
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocitySmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_velocitySmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocitySmoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode forceVignetteMode
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_forceVignetteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_forceVignetteMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceVignetteMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single forceVignetteValue
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_forceVignetteValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_forceVignetteValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceVignetteValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform motionEffectTarget
::UnityEngine::Transform*& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_motionEffectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_motionEffectTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motionEffectTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useCounterMotion
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useCounterMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useCounterMotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCounterMotion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single counterRotationStrength
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_counterRotationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_counterRotationStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counterRotationStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 counterRotationPerAxis
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_counterRotationPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_counterRotationPerAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counterRotationPerAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useArtificialTilt
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useArtificialTilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_useArtificialTilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useArtificialTilt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tiltStrength
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_tiltStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_tiltStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiltStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 tiltMaxAngles
::UnityEngine::Vector2& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_tiltMaxAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_tiltMaxAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiltMaxAngles"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tiltSmoothTime
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_tiltSmoothTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_tiltSmoothTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiltSmoothTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 framerateDivision
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_framerateDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_framerateDivision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerateDivision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean divideTranslation
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_divideTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_divideTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "divideTranslation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean divideRotation
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn_divideRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn_divideRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "divideRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _lastRot
::UnityEngine::Quaternion& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastFwd
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastFwd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastFwd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFwd"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastPos
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastSpeed
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastVel
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastVel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastVel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastVel"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Quaternion _cmRot
::UnityEngine::Quaternion& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__cmRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__cmRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cmRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _avSmoothed
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__avSmoothed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__avSmoothed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avSmoothed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _avSlew
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__avSlew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__avSlew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avSlew"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speedSmoothed
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__speedSmoothed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__speedSmoothed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedSmoothed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speedSlew
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__speedSlew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__speedSlew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedSlew"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accelSmoothed
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__accelSmoothed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__accelSmoothed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accelSmoothed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accelSlew
float& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__accelSlew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__accelSlew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accelSlew"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _prevMotionEffectTarget
::UnityEngine::Transform*& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__prevMotionEffectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__prevMotionEffectTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMotionEffectTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _prevUseTilt
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__prevUseTilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__prevUseTilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevUseTilt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _tiltAccelSmoothed
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__tiltAccelSmoothed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__tiltAccelSmoothed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltAccelSmoothed"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _tiltAccelSlew
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__tiltAccelSlew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__tiltAccelSlew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltAccelSlew"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.Angle3 _tiltInit
::Sigtrap::VrTunnellingPro::Angle3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__tiltInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__tiltInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltInit"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::Angle3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFpsDivision
int& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastFpsDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__lastFpsDivision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFpsDivision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _mfxTgtLocalPosInit
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__mfxTgtLocalPosInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__mfxTgtLocalPosInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mfxTgtLocalPosInit"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _mfxTgtLocalRotInit
::UnityEngine::Quaternion& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__mfxTgtLocalRotInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__mfxTgtLocalRotInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mfxTgtLocalRotInit"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _cam
::UnityEngine::Camera*& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__cam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__cam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cam"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _hasDrawnThisFrame
bool& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__hasDrawnThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__hasDrawnThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasDrawnThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _fpsPosition
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__fpsPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__fpsPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fpsPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _fpsRotation
::UnityEngine::Quaternion& Sigtrap::VrTunnellingPro::TunnellingBase::dyn__fpsRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::dyn__fpsRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fpsRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.get_usingMotionEffectTarget
bool Sigtrap::VrTunnellingPro::TunnellingBase::get_usingMotionEffectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::get_usingMotionEffectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usingMotionEffectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.Awake
void Sigtrap::VrTunnellingPro::TunnellingBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.OnEnable
void Sigtrap::VrTunnellingPro::TunnellingBase::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.ApplyPresetBase
void Sigtrap::VrTunnellingPro::TunnellingBase::ApplyPresetBase(::Sigtrap::VrTunnellingPro::TunnellingPresetBase* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ApplyPresetBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyPresetBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.FillMaskBuffer
void Sigtrap::VrTunnellingPro::TunnellingBase::FillMaskBuffer(::UnityEngine::Rendering::CommandBuffer* cb, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* rs, ::UnityEngine::Material* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::FillMaskBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillMaskBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(rs), ::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cb, rs, m);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.ResetMotion
void Sigtrap::VrTunnellingPro::TunnellingBase::ResetMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ResetMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.ResetCounterMotion
void Sigtrap::VrTunnellingPro::TunnellingBase::ResetCounterMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ResetCounterMotion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCounterMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.RemapRadius
float Sigtrap::VrTunnellingPro::TunnellingBase::RemapRadius(float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::RemapRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemapRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, radius);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.CalculateMotion
float Sigtrap::VrTunnellingPro::TunnellingBase::CalculateMotion(float dT) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::CalculateMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dT)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, dT);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.SmoothDampAngle
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::TunnellingBase::SmoothDampAngle(::UnityEngine::Vector3 current, ::UnityEngine::Vector3 target, ByRef<::UnityEngine::Vector3> vel, float smoothTime, float maxSpeed, float dT) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::SmoothDampAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "TunnellingBase", "SmoothDampAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(vel), ::il2cpp_utils::ExtractType(smoothTime), ::il2cpp_utils::ExtractType(maxSpeed), ::il2cpp_utils::ExtractType(dT)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(vel), smoothTime, maxSpeed, dT);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.UpdateCounterMotion
void Sigtrap::VrTunnellingPro::TunnellingBase::UpdateCounterMotion(::UnityEngine::Vector3 deltaPos, ::UnityEngine::Quaternion deltaRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::UpdateCounterMotion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCounterMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPos), ::il2cpp_utils::ExtractType(deltaRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaPos, deltaRot);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.GetCounterRotationDelta
::UnityEngine::Quaternion Sigtrap::VrTunnellingPro::TunnellingBase::GetCounterRotationDelta(::UnityEngine::Quaternion deltaRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::GetCounterRotationDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCounterRotationDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaRot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, deltaRot);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.UpdateEyeMatrices
void Sigtrap::VrTunnellingPro::TunnellingBase::UpdateEyeMatrices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::UpdateEyeMatrices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEyeMatrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.CorrectEyeMatrices
void Sigtrap::VrTunnellingPro::TunnellingBase::CorrectEyeMatrices(::ArrayW<::UnityEngine::Matrix4x4> eyePrj, ::ArrayW<::UnityEngine::Matrix4x4> eyeToWorld) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::CorrectEyeMatrices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CorrectEyeMatrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyePrj), ::il2cpp_utils::ExtractType(eyeToWorld)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eyePrj, eyeToWorld);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingBase.ApplyEyeMatrices
void Sigtrap::VrTunnellingPro::TunnellingBase::ApplyEyeMatrices(::UnityEngine::Material* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ApplyEyeMatrices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyEyeMatrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode
#include "Sigtrap/VrTunnellingPro/TunnellingBase_BackgroundMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode COLOR
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "COLOR"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode COLOR
void Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_COLOR(::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode SKYBOX
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_SKYBOX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_SKYBOX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "SKYBOX"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode SKYBOX
void Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_SKYBOX(::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_SKYBOX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "SKYBOX", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode CAGE_COLOR
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_CAGE_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_CAGE_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "CAGE_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode CAGE_COLOR
void Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_CAGE_COLOR(::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_CAGE_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "CAGE_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode CAGE_SKYBOX
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_CAGE_SKYBOX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_CAGE_SKYBOX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "CAGE_SKYBOX"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode CAGE_SKYBOX
void Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_CAGE_SKYBOX(::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_CAGE_SKYBOX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "CAGE_SKYBOX", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode CAGE_ONLY
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_CAGE_ONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_CAGE_ONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "CAGE_ONLY"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode CAGE_ONLY
void Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_CAGE_ONLY(::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_CAGE_ONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "CAGE_ONLY", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode BLUR
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_BLUR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_get_BLUR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "BLUR"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode BLUR
void Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_BLUR(::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::_set_BLUR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/BackgroundMode", "BLUR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode
#include "Sigtrap/VrTunnellingPro/TunnellingBase_MaskMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode OFF
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_OFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_OFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "OFF"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode OFF
void Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_OFF(::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_OFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "OFF", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode MASK
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "MASK"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode MASK
void Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_MASK(::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "MASK", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode WINDOW
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_WINDOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_WINDOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "WINDOW"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode WINDOW
void Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_WINDOW(::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_WINDOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "WINDOW", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode PORTAL
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_PORTAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_get_PORTAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "PORTAL"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode PORTAL
void Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_PORTAL(::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::_set_PORTAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MaskMode", "PORTAL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA
#include "Sigtrap/VrTunnellingPro/TunnellingBase_MSAA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA AUTO
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_AUTO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_AUTO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA>("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "AUTO"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA AUTO
void Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_AUTO(::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_AUTO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "AUTO", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA OFF
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_OFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_OFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA>("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "OFF"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA OFF
void Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_OFF(::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_OFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "OFF", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA X2
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_X2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_X2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA>("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "X2"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA X2
void Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_X2(::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_X2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "X2", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA X4
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_X4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_X4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA>("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "X4"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA X4
void Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_X4(::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_X4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "X4", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA X8
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_X8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_get_X8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA>("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "X8"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA X8
void Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_X8(::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::_set_X8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/MSAA", "X8", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode
#include "Sigtrap/VrTunnellingPro/TunnellingBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode NONE
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode NONE
void Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_NONE(::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode CONSTANT
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_CONSTANT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_CONSTANT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "CONSTANT"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode CONSTANT
void Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_CONSTANT(::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_CONSTANT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "CONSTANT", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode MAX
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "MAX"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode MAX
void Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_MAX(::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "MAX", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode MIN
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "MIN"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode MIN
void Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_MIN(::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "MIN", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode ADD
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_ADD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_get_ADD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode>("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "ADD"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode ADD
void Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_ADD(::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::_set_ADD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingBase/ForceVignetteMode", "ADD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Sigtrap.VrTunnellingPro.Angle
#include "Sigtrap/VrTunnellingPro/Angle.hpp"
// Including type: Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType
#include "Sigtrap/VrTunnellingPro/Angle_AngleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _angle
float& Sigtrap::VrTunnellingPro::Angle::dyn__angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::dyn__angle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.get_angle
float Sigtrap::VrTunnellingPro::Angle::get_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::get_angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.get_acute
float Sigtrap::VrTunnellingPro::Angle::get_acute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::get_acute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_acute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.get_reflex
float Sigtrap::VrTunnellingPro::Angle::get_reflex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::get_reflex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_reflex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle..ctor
// ABORTED elsewhere.  Sigtrap::VrTunnellingPro::Angle::Angle(float a)
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle..ctor
// ABORTED elsewhere.  Sigtrap::VrTunnellingPro::Angle::Angle(::Sigtrap::VrTunnellingPro::Angle a)
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.ToFloat
float Sigtrap::VrTunnellingPro::Angle::ToFloat(::Sigtrap::VrTunnellingPro::Angle::AngleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::ToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, type);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.ToAngle
float Sigtrap::VrTunnellingPro::Angle::ToAngle(float a, ::Sigtrap::VrTunnellingPro::Angle::AngleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::ToAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "ToAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, type);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.ToString
::StringW Sigtrap::VrTunnellingPro::Angle::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.Equals
bool Sigtrap::VrTunnellingPro::Angle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.GetHashCode
int Sigtrap::VrTunnellingPro::Angle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_LessThan
bool Sigtrap::VrTunnellingPro::operator <(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_GreaterThan
bool Sigtrap::VrTunnellingPro::operator >(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_LessThanOrEqual
bool Sigtrap::VrTunnellingPro::operator <=(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_GreaterThanOrEqual
bool Sigtrap::VrTunnellingPro::operator >=(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Addition
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator+(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Subtraction
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator-(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Equality
bool Sigtrap::VrTunnellingPro::operator ==(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Inequality
bool Sigtrap::VrTunnellingPro::operator !=(const ::Sigtrap::VrTunnellingPro::Angle& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_LessThan
bool Sigtrap::VrTunnellingPro::operator <(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_GreaterThan
bool Sigtrap::VrTunnellingPro::operator >(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_LessThanOrEqual
bool Sigtrap::VrTunnellingPro::operator <=(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_GreaterThanOrEqual
bool Sigtrap::VrTunnellingPro::operator >=(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Addition
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator+(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Subtraction
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator-(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Multiply
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator*(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Division
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator/(const ::Sigtrap::VrTunnellingPro::Angle& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_LessThan
bool Sigtrap::VrTunnellingPro::operator <(const float& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_GreaterThan
bool Sigtrap::VrTunnellingPro::operator >(const float& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_LessThanOrEqual
bool Sigtrap::VrTunnellingPro::operator <=(const float& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_GreaterThanOrEqual
bool Sigtrap::VrTunnellingPro::operator >=(const float& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Addition
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator+(const float& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle.op_Subtraction
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::operator-(const float& a, const ::Sigtrap::VrTunnellingPro::Angle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType
#include "Sigtrap/VrTunnellingPro/Angle_AngleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType ANGLE
::Sigtrap::VrTunnellingPro::Angle::AngleType Sigtrap::VrTunnellingPro::Angle::AngleType::_get_ANGLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::AngleType::_get_ANGLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::Angle::AngleType>("Sigtrap.VrTunnellingPro", "Angle/AngleType", "ANGLE"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType ANGLE
void Sigtrap::VrTunnellingPro::Angle::AngleType::_set_ANGLE(::Sigtrap::VrTunnellingPro::Angle::AngleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::AngleType::_set_ANGLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "Angle/AngleType", "ANGLE", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType ACUTE
::Sigtrap::VrTunnellingPro::Angle::AngleType Sigtrap::VrTunnellingPro::Angle::AngleType::_get_ACUTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::AngleType::_get_ACUTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::Angle::AngleType>("Sigtrap.VrTunnellingPro", "Angle/AngleType", "ACUTE"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType ACUTE
void Sigtrap::VrTunnellingPro::Angle::AngleType::_set_ACUTE(::Sigtrap::VrTunnellingPro::Angle::AngleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::AngleType::_set_ACUTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "Angle/AngleType", "ACUTE", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType REFLEX
::Sigtrap::VrTunnellingPro::Angle::AngleType Sigtrap::VrTunnellingPro::Angle::AngleType::_get_REFLEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::AngleType::_get_REFLEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::Angle::AngleType>("Sigtrap.VrTunnellingPro", "Angle/AngleType", "REFLEX"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType REFLEX
void Sigtrap::VrTunnellingPro::Angle::AngleType::_set_REFLEX(::Sigtrap::VrTunnellingPro::Angle::AngleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::AngleType::_set_REFLEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "Angle/AngleType", "REFLEX", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Sigtrap::VrTunnellingPro::Angle::AngleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle::AngleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Sigtrap.VrTunnellingPro.Angle3
#include "Sigtrap/VrTunnellingPro/Angle3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Sigtrap.VrTunnellingPro.Angle/Sigtrap.VrTunnellingPro.AngleType
#include "Sigtrap/VrTunnellingPro/Angle_AngleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.Angle x
::Sigtrap::VrTunnellingPro::Angle& Sigtrap::VrTunnellingPro::Angle3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::Angle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.Angle y
::Sigtrap::VrTunnellingPro::Angle& Sigtrap::VrTunnellingPro::Angle3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::Angle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.Angle z
::Sigtrap::VrTunnellingPro::Angle& Sigtrap::VrTunnellingPro::Angle3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::Angle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.get_eulerAngles
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::Angle3::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.get_eulerAcute
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::Angle3::get_eulerAcute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::get_eulerAcute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_eulerAcute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.get_eulerReflex
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::Angle3::get_eulerReflex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::get_eulerReflex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_eulerReflex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.get_angle
::Sigtrap::VrTunnellingPro::Angle Sigtrap::VrTunnellingPro::Angle3::get_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::get_angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.get_axis
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::Angle3::get_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::get_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3..ctor
Sigtrap::VrTunnellingPro::Angle3::Angle3(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3..ctor
// ABORTED elsewhere.  Sigtrap::VrTunnellingPro::Angle3::Angle3(::Sigtrap::VrTunnellingPro::Angle x, ::Sigtrap::VrTunnellingPro::Angle y, ::Sigtrap::VrTunnellingPro::Angle z)
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3..ctor
Sigtrap::VrTunnellingPro::Angle3::Angle3(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, euler);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3..ctor
Sigtrap::VrTunnellingPro::Angle3::Angle3(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.ToAxisAngle
void Sigtrap::VrTunnellingPro::Angle3::ToAxisAngle(ByRef<::UnityEngine::Vector3> axis, ByRef<::Sigtrap::VrTunnellingPro::Angle> angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::ToAxisAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToAxisAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::Sigtrap::VrTunnellingPro::Angle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(axis), byref(angle));
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.ToEuler
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::Angle3::ToEuler(::Sigtrap::VrTunnellingPro::Angle::AngleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::ToEuler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToEuler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, type);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.ToString
::StringW Sigtrap::VrTunnellingPro::Angle3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.Equals
bool Sigtrap::VrTunnellingPro::Angle3::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.GetHashCode
int Sigtrap::VrTunnellingPro::Angle3::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.op_Addition
::Sigtrap::VrTunnellingPro::Angle3 Sigtrap::VrTunnellingPro::operator+(const ::Sigtrap::VrTunnellingPro::Angle3& a, const ::Sigtrap::VrTunnellingPro::Angle3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.op_Subtraction
::Sigtrap::VrTunnellingPro::Angle3 Sigtrap::VrTunnellingPro::operator-(const ::Sigtrap::VrTunnellingPro::Angle3& a, const ::Sigtrap::VrTunnellingPro::Angle3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.op_Multiply
::Sigtrap::VrTunnellingPro::Angle3 Sigtrap::VrTunnellingPro::operator*(const ::Sigtrap::VrTunnellingPro::Angle3& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::Angle3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.op_Equality
bool Sigtrap::VrTunnellingPro::operator ==(const ::Sigtrap::VrTunnellingPro::Angle3& a, const ::Sigtrap::VrTunnellingPro::Angle3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle3", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.Angle3.op_Inequality
bool Sigtrap::VrTunnellingPro::operator !=(const ::Sigtrap::VrTunnellingPro::Angle3& a, const ::Sigtrap::VrTunnellingPro::Angle3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::Angle3::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "Angle3", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingImageBase
#include "Sigtrap/VrTunnellingPro/TunnellingImageBase.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingPreset
#include "Sigtrap/VrTunnellingPro/TunnellingPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String KEYWORD_MASK
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_MASK"));
}
// Autogenerated static field setter
// Set static field: static private System.String KEYWORD_MASK
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_MASK(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_MASK", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KEYWORD_CONSTANT
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_CONSTANT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_CONSTANT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_CONSTANT"));
}
// Autogenerated static field setter
// Set static field: static private System.String KEYWORD_CONSTANT
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_CONSTANT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_CONSTANT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_CONSTANT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KEYWORD_INVERT
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_INVERT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_INVERT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_INVERT"));
}
// Autogenerated static field setter
// Set static field: static private System.String KEYWORD_INVERT
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_INVERT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_INVERT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_INVERT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KEYWORD_BLUR
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_BLUR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_KEYWORD_BLUR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_BLUR"));
}
// Autogenerated static field setter
// Set static field: static private System.String KEYWORD_BLUR
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_BLUR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_KEYWORD_BLUR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "KEYWORD_BLUR", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_TUNNELSHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_TUNNELSHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_TUNNELSHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_TUNNELSHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_TUNNELSHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_TUNNELSHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_TUNNELSHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_TUNNELSHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_MASKSHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_MASKSHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_MASKSHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_MASKSHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_MASKSHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_MASKSHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_MASKSHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_MASKSHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_WINDOWSHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_WINDOWSHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_WINDOWSHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_WINDOWSHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_WINDOWSHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_WINDOWSHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_WINDOWSHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_WINDOWSHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_COPYSHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_COPYSHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_COPYSHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_COPYSHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_COPYSHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_COPYSHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_COPYSHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_COPYSHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_BLURSHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_BLURSHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_BLURSHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_BLURSHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_BLURSHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_BLURSHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_BLURSHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_BLURSHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_IRISSHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_IRISSHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_IRISSHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_IRISSHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_IRISSHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_IRISSHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_IRISSHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_IRISSHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_SKYSPHERESHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_SKYSPHERESHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_SKYSPHERESHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_SKYSPHERESHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_SKYSPHERESHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_SKYSPHERESHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_SKYSPHERESHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_SKYSPHERESHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_SKYSPHEREMESH
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_SKYSPHEREMESH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PATH_SKYSPHEREMESH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_SKYSPHEREMESH"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_SKYSPHEREMESH
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_SKYSPHEREMESH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PATH_SKYSPHEREMESH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PATH_SKYSPHEREMESH", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PROP_FEATHER
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_FEATHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_FEATHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_FEATHER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PROP_FEATHER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_FEATHER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_FEATHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_FEATHER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PROP_BKGRT
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_BKGRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_BKGRT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_BKGRT"));
}
// Autogenerated static field setter
// Set static field: static private System.String PROP_BKGRT
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_BKGRT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_BKGRT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_BKGRT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PROP_MASKRT
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_MASKRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_MASKRT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_MASKRT"));
}
// Autogenerated static field setter
// Set static field: static private System.String PROP_MASKRT
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_MASKRT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_MASKRT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_MASKRT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PROP_BLUR
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_BLUR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_BLUR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_BLUR"));
}
// Autogenerated static field setter
// Set static field: static private System.String PROP_BLUR
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_BLUR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_BLUR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_BLUR", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PROP_OVERLAY
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_OVERLAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_OVERLAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_OVERLAY"));
}
// Autogenerated static field setter
// Set static field: static private System.String PROP_OVERLAY
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_OVERLAY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_OVERLAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_OVERLAY", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PROP_BLUR_OFFSETS
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_BLUR_OFFSETS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_PROP_BLUR_OFFSETS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_BLUR_OFFSETS"));
}
// Autogenerated static field setter
// Set static field: static private System.String PROP_BLUR_OFFSETS
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_BLUR_OFFSETS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_PROP_BLUR_OFFSETS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "PROP_BLUR_OFFSETS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single BLUR_OFFSET_1
float Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_BLUR_OFFSET_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_BLUR_OFFSET_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "BLUR_OFFSET_1"));
}
// Autogenerated static field setter
// Set static field: static private System.Single BLUR_OFFSET_1
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_BLUR_OFFSET_1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_BLUR_OFFSET_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "BLUR_OFFSET_1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single[] BLUR_OFFSETS_9
::ArrayW<float> Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_BLUR_OFFSETS_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_BLUR_OFFSETS_9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "BLUR_OFFSETS_9"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[] BLUR_OFFSETS_9
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_BLUR_OFFSETS_9(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_BLUR_OFFSETS_9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "BLUR_OFFSETS_9", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single[] BLUR_OFFSETS_13
::ArrayW<float> Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_BLUR_OFFSETS_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_BLUR_OFFSETS_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "BLUR_OFFSETS_13"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[] BLUR_OFFSETS_13
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_BLUR_OFFSETS_13(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_BLUR_OFFSETS_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "BLUR_OFFSETS_13", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_WORLD2CAGE
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_GLOBAL_PROP_WORLD2CAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_GLOBAL_PROP_WORLD2CAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "GLOBAL_PROP_WORLD2CAGE"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_WORLD2CAGE
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_GLOBAL_PROP_WORLD2CAGE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_GLOBAL_PROP_WORLD2CAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "GLOBAL_PROP_WORLD2CAGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_WORLD2CAGE_NORMAL
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_GLOBAL_PROP_WORLD2CAGE_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_GLOBAL_PROP_WORLD2CAGE_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "GLOBAL_PROP_WORLD2CAGE_NORMAL"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_WORLD2CAGE_NORMAL
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_GLOBAL_PROP_WORLD2CAGE_NORMAL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_GLOBAL_PROP_WORLD2CAGE_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "GLOBAL_PROP_WORLD2CAGE_NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_CAGEPOS
::StringW Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_GLOBAL_PROP_CAGEPOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_GLOBAL_PROP_CAGEPOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "GLOBAL_PROP_CAGEPOS"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_CAGEPOS
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_GLOBAL_PROP_CAGEPOS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_GLOBAL_PROP_CAGEPOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "GLOBAL_PROP_CAGEPOS", value));
}
// Autogenerated static field getter
// Get static field: static private Sigtrap.VrTunnellingPro.TunnellingImageBase <instance>k__BackingField
::Sigtrap::VrTunnellingPro::TunnellingImageBase* Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_$instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_get_$instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingImageBase*>("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Sigtrap.VrTunnellingPro.TunnellingImageBase <instance>k__BackingField
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_$instance$k__BackingField(::Sigtrap::VrTunnellingPro::TunnellingImageBase* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::_set_$instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "<instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode backgroundMode
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_backgroundMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_backgroundMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single effectOverlay
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_effectOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_effectOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectOverlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _cageParent
::UnityEngine::GameObject*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cageDownsample
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cageDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA cageAntiAliasing
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cageAntiAliasing"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cageUpdateEveryFrame
bool& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageUpdateEveryFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageUpdateEveryFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cageUpdateEveryFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cageFogDensity
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageFogDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageFogDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cageFogDensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cageFogPower
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageFogPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageFogPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cageFogPower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cageFogBlend
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageFogBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_cageFogBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cageFogBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode maskMode
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_maskMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_maskMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maskMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 blurDownsample
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blurDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single blurDistance
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blurDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 blurPasses
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurPasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurPasses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blurPasses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel blurSamples
::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_blurSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blurSamples"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean irisZRejection
bool& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_irisZRejection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_irisZRejection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "irisZRejection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode counterVelocityMode
::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counterVelocityMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single counterVelocityResetDistance
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityResetDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityResetDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counterVelocityResetDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single counterVelocityResetTime
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityResetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityResetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counterVelocityResetTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single counterVelocityStrength
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counterVelocityStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 counterVelocityPerAxis
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn_counterVelocityPerAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counterVelocityPerAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _maskCmd
::UnityEngine::Rendering::CommandBuffer*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__maskCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__maskCmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maskCmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _matTunnel
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matTunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matTunnel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matTunnel"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _matMask
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _matWindow
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matWindow"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _matCopyAlpha
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matCopyAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matCopyAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matCopyAlpha"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _matBlur
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matBlur"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _matSkysphere
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matSkysphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matSkysphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matSkysphere"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _meshSkysphere
::UnityEngine::Mesh*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__meshSkysphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__meshSkysphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshSkysphere"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _cageMrs
::ArrayW<::UnityEngine::MeshRenderer*>& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageMrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageMrs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageMrs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.MeshFilter> _cageMfs
::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageMfs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageMfs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageMfs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> _maskObjects
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__maskObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__maskObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maskObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _cageRt
::UnityEngine::RenderTexture*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageRt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageRt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageRt"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _maskRt
::UnityEngine::RenderTexture*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__maskRt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__maskRt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maskRt"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _blurRt0
::UnityEngine::RenderTexture*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__blurRt0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__blurRt0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurRt0"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _blurRt1
::UnityEngine::RenderTexture*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__blurRt1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__blurRt1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurRt1"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rtX
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__rtX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__rtX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rtX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rtY
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__rtY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__rtY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rtY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rtA
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__rtA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__rtA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rtA"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _irisCmd
::UnityEngine::Rendering::CommandBuffer*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__irisCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__irisCmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_irisCmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _matIris
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matIris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__matIris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matIris"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _meshIris
::UnityEngine::Mesh*& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__meshIris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__meshIris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshIris"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4[] _blurOffsets
::ArrayW<::UnityEngine::Vector4>& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__blurOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__blurOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode _lastMaskMode
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastMaskMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastMaskMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastMaskMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA _lastCageMsaa
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastCageMsaa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastCageMsaa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCageMsaa"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _camHasMaskBuffer
bool& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__camHasMaskBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__camHasMaskBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camHasMaskBuffer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastCageDownsample
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastCageDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastCageDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCageDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastBlurDownsample
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastBlurDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastBlurDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastBlurDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastBlurRadius
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastBlurRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastBlurRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastBlurRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel _lastBlurKernel
::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastBlurKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastBlurKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastBlurKernel"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasDrawingIrisEarly
bool& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__wasDrawingIrisEarly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__wasDrawingIrisEarly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasDrawingIrisEarly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _camHasIrisBuffer
bool& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__camHasIrisBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__camHasIrisBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camHasIrisBuffer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode _lastCvMode
::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastCvMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__lastCvMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCvMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cmPos
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cmPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cmPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cmPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cageInitialPosLocal
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageInitialPosLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__cageInitialPosLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageInitialPosLocal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToResetCounterVelocity
float& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__timeToResetCounterVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__timeToResetCounterVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToResetCounterVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propColor
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propColor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propBkgRt
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propBkgRt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propBkgRt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propBkgRt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propMaskRt
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propMaskRt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propMaskRt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propMaskRt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propSkybox
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propSkybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propSkybox"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propOverlay
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propOverlay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propBlur
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propBlur"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propBlurOffsets
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propBlurOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__propBlurOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propBlurOffsets"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _globPropWorld2Cage
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__globPropWorld2Cage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__globPropWorld2Cage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropWorld2Cage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _globPropWorld2CageNormal
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__globPropWorld2CageNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__globPropWorld2CageNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropWorld2CageNormal"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _globPropCagePos
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__globPropCagePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::dyn__globPropCagePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropCagePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get_instance
::Sigtrap::VrTunnellingPro::TunnellingImageBase* Sigtrap::VrTunnellingPro::TunnellingImageBase::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingImageBase*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.set_instance
void Sigtrap::VrTunnellingPro::TunnellingImageBase::set_instance(::Sigtrap::VrTunnellingPro::TunnellingImageBase* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::set_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "TunnellingImageBase", "set_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get_usingMask
bool Sigtrap::VrTunnellingPro::TunnellingImageBase::get_usingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get_usingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get_usingCage
bool Sigtrap::VrTunnellingPro::TunnellingImageBase::get_usingCage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get_usingCage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usingCage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get__usingCageRt
bool Sigtrap::VrTunnellingPro::TunnellingImageBase::get__usingCageRt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get__usingCageRt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__usingCageRt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get__canDrawIris
bool Sigtrap::VrTunnellingPro::TunnellingImageBase::get__canDrawIris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get__canDrawIris");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__canDrawIris", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get__drawIris
bool Sigtrap::VrTunnellingPro::TunnellingImageBase::get__drawIris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get__drawIris");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__drawIris", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get__isInstanced
bool Sigtrap::VrTunnellingPro::TunnellingImageBase::get__isInstanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get__isInstanced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__isInstanced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.get__maskCmdEvt
::UnityEngine::Rendering::CameraEvent Sigtrap::VrTunnellingPro::TunnellingImageBase::get__maskCmdEvt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::get__maskCmdEvt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__maskCmdEvt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.OnDisable
void Sigtrap::VrTunnellingPro::TunnellingImageBase::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.OnDestroy
void Sigtrap::VrTunnellingPro::TunnellingImageBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.ReleaseRT
void Sigtrap::VrTunnellingPro::TunnellingImageBase::ReleaseRT(ByRef<::UnityEngine::RenderTexture*> rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::ReleaseRT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseRT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(rt));
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.AddObjectToMask
void Sigtrap::VrTunnellingPro::TunnellingImageBase::AddObjectToMask(::UnityEngine::Renderer* r, bool includeChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::AddObjectToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObjectToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(includeChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, includeChildren);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.RemoveObjectFromMask
void Sigtrap::VrTunnellingPro::TunnellingImageBase::RemoveObjectFromMask(::UnityEngine::Renderer* r, bool includeChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::RemoveObjectFromMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObjectFromMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(includeChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, includeChildren);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.UpdateCage
void Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateCage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateCage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.ApplyPreset
void Sigtrap::VrTunnellingPro::TunnellingImageBase::ApplyPreset(::Sigtrap::VrTunnellingPro::TunnellingPreset* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::ApplyPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.LateUpdate
void Sigtrap::VrTunnellingPro::TunnellingImageBase::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.OnPreRender
void Sigtrap::VrTunnellingPro::TunnellingImageBase::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.Draw
void Sigtrap::VrTunnellingPro::TunnellingImageBase::Draw(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::Draw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.UpdateKeywords
void Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.UpdateBlurKernel
void Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateBlurKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateBlurKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBlurKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.GetMsaa
int Sigtrap::VrTunnellingPro::TunnellingImageBase::GetMsaa(::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA m, int srcMsaa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::GetMsaa");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMsaa", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(srcMsaa)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, m, srcMsaa);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.SetTexArrayIfNeeded
void Sigtrap::VrTunnellingPro::TunnellingImageBase::SetTexArrayIfNeeded(::UnityEngine::RenderTexture* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::SetTexArrayIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexArrayIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.UpdateRenderTextures
void Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateRenderTextures(int srcX, int srcY, int srcMsaa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateRenderTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRenderTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srcX), ::il2cpp_utils::ExtractType(srcY), ::il2cpp_utils::ExtractType(srcMsaa)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, srcX, srcY, srcMsaa);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.ResetMaskCommandBuffer
void Sigtrap::VrTunnellingPro::TunnellingImageBase::ResetMaskCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::ResetMaskCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMaskCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.ToggleMaskCommandBuffer
void Sigtrap::VrTunnellingPro::TunnellingImageBase::ToggleMaskCommandBuffer(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::ToggleMaskCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleMaskCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.ToggleIrisCommandBuffer
void Sigtrap::VrTunnellingPro::TunnellingImageBase::ToggleIrisCommandBuffer(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::ToggleIrisCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleIrisCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase..cctor
void Sigtrap::VrTunnellingPro::TunnellingImageBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "TunnellingImageBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.Awake
void Sigtrap::VrTunnellingPro::TunnellingImageBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.OnEnable
void Sigtrap::VrTunnellingPro::TunnellingImageBase::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.ResetCounterMotion
void Sigtrap::VrTunnellingPro::TunnellingImageBase::ResetCounterMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::ResetCounterMotion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCounterMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.CorrectEyeMatrices
void Sigtrap::VrTunnellingPro::TunnellingImageBase::CorrectEyeMatrices(::ArrayW<::UnityEngine::Matrix4x4> eyePrj, ::ArrayW<::UnityEngine::Matrix4x4> eyeToWorld) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CorrectEyeMatrices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CorrectEyeMatrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyePrj), ::il2cpp_utils::ExtractType(eyeToWorld)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eyePrj, eyeToWorld);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingImageBase.UpdateCounterMotion
void Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateCounterMotion(::UnityEngine::Vector3 deltaPos, ::UnityEngine::Quaternion deltaRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::UpdateCounterMotion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCounterMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPos), ::il2cpp_utils::ExtractType(deltaRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaPos, deltaRot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel
#include "Sigtrap/VrTunnellingPro/TunnellingImageBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel FIVE
::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_get_FIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_get_FIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel>("Sigtrap.VrTunnellingPro", "TunnellingImageBase/BlurKernel", "FIVE"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel FIVE
void Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_set_FIVE(::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_set_FIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase/BlurKernel", "FIVE", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel NINE
::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_get_NINE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_get_NINE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel>("Sigtrap.VrTunnellingPro", "TunnellingImageBase/BlurKernel", "NINE"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel NINE
void Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_set_NINE(::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_set_NINE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase/BlurKernel", "NINE", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel THIRTEEN
::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_get_THIRTEEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_get_THIRTEEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel>("Sigtrap.VrTunnellingPro", "TunnellingImageBase/BlurKernel", "THIRTEEN"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel THIRTEEN
void Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_set_THIRTEEN(::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::_set_THIRTEEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase/BlurKernel", "THIRTEEN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode
#include "Sigtrap/VrTunnellingPro/TunnellingImageBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode OFF
::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_get_OFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_get_OFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode>("Sigtrap.VrTunnellingPro", "TunnellingImageBase/CounterVelocityMode", "OFF"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode OFF
void Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_set_OFF(::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_set_OFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase/CounterVelocityMode", "OFF", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode SHADER
::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_get_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_get_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode>("Sigtrap.VrTunnellingPro", "TunnellingImageBase/CounterVelocityMode", "SHADER"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode SHADER
void Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_set_SHADER(::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_set_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase/CounterVelocityMode", "SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode REAL
::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_get_REAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_get_REAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode>("Sigtrap.VrTunnellingPro", "TunnellingImageBase/CounterVelocityMode", "REAL"));
}
// Autogenerated static field setter
// Set static field: static public Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode REAL
void Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_set_REAL(::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::_set_REAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingImageBase/CounterVelocityMode", "REAL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingMaskObject
#include "Sigtrap/VrTunnellingPro/TunnellingMaskObject.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoAddChildren
bool& Sigtrap::VrTunnellingPro::TunnellingMaskObject::dyn_autoAddChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObject::dyn_autoAddChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoAddChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _r
::UnityEngine::Renderer*& Sigtrap::VrTunnellingPro::TunnellingMaskObject::dyn__r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObject::dyn__r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_r"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool& Sigtrap::VrTunnellingPro::TunnellingMaskObject::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObject::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObject.Awake
void Sigtrap::VrTunnellingPro::TunnellingMaskObject::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObject::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObject.Start
void Sigtrap::VrTunnellingPro::TunnellingMaskObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObject::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObject.OnEnable
void Sigtrap::VrTunnellingPro::TunnellingMaskObject::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObject::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObject.OnDisable
void Sigtrap::VrTunnellingPro::TunnellingMaskObject::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObject::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingMaskObjectMobile
#include "Sigtrap/VrTunnellingPro/TunnellingMaskObjectMobile.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoAddChildren
bool& Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::dyn_autoAddChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::dyn_autoAddChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoAddChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _r
::UnityEngine::Renderer*& Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::dyn__r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::dyn__r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_r"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool& Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObjectMobile.Awake
void Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObjectMobile.Start
void Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObjectMobile.OnEnable
void Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMaskObjectMobile.OnDisable
void Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMaskObjectMobile::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingMobile
#include "Sigtrap/VrTunnellingPro/TunnellingMobile.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingPresetMobile
#include "Sigtrap/VrTunnellingPro/TunnellingPresetMobile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_STENCILREF
::StringW Sigtrap::VrTunnellingPro::TunnellingMobile::_get_GLOBAL_PROP_STENCILREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_GLOBAL_PROP_STENCILREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "GLOBAL_PROP_STENCILREF"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_STENCILREF
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_GLOBAL_PROP_STENCILREF(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_GLOBAL_PROP_STENCILREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "GLOBAL_PROP_STENCILREF", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_STENCILMASK
::StringW Sigtrap::VrTunnellingPro::TunnellingMobile::_get_GLOBAL_PROP_STENCILMASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_GLOBAL_PROP_STENCILMASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "GLOBAL_PROP_STENCILMASK"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_STENCILMASK
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_GLOBAL_PROP_STENCILMASK(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_GLOBAL_PROP_STENCILMASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "GLOBAL_PROP_STENCILMASK", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GLOBAL_PROP_STENCILBIAS
::StringW Sigtrap::VrTunnellingPro::TunnellingMobile::_get_GLOBAL_PROP_STENCILBIAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_GLOBAL_PROP_STENCILBIAS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "GLOBAL_PROP_STENCILBIAS"));
}
// Autogenerated static field setter
// Set static field: static public System.String GLOBAL_PROP_STENCILBIAS
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_GLOBAL_PROP_STENCILBIAS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_GLOBAL_PROP_STENCILBIAS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "GLOBAL_PROP_STENCILBIAS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PROP_WRITEZ
::StringW Sigtrap::VrTunnellingPro::TunnellingMobile::_get_PROP_WRITEZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_PROP_WRITEZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "PROP_WRITEZ"));
}
// Autogenerated static field setter
// Set static field: static private System.String PROP_WRITEZ
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_PROP_WRITEZ(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_PROP_WRITEZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "PROP_WRITEZ", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_SHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingMobile::_get_PATH_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_PATH_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "PATH_SHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_SHADER
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_PATH_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_PATH_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "PATH_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_STENCILSHADER
::StringW Sigtrap::VrTunnellingPro::TunnellingMobile::_get_PATH_STENCILSHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_PATH_STENCILSHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "PATH_STENCILSHADER"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_STENCILSHADER
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_PATH_STENCILSHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_PATH_STENCILSHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "PATH_STENCILSHADER", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Rendering.CameraEvent CEVENT_FX
::UnityEngine::Rendering::CameraEvent Sigtrap::VrTunnellingPro::TunnellingMobile::_get_CEVENT_FX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_CEVENT_FX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "CEVENT_FX"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Rendering.CameraEvent CEVENT_FX
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_CEVENT_FX(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_CEVENT_FX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "CEVENT_FX", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Rendering.CameraEvent CEVENT_Z
::UnityEngine::Rendering::CameraEvent Sigtrap::VrTunnellingPro::TunnellingMobile::_get_CEVENT_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_CEVENT_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "CEVENT_Z"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Rendering.CameraEvent CEVENT_Z
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_CEVENT_Z(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_CEVENT_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "CEVENT_Z", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RQUEUE_FIRST
int Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_FIRST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_FIRST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_FIRST"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RQUEUE_FIRST
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_FIRST(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_FIRST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_FIRST", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RQUEUE_MASK
int Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_MASK"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RQUEUE_MASK
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_MASK", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RQUEUE_OPAQUE
int Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_OPAQUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_OPAQUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_OPAQUE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RQUEUE_OPAQUE
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_OPAQUE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_OPAQUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_OPAQUE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RQUEUE_LAST
int Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_LAST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_RQUEUE_LAST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_LAST"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RQUEUE_LAST
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_LAST(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_RQUEUE_LAST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "RQUEUE_LAST", value));
}
// Autogenerated static field getter
// Get static field: static private Sigtrap.VrTunnellingPro.TunnellingMobile <instance>k__BackingField
::Sigtrap::VrTunnellingPro::TunnellingMobile* Sigtrap::VrTunnellingPro::TunnellingMobile::_get_$instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get_$instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Sigtrap::VrTunnellingPro::TunnellingMobile*>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Sigtrap.VrTunnellingPro.TunnellingMobile <instance>k__BackingField
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set_$instance$k__BackingField(::Sigtrap::VrTunnellingPro::TunnellingMobile* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set_$instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "<instance>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _stencilMat
::UnityEngine::Material* Sigtrap::VrTunnellingPro::TunnellingMobile::_get__stencilMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_get__stencilMat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("Sigtrap.VrTunnellingPro", "TunnellingMobile", "_stencilMat"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _stencilMat
void Sigtrap::VrTunnellingPro::TunnellingMobile::_set__stencilMat(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::_set__stencilMat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Sigtrap.VrTunnellingPro", "TunnellingMobile", "_stencilMat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawSkybox
bool& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_drawSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_drawSkybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawSkybox"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useMask
bool& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_useMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_useMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawBeforeTransparent
bool& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_drawBeforeTransparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_drawBeforeTransparent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawBeforeTransparent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stencilReference
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_stencilReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_stencilReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilReference"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stencilMask
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_stencilMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_stencilMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stencilBias
float& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_stencilBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn_stencilBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propColor
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__propColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__propColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propColor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propSkybox
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__propSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__propSkybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propSkybox"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _propWriteZ
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__propWriteZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__propWriteZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propWriteZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _globPropStencilRef
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__globPropStencilRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__globPropStencilRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropStencilRef"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _globPropStencilMask
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__globPropStencilMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__globPropStencilMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropStencilMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _globPropStencilBias
int& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__globPropStencilBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__globPropStencilBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globPropStencilBias"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _irisMatOuter
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__irisMatOuter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__irisMatOuter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_irisMatOuter"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _irisMatInner
::UnityEngine::Material*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__irisMatInner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__irisMatInner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_irisMatInner"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _irisMesh
::UnityEngine::Mesh*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__irisMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__irisMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_irisMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Renderer,UnityEngine.MeshFilter> _maskObjects
::System::Collections::Generic::Dictionary_2<::UnityEngine::Renderer*, ::UnityEngine::MeshFilter*>*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__maskObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__maskObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maskObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Renderer*, ::UnityEngine::MeshFilter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<UnityEngine.Mesh> _skinnedMeshPool
::System::Collections::Generic::Stack_1<::UnityEngine::Mesh*>*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__skinnedMeshPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__skinnedMeshPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinnedMeshPool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<UnityEngine.Mesh> _skinnedMeshesRendering
::System::Collections::Generic::Stack_1<::UnityEngine::Mesh*>*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__skinnedMeshesRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__skinnedMeshesRendering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinnedMeshesRendering"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _toDestroy
::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__toDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__toDestroy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toDestroy"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.MeshRenderer> _tempMeshChildren
::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__tempMeshChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__tempMeshChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tempMeshChildren"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.SkinnedMeshRenderer> _tempSkinnedMeshChildren
::System::Collections::Generic::List_1<::UnityEngine::SkinnedMeshRenderer*>*& Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__tempSkinnedMeshChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::dyn__tempSkinnedMeshChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tempSkinnedMeshChildren"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::SkinnedMeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.get_instance
::Sigtrap::VrTunnellingPro::TunnellingMobile* Sigtrap::VrTunnellingPro::TunnellingMobile::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "TunnellingMobile", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingMobile*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.set_instance
void Sigtrap::VrTunnellingPro::TunnellingMobile::set_instance(::Sigtrap::VrTunnellingPro::TunnellingMobile* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::set_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "TunnellingMobile", "set_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.get_stencilMat
::UnityEngine::Material* Sigtrap::VrTunnellingPro::TunnellingMobile::get_stencilMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::get_stencilMat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Sigtrap.VrTunnellingPro", "TunnellingMobile", "get_stencilMat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.get_irisZRejectionEnabled
bool Sigtrap::VrTunnellingPro::TunnellingMobile::get_irisZRejectionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::get_irisZRejectionEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_irisZRejectionEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.ApplyPreset
void Sigtrap::VrTunnellingPro::TunnellingMobile::ApplyPreset(::Sigtrap::VrTunnellingPro::TunnellingPresetMobile* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::ApplyPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.AddObjectToMask
void Sigtrap::VrTunnellingPro::TunnellingMobile::AddObjectToMask(::UnityEngine::Renderer* r, bool includeChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::AddObjectToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObjectToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(includeChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, includeChildren);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.RemoveObjectFromMask
void Sigtrap::VrTunnellingPro::TunnellingMobile::RemoveObjectFromMask(::UnityEngine::Renderer* r, bool includeChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::RemoveObjectFromMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObjectFromMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(includeChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, includeChildren);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.OnDestroy
void Sigtrap::VrTunnellingPro::TunnellingMobile::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.LateUpdate
void Sigtrap::VrTunnellingPro::TunnellingMobile::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.DrawIris
void Sigtrap::VrTunnellingPro::TunnellingMobile::DrawIris(::UnityEngine::Material* m, int submesh, int opaqueQueue, int camLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::DrawIris");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawIris", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(opaqueQueue), ::il2cpp_utils::ExtractType(camLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m, submesh, opaqueQueue, camLayer);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.OnPreRender
void Sigtrap::VrTunnellingPro::TunnellingMobile::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingMobile.Awake
void Sigtrap::VrTunnellingPro::TunnellingMobile::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingMobile::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingOpaque
#include "Sigtrap/VrTunnellingPro/TunnellingOpaque.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingOpaque.OnRenderImage
void Sigtrap::VrTunnellingPro::TunnellingOpaque::OnRenderImage(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingOpaque::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingOpaque.get__maskCmdEvt
::UnityEngine::Rendering::CameraEvent Sigtrap::VrTunnellingPro::TunnellingOpaque::get__maskCmdEvt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingOpaque::get__maskCmdEvt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__maskCmdEvt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingPreset
#include "Sigtrap/VrTunnellingPro/TunnellingPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _effectOverlay
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__effectOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__effectOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectOverlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideEffectOverlay
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideEffectOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideEffectOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEffectOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.BackgroundMode _backgroundMode
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__backgroundMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__backgroundMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideBackgroundMode
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBackgroundMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBackgroundMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideBackgroundMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cageDownsample
int& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCageDownsample
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCageDownsample"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MSAA _cageAntiAliasing
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageAntiAliasing"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCageAntiAliasing
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCageAntiAliasing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cageUpdateEveryFrame
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageUpdateEveryFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageUpdateEveryFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageUpdateEveryFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCageUpdateEveryFrame
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageUpdateEveryFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageUpdateEveryFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCageUpdateEveryFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cageFogDensity
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageFogDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageFogDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageFogDensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCageFogDensity
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageFogDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageFogDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCageFogDensity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cageFogPower
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageFogPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageFogPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageFogPower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCageFogPower
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageFogPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageFogPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCageFogPower"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cageFogBlend
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageFogBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__cageFogBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cageFogBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCageFogBlend
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageFogBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCageFogBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCageFogBlend"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.MaskMode _maskMode
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__maskMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__maskMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maskMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideMaskMode
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideMaskMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideMaskMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideMaskMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _blurDownsample
int& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideBlurDownsample
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideBlurDownsample"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _blurDistance
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideBlurDistance
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideBlurDistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _blurPasses
int& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurPasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurPasses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurPasses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideBlurPasses
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurPasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurPasses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideBlurPasses"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.BlurKernel _blurSamples
::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__blurSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurSamples"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideBlurSamples
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideBlurSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideBlurSamples"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingImageBase/Sigtrap.VrTunnellingPro.CounterVelocityMode _counterVelocityMode
::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counterVelocityMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCounterVelocityMode
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCounterVelocityMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _counterVelocityResetDistance
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityResetDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityResetDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counterVelocityResetDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCounterVelocityResetDistance
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityResetDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityResetDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCounterVelocityResetDistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _counterVelocityResetTime
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityResetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityResetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counterVelocityResetTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCounterVelocityResetTime
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityResetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityResetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCounterVelocityResetTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _counterVelocityStrength
float& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counterVelocityStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCounterVelocityStrength
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCounterVelocityStrength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _counterVelocityPerAxis
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__counterVelocityPerAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counterVelocityPerAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCounterVelocityPerAxis
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideCounterVelocityPerAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCounterVelocityPerAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _irisZRejection
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__irisZRejection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__irisZRejection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_irisZRejection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideIrisZRejection
bool& Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideIrisZRejection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::dyn__overrideIrisZRejection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideIrisZRejection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_effectOverlay
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_effectOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_effectOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideEffectOverlay
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideEffectOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideEffectOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEffectOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_backgroundMode
::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode Sigtrap::VrTunnellingPro::TunnellingPreset::get_backgroundMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_backgroundMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingBase::BackgroundMode, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideBackgroundMode
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBackgroundMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBackgroundMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideBackgroundMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_cageDownsample
int Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageDownsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cageDownsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCageDownsample
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageDownsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCageDownsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_cageAntiAliasing
::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageAntiAliasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cageAntiAliasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingBase::MSAA, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCageAntiAliasing
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageAntiAliasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCageAntiAliasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_cageUpdateEveryFrame
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageUpdateEveryFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageUpdateEveryFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cageUpdateEveryFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCageUpdateEveryFrame
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageUpdateEveryFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageUpdateEveryFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCageUpdateEveryFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_cageFogDensity
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageFogDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageFogDensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cageFogDensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCageFogDensity
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageFogDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageFogDensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCageFogDensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_cageFogPower
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageFogPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageFogPower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cageFogPower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCageFogPower
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageFogPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageFogPower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCageFogPower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_cageFogBlend
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageFogBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_cageFogBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cageFogBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCageFogBlend
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageFogBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCageFogBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCageFogBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_maskMode
::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode Sigtrap::VrTunnellingPro::TunnellingPreset::get_maskMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_maskMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingBase::MaskMode, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideMaskMode
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideMaskMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideMaskMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideMaskMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_blurDownsample
int Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurDownsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blurDownsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideBlurDownsample
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurDownsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideBlurDownsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_blurDistance
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blurDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideBlurDistance
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideBlurDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_blurPasses
int Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurPasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurPasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blurPasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideBlurPasses
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurPasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurPasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideBlurPasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_blurSamples
::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_blurSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blurSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingImageBase::BlurKernel, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideBlurSamples
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideBlurSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideBlurSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_counterVelocityMode
::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_counterVelocityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingImageBase::CounterVelocityMode, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCounterVelocityMode
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCounterVelocityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_counterVelocityResetDistance
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityResetDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityResetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_counterVelocityResetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCounterVelocityResetDistance
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityResetDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityResetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCounterVelocityResetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_counterVelocityResetTime
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityResetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityResetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_counterVelocityResetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCounterVelocityResetTime
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityResetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityResetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCounterVelocityResetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_counterVelocityStrength
float Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_counterVelocityStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCounterVelocityStrength
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCounterVelocityStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_counterVelocityPerAxis
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_counterVelocityPerAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_counterVelocityPerAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideCounterVelocityPerAxis
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideCounterVelocityPerAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCounterVelocityPerAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_irisZRejection
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_irisZRejection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_irisZRejection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_irisZRejection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPreset.get_overrideIrisZRejection
bool Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideIrisZRejection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPreset::get_overrideIrisZRejection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideIrisZRejection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingPresetBase
#include "Sigtrap/VrTunnellingPro/TunnellingPresetBase.hpp"
// Including type: Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings
#include "Sigtrap/VrTunnellingPro/TunnellingPresetBase_MotionSettings.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideAll
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _effectCoverage
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__effectCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__effectCoverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectCoverage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideEffectCoverage
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideEffectCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideEffectCoverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEffectCoverage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _effectColor
::UnityEngine::Color& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__effectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__effectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideEffectColor
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideEffectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideEffectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEffectColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _effectFeather
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__effectFeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__effectFeather");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectFeather"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideEffectFeather
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideEffectFeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideEffectFeather");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEffectFeather"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _applyColorToBackground
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__applyColorToBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__applyColorToBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyColorToBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideApplyColorToBackground
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideApplyColorToBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideApplyColorToBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideApplyColorToBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _skybox
::UnityEngine::Cubemap*& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__skybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__skybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skybox"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideSkybox
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideSkybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideSkybox"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings _angularVelocity
::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings*& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__angularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocity"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideAngularVelocity
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideAngularVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings _acceleration
::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings*& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_acceleration"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideAcceleration
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideAcceleration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings _velocity
::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings*& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocity"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideVelocity
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useCounterMotion
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__useCounterMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__useCounterMotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useCounterMotion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideUseCounterMotion
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideUseCounterMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideUseCounterMotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideUseCounterMotion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _counterRotationStrength
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__counterRotationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__counterRotationStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counterRotationStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCounterRotationStrength
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideCounterRotationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideCounterRotationStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCounterRotationStrength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _counterRotationPerAxis
::UnityEngine::Vector3& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__counterRotationPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__counterRotationPerAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counterRotationPerAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideCounterRotationPerAxis
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideCounterRotationPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideCounterRotationPerAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCounterRotationPerAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useArtificialTilt
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__useArtificialTilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__useArtificialTilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useArtificialTilt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideUseArtificialTilt
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideUseArtificialTilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideUseArtificialTilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideUseArtificialTilt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _framerateDivision
int& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__framerateDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__framerateDivision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_framerateDivision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideFramerateDivision
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideFramerateDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideFramerateDivision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideFramerateDivision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _divideTranslation
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__divideTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__divideTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_divideTranslation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideDivideTranslation
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideDivideTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideDivideTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideDivideTranslation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _divideRotation
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__divideRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__divideRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_divideRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideDivideRotation
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideDivideRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideDivideRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideDivideRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Sigtrap.VrTunnellingPro.TunnellingBase/Sigtrap.VrTunnellingPro.ForceVignetteMode _forceVignetteMode
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__forceVignetteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__forceVignetteMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceVignetteMode"))->offset;
  return *reinterpret_cast<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideForceVignetteMode
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideForceVignetteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideForceVignetteMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideForceVignetteMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _forceVignetteValue
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__forceVignetteValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__forceVignetteValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceVignetteValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideForceVignetteValue
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideForceVignetteValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::dyn__overrideForceVignetteValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideForceVignetteValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideAll
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_effectCoverage
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_effectCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_effectCoverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectCoverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideEffectCoverage
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideEffectCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideEffectCoverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEffectCoverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_effectColor
::UnityEngine::Color Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_effectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_effectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideEffectColor
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideEffectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideEffectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEffectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_effectFeather
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_effectFeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_effectFeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectFeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideEffectFeather
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideEffectFeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideEffectFeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEffectFeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_applyColorToBackground
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_applyColorToBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_applyColorToBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_applyColorToBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideApplyColorToBackground
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideApplyColorToBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideApplyColorToBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideApplyColorToBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_skybox
::UnityEngine::Cubemap* Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_skybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_skybox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skybox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cubemap*, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideSkybox
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideSkybox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideSkybox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_angularVelocity
::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings* Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideAngularVelocity
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_acceleration
::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings* Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideAcceleration
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_velocity
::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings* Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideVelocity
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_useCounterMotion
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_useCounterMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_useCounterMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useCounterMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideUseCounterMotion
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideUseCounterMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideUseCounterMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideUseCounterMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_counterRotationStrength
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_counterRotationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_counterRotationStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_counterRotationStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideCounterRotationStrength
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideCounterRotationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideCounterRotationStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCounterRotationStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_counterRotationPerAxis
::UnityEngine::Vector3 Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_counterRotationPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_counterRotationPerAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_counterRotationPerAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideCounterRotationPerAxis
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideCounterRotationPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideCounterRotationPerAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideCounterRotationPerAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_useArtificialTilt
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_useArtificialTilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_useArtificialTilt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useArtificialTilt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideUseArtificialTilt
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideUseArtificialTilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideUseArtificialTilt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideUseArtificialTilt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_framerateDivision
int Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_framerateDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_framerateDivision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_framerateDivision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideFramerateDivision
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideFramerateDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideFramerateDivision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideFramerateDivision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_divideTranslation
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_divideTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_divideTranslation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_divideTranslation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideDivideTranslation
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideDivideTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideDivideTranslation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideDivideTranslation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_divideRotation
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_divideRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_divideRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_divideRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideDividerotation
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideDividerotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideDividerotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideDividerotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_forceVignetteMode
::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_forceVignetteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_forceVignetteMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceVignetteMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Sigtrap::VrTunnellingPro::TunnellingBase::ForceVignetteMode, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideForceVignetteMode
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideForceVignetteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideForceVignetteMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideForceVignetteMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_forceVignetteValue
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_forceVignetteValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_forceVignetteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceVignetteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase.get_overrideForceVignetteValue
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideForceVignetteValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::get_overrideForceVignetteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideForceVignetteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings
#include "Sigtrap/VrTunnellingPro/TunnellingPresetBase_MotionSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _use
bool& Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__use() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__use");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_use"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _strength
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _min
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _max
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smoothing
float& Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::dyn__smoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings.get_use
bool Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_use() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_use");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_use", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings.get_strength
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_strength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_strength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings.get_min
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings.get_max
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetBase/Sigtrap.VrTunnellingPro.MotionSettings.get_smoothing
float Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetBase::MotionSettings::get_smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Sigtrap.VrTunnellingPro.TunnellingPresetMobile
#include "Sigtrap/VrTunnellingPro/TunnellingPresetMobile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _drawSkybox
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__drawSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__drawSkybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_drawSkybox"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideDrawSkybox
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideDrawSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideDrawSkybox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideDrawSkybox"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _drawBeforeTransparent
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__drawBeforeTransparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__drawBeforeTransparent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_drawBeforeTransparent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideDrawBeforeTransparent
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideDrawBeforeTransparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideDrawBeforeTransparent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideDrawBeforeTransparent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useMask
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__useMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__useMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideUseMask
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideUseMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideUseMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideUseMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stencilReference
int& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__stencilReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__stencilReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stencilReference"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideStencilReference
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideStencilReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideStencilReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideStencilReference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stencilMask
int& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__stencilMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__stencilMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stencilMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideStencilMask
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideStencilMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideStencilMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideStencilMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stencilBias
int& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__stencilBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__stencilBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stencilBias"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideStencilBias
bool& Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideStencilBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::dyn__overrideStencilBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideStencilBias"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_drawSkybox
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_drawSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_drawSkybox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawSkybox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_overrideDrawSkybox
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideDrawSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideDrawSkybox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideDrawSkybox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_drawBeforeTransparent
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_drawBeforeTransparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_drawBeforeTransparent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawBeforeTransparent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_overrideDrawBeforeTransparent
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideDrawBeforeTransparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideDrawBeforeTransparent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideDrawBeforeTransparent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_useMask
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_useMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_useMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_overrideUseMask
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideUseMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideUseMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideUseMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_stencilReference
int Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_stencilReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_stencilReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stencilReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_overrideStencilReference
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideStencilReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideStencilReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideStencilReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_stencilMask
int Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_stencilMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_stencilMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stencilMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_overrideStencilMask
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideStencilMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideStencilMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideStencilMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_stencilBias
int Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_stencilBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_stencilBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stencilBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Sigtrap.VrTunnellingPro.TunnellingPresetMobile.get_overrideStencilBias
bool Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideStencilBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Sigtrap::VrTunnellingPro::TunnellingPresetMobile::get_overrideStencilBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideStencilBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.FaceType
#include "Oculus/Spatializer/Propagation/FaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
void Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_QUADS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_QUADS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "QUADS"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
void Oculus::Spatializer::Propagation::FaceType::_set_QUADS(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_QUADS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "QUADS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Oculus::Spatializer::Propagation::FaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
void Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportOptions
#include "Oculus/Platform/AbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
::System::IntPtr& Oculus::Platform::AbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetPreventPeopleChooser
void Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetReportType
void Oculus::Platform::AbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AbuseReportOptions.Finalize
void Oculus::Platform::AbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72BBEC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Unknown
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Unknown
void Oculus::Platform::AbuseReportType::_set_Unknown(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72BC24
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Object
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Object
void Oculus::Platform::AbuseReportType::_set_Object(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Object", value));
}
// [DescriptionAttribute] Offset: 0x72BC5C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType User
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "User"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType User
void Oculus::Platform::AbuseReportType::_set_User(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "User", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::AbuseReportType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72BC94
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Unknown
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Unknown
void Oculus::Platform::AchievementType::_set_Unknown(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72BCCC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Simple
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Simple
void Oculus::Platform::AchievementType::_set_Simple(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Simple", value));
}
// [DescriptionAttribute] Offset: 0x72BD04
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Bitfield
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Bitfield");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Bitfield"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Bitfield
void Oculus::Platform::AchievementType::_set_Bitfield(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Bitfield");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Bitfield", value));
}
// [DescriptionAttribute] Offset: 0x72BD3C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Count
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Count
void Oculus::Platform::AchievementType::_set_Count(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::AchievementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AndroidPlatform
#include "Oculus/Platform/AndroidPlatform.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AndroidPlatform.Initialize
bool Oculus::Platform::AndroidPlatform::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.AndroidPlatform.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::AndroidPlatform::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
::System::IntPtr& Oculus::Platform::ApplicationOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetDeeplinkMessage
void Oculus::Platform::ApplicationOptions::SetDeeplinkMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ApplicationOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.ApplicationOptions.Finalize
void Oculus::Platform::ApplicationOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI
#include "Oculus/Platform/CAPI.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrNetSyncVec3
#include "Oculus/Platform/CAPI_ovrNetSyncVec3.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCriterion
#include "Oculus/Platform/CAPI_ovrMatchmakingCriterion.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCustomQueryData
#include "Oculus/Platform/CAPI_ovrMatchmakingCustomQueryData.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.OculusInitParams
#include "Oculus/Platform/CAPI_OculusInitParams.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.PermissionType
#include "Oculus/Platform/PermissionType.hpp"
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
// Including type: Oculus.Platform.CloudStorageDataStatus
#include "Oculus/Platform/CloudStorageDataStatus.hpp"
// Including type: Oculus.Platform.CloudStorageUpdateStatus
#include "Oculus/Platform/CloudStorageUpdateStatus.hpp"
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
// Including type: Oculus.Platform.PlatformInitializeResult
#include "Oculus/Platform/PlatformInitializeResult.hpp"
// Including type: Oculus.Platform.RoomJoinability
#include "Oculus/Platform/RoomJoinability.hpp"
// Including type: Oculus.Platform.RoomType
#include "Oculus/Platform/RoomType.hpp"
// Including type: Oculus.Platform.SdkAccountType
#include "Oculus/Platform/SdkAccountType.hpp"
// Including type: Oculus.Platform.ShareMediaStatus
#include "Oculus/Platform/ShareMediaStatus.hpp"
// Including type: Oculus.Platform.PermissionGrantStatus
#include "Oculus/Platform/PermissionGrantStatus.hpp"
// Including type: Oculus.Platform.UserPresenceStatus
#include "Oculus/Platform/UserPresenceStatus.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DLL_NAME
::StringW Oculus::Platform::CAPI::_get_DLL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_DLL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform", "CAPI", "DLL_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String DLL_NAME
void Oculus::Platform::CAPI::_set_DLL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_DLL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "DLL_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
::System::Text::UTF8Encoding* Oculus::Platform::CAPI::_get_nativeStringEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_nativeStringEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::UTF8Encoding*>("Oculus.Platform", "CAPI", "nativeStringEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
void Oculus::Platform::CAPI::_set_nativeStringEncoding(::System::Text::UTF8Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_nativeStringEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "nativeStringEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VoipFilterBufferSize
int Oculus::Platform::CAPI::_get_VoipFilterBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_VoipFilterBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform", "CAPI", "VoipFilterBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VoipFilterBufferSize
void Oculus::Platform::CAPI::_set_VoipFilterBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_VoipFilterBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "VoipFilterBufferSize", value));
}
// Autogenerated method: Oculus.Platform.CAPI..cctor
void Oculus::Platform::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ArrayOfStructsToIntPtr
::System::IntPtr Oculus::Platform::CAPI::ArrayOfStructsToIntPtr(::System::Array* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ArrayOfStructsToIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ar);
}
// Autogenerated method: Oculus.Platform.CAPI.DictionaryToOVRKeyValuePairs
::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dict);
}
// Autogenerated method: Oculus.Platform.CAPI.IntPtrToByteArray
::ArrayW<uint8_t> Oculus::Platform::CAPI::IntPtrToByteArray(::System::IntPtr data, uint64_t size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::IntPtrToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "IntPtrToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, size);
}
// Autogenerated method: Oculus.Platform.CAPI.DataStoreFromNative
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::CAPI::DataStoreFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DataStoreFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DataStoreFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringFromNative
::StringW Oculus::Platform::CAPI::StringFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.GetNativeStringLengthNotIncludingNullTerminator
int Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeFromNative
::System::DateTime Oculus::Platform::CAPI::DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds_since_the_one_true_epoch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seconds_since_the_one_true_epoch);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeToNative
uint64_t Oculus::Platform::CAPI::DateTimeToNative(::System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated method: Oculus.Platform.CAPI.BlobFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::BlobFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::BlobFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "BlobFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.FiledataFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::FiledataFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FiledataFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "FiledataFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringToNative
::System::IntPtr Oculus::Platform::CAPI::StringToNative(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapper
bool Oculus::Platform::CAPI::ovr_UnityInitWrapper(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitGlobals
void Oculus::Platform::CAPI::ovr_UnityInitGlobals(::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitGlobals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitGlobals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loggingCB)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperStandalone
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone(::StringW accessToken, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Platform_InitializeStandaloneOculus
uint64_t Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus(ByRef<::Oculus::Platform::CAPI::OculusInitParams> init) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(init)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(init));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitializeWithAccessToken
uint64_t Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindows
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindowsAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SetDeveloperAccessToken
bool Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken(::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale
::StringW Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PopMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_FreeMessage
void Oculus::Platform::CAPI::ovr_FreeMessage(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_FreeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_FreeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateEncoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyEncoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder(::System::IntPtr encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateDecoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyDecoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder(::System::IntPtr decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, decoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, uint64_t compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_Microphone_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Destroy
void Oculus::Platform::CAPI::ovr_Microphone_Destroy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipPassthrough
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough(bool passthrough) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passthrough)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, passthrough);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted(::Oculus::Platform::VoipMuteState muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityResetTestPlatform
void Oculus::Platform::CAPI::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetWithMessageType
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType(::StringW url, int messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, messageType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CrashApplication
void Oculus::Platform::CAPI::ovr_CrashApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CrashApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CrashApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallback
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(::Oculus::Platform::CAPI::FilterCallback* cb, ::System::UIntPtr bufferSizeElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(bufferSizeElements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb, bufferSizeElements);
}
// Autogenerated method: Oculus.Platform.CAPI.LogNewEvent
void Oculus::Platform::CAPI::LogNewEvent(::StringW eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::LogNewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "LogNewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Log_NewEvent
void Oculus::Platform::CAPI::ovr_Log_NewEvent(::System::IntPtr eventName, ::ArrayW<::System::IntPtr> values, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Log_NewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Log_NewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetLaunchDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer(::StringW url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native(::System::IntPtr url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Write
bool Oculus::Platform::CAPI::ovr_HTTP_Write(uint64_t transferId, ::ArrayW<uint8_t> bytes, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId, bytes, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_WriteEOM
void Oculus::Platform::CAPI::ovr_HTTP_WriteEOM(uint64_t transferId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_WriteEOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript
::StringW Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetListenerPosition
bool Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetPcmBufferMaxSamples
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAmplitude
bool Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, ByRef<float> amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(amplitude));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetListenerPosition
void Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition(int64_t connection_id, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Accept
void Oculus::Platform::CAPI::ovr_Net_Accept(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_AcceptForCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Close
void Oculus::Platform::CAPI::ovr_Net_Close(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_CloseForCurrentRoom
void Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Connect
void Oculus::Platform::CAPI::ovr_Net_Connect(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_IsConnected
bool Oculus::Platform::CAPI::ovr_Net_IsConnected(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Ping
uint64_t Oculus::Platform::CAPI::ovr_Net_Ping(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_ReadPacket
::System::IntPtr Oculus::Platform::CAPI::ovr_Net_ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacket
bool Oculus::Platform::CAPI::ovr_Net_SendPacket(uint64_t userID, ::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacketToCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom(::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetSharedMemHandle
int Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipPassthrough
bool Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Accept
void Oculus::Platform::CAPI::ovr_Voip_Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetIsConnectionUsingDtx
::Oculus::Platform::VoipDtxState Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetLocalBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCM(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMSize(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestamp
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestampFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetRemoteBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestamp
uint Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestampDifference
int64_t Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetNewConnectionOptions
void Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions(::System::IntPtr voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetOutputSampleRate
void Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate(::Oculus::Platform::VoipSampleRate rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Start
void Oculus::Platform::CAPI::ovr_Voip_Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Stop
void Oculus::Platform::CAPI::ovr_Voip_Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount(::StringW name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native(::System::IntPtr name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields(::StringW name, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native(::System::IntPtr name, ::System::IntPtr fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllDefinitions
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllProgress
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetDefinitionsByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetProgressByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native(::System::IntPtr name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_ExecuteCoordinatedLaunch
uint64_t Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch(uint64_t appID, uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_ExecuteCoordinatedLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetInstalledApplications
uint64_t Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetVersion
uint64_t Oculus::Platform::CAPI::ovr_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_LaunchOtherApp
uint64_t Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp(uint64_t appID, ::System::IntPtr deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetRegisteredPIDs
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey(::StringW sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey_Native
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native(::System::IntPtr sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Delete
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Download
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancel
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_GetList
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Status
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData(::StringW avatarMetaData, ::StringW imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData_Native
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native(::System::IntPtr avatarMetaData, ::System::IntPtr imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_FinalizeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t finalized_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_FinalizeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(finalized_application_ID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, finalized_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_GetSuggestedApplications
uint64_t Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_GetSuggestedApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_ProposeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_ProposeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t proposed_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_ProposeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_ProposeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(proposed_application_ID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, proposed_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create(::StringW leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create_Native(::System::IntPtr leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_DeclineInvite
uint64_t Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Delete
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Get
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetList
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetList(::System::IntPtr challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Join
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Leave
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_UpdateInfo
uint64_t Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo(uint64_t challengeID, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata(::StringW bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native(::System::IntPtr bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle(::StringW handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save(::StringW bucket, ::StringW key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::StringW extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native(::System::IntPtr bucket, ::System::IntPtr key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::System::IntPtr extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2_GetUserDirectoryPath
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2_GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_GetCurrentMapUuid
uint64_t Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Entitlement_GetIsViewerEntitled
uint64_t Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile(::StringW url, ::StringW diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native(::System::IntPtr url, ::System::IntPtr diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost(::StringW url, ::StringW filepath_param_name, ::StringW filepath, ::StringW access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native(::System::IntPtr url, ::System::IntPtr filepath_param_name, ::System::IntPtr filepath, ::System::IntPtr access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetProductsBySKU
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU(::ArrayW<::StringW> skus, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skus), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skus, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchases
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchasesDurableCache
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent_Native
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native(::System::IntPtr tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native(::System::IntPtr leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native(::System::IntPtr leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_GetStatus
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication(::StringW packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication_Native
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native(::System::IntPtr packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_PauseStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_PauseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_PauseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_PauseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_ResumeStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_ResumeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_ResumeStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_ResumeStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartStream(::Oculus::Platform::LivestreamingAudience audience, ::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audience), ::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audience, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_UpdateCommentsOverlayVisibility
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_UpdateCommentsOverlayVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVisible)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isVisible);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_UpdateMicStatus
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus(::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse(::StringW pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native(::System::IntPtr pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel(::StringW pool, ::StringW requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native(::System::IntPtr pool, ::System::IntPtr requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue(::StringW pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native(::System::IntPtr pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom(uint64_t roomID, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2(uint64_t roomID, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetAdminSnapshot
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats(::StringW pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native(::System::IntPtr pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_JoinRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_StartMatch
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook(::StringW postTextSuggestion, ::StringW filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook_Native
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native(::System::IntPtr postTextSuggestion, ::System::IntPtr filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Connect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Connect(::System::IntPtr connect_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connect_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connect_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Disconnect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Disconnect(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetSessions
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetSessions(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuationDefault
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::StringW name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, ::System::IntPtr name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::StringW channel_name, ::StringW attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, ::System::IntPtr channel_name, ::System::IntPtr attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup(int64_t connection_id, ::StringW group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, ::System::IntPtr group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipListentoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::ArrayW<::StringW> listento_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(listento_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, listento_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipMicSource
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource(int64_t connection_id, ::Oculus::Platform::NetSyncVoipMicSource mic_source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(mic_source)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, mic_source);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSessionMuted
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(muted)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSpeaktoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::ArrayW<::StringW> speakto_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(speakto_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, speakto_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipStreamMode
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, ::Oculus::Platform::NetSyncVoipStreamMode streamMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(streamMode)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, streamMode);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_GetRoomInvites
uint64_t Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_GetRoomInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_MarkAsRead
uint64_t Oculus::Platform::CAPI::ovr_Notification_MarkAsRead(uint64_t notificationID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Notification_MarkAsRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notificationID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Create
uint64_t Oculus::Platform::CAPI::ovr_Party_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GatherInApplication
uint64_t Oculus::Platform::CAPI::ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GatherInApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Get
uint64_t Oculus::Platform::CAPI::ovr_Party_Get(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Invite
uint64_t Oculus::Platform::CAPI::ovr_Party_Invite(uint64_t partyID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Invite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Join
uint64_t Oculus::Platform::CAPI::ovr_Party_Join(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Leave
uint64_t Oculus::Platform::CAPI::ovr_Party_Leave(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_GetDestinations
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Set(::System::IntPtr richPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, richPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate2
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, ::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Get
uint64_t Oculus::Platform::CAPI::ovr_Room_Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers2
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2(::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetModeratedRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetSocialRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetSocialRooms(uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetSocialRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetSocialRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser(uint64_t roomID, ::StringW inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser_Native(uint64_t roomID, ::System::IntPtr inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_InviteUser_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join
uint64_t Oculus::Platform::CAPI::ovr_Room_Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join2
uint64_t Oculus::Platform::CAPI::ovr_Room_Join2(uint64_t roomID, ::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_KickUser
uint64_t Oculus::Platform::CAPI::ovr_Room_KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_LaunchInvitableUserFlow
uint64_t Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Leave
uint64_t Oculus::Platform::CAPI::ovr_Room_Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription(uint64_t roomID, ::StringW description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription_Native(uint64_t roomID, ::System::IntPtr description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateMembershipLockStatus
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus(uint64_t roomID, ::Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateOwner
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdatePrivateRoomJoinPolicy
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy(uint64_t roomID, ::Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermissions_GetStatus
uint64_t Oculus::Platform::CAPI::ovr_SystemPermissions_GetStatus(::Oculus::Platform::PermissionType permType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemPermissions_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermissions_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermissions_LaunchDeeplink
uint64_t Oculus::Platform::CAPI::ovr_SystemPermissions_LaunchDeeplink(::Oculus::Platform::PermissionType permType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemPermissions_LaunchDeeplink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermissions_LaunchDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow(::StringW recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native(::System::IntPtr recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_Get
uint64_t Oculus::Platform::CAPI::ovr_User_Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetAccessToken
uint64_t Oculus::Platform::CAPI::ovr_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLinkedAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts(::System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUser
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriendsAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(::System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOrgScopedID
uint64_t Oculus::Platform::CAPI::ovr_User_GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSdkAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetUserProof
uint64_t Oculus::Platform::CAPI::ovr_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchBlockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchFriendRequestFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchProfile
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchProfile(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2(uint64_t optionalUserID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchUnblockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewEntitledTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StartRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::StringW optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::StringW optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest(::StringW deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest_Native
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native(::System::IntPtr deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipSuppressed
uint64_t Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid
::StringW Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetBitfieldLength
uint Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetTarget
uint64_t Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetType
::Oculus::Platform::AchievementType Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::AchievementType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetCount
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetIsUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime
::System::DateTime Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime_Native
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetJustUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetID
uint64_t Oculus::Platform::CAPI::ovr_Application_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetLanguage
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotal
uint Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferred
int Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetCompleted
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetCountdownMS
int Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetCountdownMS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails
::StringW Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationProposed_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationProposed_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext
::StringW Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetCreationType
::Oculus::Platform::ChallengeCreationType Oculus::Platform::CAPI::ovr_Challenge_GetCreationType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetCreationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeCreationType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetEndDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetID
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetLeaderboard
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetParticipants
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetParticipants(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetParticipants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetStartDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetTitle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetVisibility
::Oculus::Platform::ChallengeVisibility Oculus::Platform::CAPI::ovr_Challenge_GetVisibility(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeVisibility, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetRank
int Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath
::StringW Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetLocal
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetRemote
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_CloudStorageData_GetData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetCounter
int64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetSaveTime
uint64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetSaveTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetStatus
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::CloudStorageDataStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetStatus
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::CloudStorageUpdateStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains
uint Oculus::Platform::CAPI::ovr_DataStore_Contains(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains_Native
uint Oculus::Platform::CAPI::ovr_DataStore_Contains_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetKey(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetNumKeys
::System::UIntPtr Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetValue(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetCode
int Oculus::Platform::CAPI::ovr_Error_GetCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetHttpCode
int Oculus::Platform::CAPI::ovr_Error_GetHttpCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetHttpCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetID
uint64_t Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_IsCompleted
bool Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionCode
int Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidBlock
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchType
::Oculus::Platform::LaunchType Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LaunchType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetUserReportId
uint64_t Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidUnblock
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetRank
int Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetDidUpdate
bool Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(::System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
uint Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetServiceProvider
::Oculus::Platform::ServiceProvider Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ServiceProvider, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingApplicationStatus_GetStreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStartResult_GetStreamingResult
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LivestreamingStartStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetCommentsVisible
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetIsPaused
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingType
int Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetMicEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetCommentCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetReactionCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews
::StringW Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetCandidates
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
bool Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
::StringW Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetRooms
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash
::StringW Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAdminSnapshot
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAverageWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAverageWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMaxExpectedWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool
::StringW Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash
::StringW Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(::System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetCustomData
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetCustomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetAddedByUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetAddedByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId
::StringW Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetPingTime
uint Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_HasPingTime
bool Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_HasPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetDrawCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetDrawCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetLossCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetLossCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillLevel
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillMean
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillMean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillStandardDeviation
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillStandardDeviation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetWinCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetWinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAbuseReportRecording
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementDefinitionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementProgressArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationVersion
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetails(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetailsArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDeleteResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadCancelResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationFinalized
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationProposed
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationSuggestionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationSuggestionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallenge
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallenge(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageConflictMetadata
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageData
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadata
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadataArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadataArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageUpdateResponse
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDestinationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDestinationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetDestinationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetError
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetHttpTransferUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInstalledApplicationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchBlockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchFriendRequestFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchReportFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchUnblockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardUpdateStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLinkedAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingApplicationStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStartResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingVideoStats
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingAdminSnapshot
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingBrowseResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingBrowseResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResultAndRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingStats
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNativeMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNativeMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNativeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncConnection
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionsChangedNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSetSessionPropertyResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncVoipAttenuationValueArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetworkingPeer
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetOrgScopedID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetParty
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetParty(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyUpdateNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPidArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPidArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPidArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPidArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPingResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPingResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPlatformInitialize
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetProductArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetProductArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetProductArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetProductArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchase
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchase(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchaseArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRequestID
uint64_t Oculus::Platform::CAPI::ovr_Message_GetRequestID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotificationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotificationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSdkAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetShareMediaResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString
::StringW Oculus::Platform::CAPI::ovr_Message_GetString(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetString_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSystemPermission
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSystemPermission(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSystemPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSystemPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSystemVoipState
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetType
::Oculus::Platform::Message::MessageType Oculus::Platform::CAPI::ovr_Message_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::MessageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserAndRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserAndRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserProof
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserProof(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserReportID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserReportID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserReportID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_IsError
bool Oculus::Platform::CAPI::ovr_Message_IsError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetNumSamplesAvailable
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCM(::System::IntPtr obj, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_ReadData
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_ReadData(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_SetAcceptableRecordingDelayHint
void Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint(::System::IntPtr obj, ::System::UIntPtr delayMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(delayMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, delayMs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Start
void Oculus::Platform::CAPI::ovr_Microphone_Start(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Stop
void Oculus::Platform::CAPI::ovr_Microphone_Stop(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetDisconnectReason
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncDisconnectReason, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetStatus
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncConnectionStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId
::StringW Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetMuted
bool Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup
::StringW Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetSessions
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSetSessionPropertyResult_GetSession
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDecibels
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDistance
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetID
uint64_t Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetState
::Oculus::Platform::PeerConnectionState Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PeerConnectionState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_OrgScopedID_GetID
uint64_t Oculus::Platform::CAPI::ovr_OrgScopedID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_OrgScopedID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_Free
void Oculus::Platform::CAPI::ovr_Packet_Free(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_Packet_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSendPolicy
::Oculus::Platform::SendPolicy Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSendPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SendPolicy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_Packet_GetSenderID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Packet_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetID
uint64_t Oculus::Platform::CAPI::ovr_Party_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetLeader
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetLeader(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetLeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetLeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyID_GetID
uint64_t Oculus::Platform::CAPI::ovr_PartyID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetAction
::Oculus::Platform::PartyUpdateAction Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PartyUpdateAction, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetPartyId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetSenderId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId
::StringW Oculus::Platform::CAPI::ovr_Pid_GetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Pid_GetId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PidArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PidArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetID
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetPingTimeUsec
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetPingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_IsTimeout
bool Oculus::Platform::CAPI::ovr_PingResult_IsTimeout(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitialize_GetResult
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PlatformInitializeResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetAmountInHundredths
uint Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency
::StringW Oculus::Platform::CAPI::ovr_Price_GetCurrency(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted
::StringW Oculus::Platform::CAPI::ovr_Price_GetFormatted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Product_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice
::StringW Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName
::StringW Oculus::Platform::CAPI::ovr_Product_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Product_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseID
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetApplicationID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetApplicationID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetApplicationID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetApplicationID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDataStore
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDataStore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Room_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetIsMembershipLocked
bool Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetIsMembershipLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinPolicy
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomJoinPolicy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinability
::Oculus::Platform::RoomJoinability Oculus::Platform::CAPI::ovr_Room_GetJoinability(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetJoinability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomJoinability, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMatchedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMatchedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMaxUsers
uint Oculus::Platform::CAPI::ovr_Room_GetMaxUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName
::StringW Oculus::Platform::CAPI::ovr_Room_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetOwner
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetOwner(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetTeams
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetTeams(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetType
::Oculus::Platform::RoomType Oculus::Platform::CAPI::ovr_Room_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetVersion
uint Oculus::Platform::CAPI::ovr_Room_GetVersion(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime
::System::DateTime Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime_Native
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetAccountType
::Oculus::Platform::SdkAccountType Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SdkAccountType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ShareMediaResult_GetStatus
::Oculus::Platform::ShareMediaStatus Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ShareMediaStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermission_GetHasPermission
bool Oculus::Platform::CAPI::ovr_SystemPermission_GetHasPermission(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemPermission_GetHasPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermission_GetHasPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermission_GetPermissionGrantStatus
::Oculus::Platform::PermissionGrantStatus Oculus::Platform::CAPI::ovr_SystemPermission_GetPermissionGrantStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemPermission_GetPermissionGrantStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermission_GetPermissionGrantStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PermissionGrantStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetAssignedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetAssignedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMaxUsers
int Oculus::Platform::CAPI::ovr_Team_GetMaxUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMinUsers
int Oculus::Platform::CAPI::ovr_Team_GetMinUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetMinUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMinUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName
::StringW Oculus::Platform::CAPI::ovr_Team_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TeamArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TeamArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFbAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserFbid
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAppId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_User_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetID
uint64_t Oculus::Platform::CAPI::ovr_User_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken
::StringW Oculus::Platform::CAPI::ovr_User_GetInviteToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetInviteToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID
::StringW Oculus::Platform::CAPI::ovr_User_GetOculusID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetOculusID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence
::StringW Oculus::Platform::CAPI::ovr_User_GetPresence(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresence_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceStatus
::Oculus::Platform::UserPresenceStatus Oculus::Platform::CAPI::ovr_User_GetPresenceStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::UserPresenceStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce
::StringW Oculus::Platform::CAPI::ovr_UserProof_GetNonce(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetDidCancel
bool Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetID
uint64_t Oculus::Platform::CAPI::ovr_UserReportID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, ::System::UIntPtr compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_GetDecodedPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_AddPCM
void Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM(::System::IntPtr obj, ::ArrayW<float> inputData, uint inputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(inputData), ::il2cpp_utils::ExtractType(inputSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, inputData, inputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedData
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData(::System::IntPtr obj, ::ArrayW<uint8_t> outputBuffer, ::System::UIntPtr intputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(intputSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, intputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedDataSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetPreventPeopleChooser
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Destroy
void Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Destroy
void Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeActiveChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeFutureChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludePastChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetViewerFilter
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter(::System::IntPtr handle, ::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetVisibility
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility(::System::IntPtr handle, ::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Destroy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearCreateRoomDataStore
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(::System::IntPtr handle, ::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomMaxUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_AddEnqueueAdditionalUser
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(::System::IntPtr handle, ::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(::System::IntPtr handle, ::System::IntPtr key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(::System::IntPtr handle, ::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(::System::IntPtr handle, ::System::IntPtr key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueDataSettings
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueIsDebug
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Destroy
void Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipStreamDefault
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault(::System::IntPtr handle, ::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_ClearArgs
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_ClearArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetCurrentCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetCurrentCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetExtraContext
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext(::System::IntPtr handle, ::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetExtraContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsIdle
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMaxCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMaxCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Destroy
void Oculus::Platform::CAPI::ovr_RoomOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString_Native
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_ClearDataStore
void Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_ClearDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetExcludeRecentlyMet
void Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetExcludeRecentlyMet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetMaxUserResults
void Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetMaxUserResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetOrdering
void Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering(::System::IntPtr handle, ::Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetOrdering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRecentlyMetTimeWindow
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRoomId
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetTurnOffUpdates
void Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetTurnOffUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_UserOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Destroy
void Oculus::Platform::CAPI::ovr_UserOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetMaxUsers
void Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_AddServiceProvider
void Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider(::System::IntPtr handle, ::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_ClearServiceProviders
void Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetTimeWindow
void Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_VoipOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Destroy
void Oculus::Platform::CAPI::ovr_VoipOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetBitrateForNewConnections
void Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections(::System::IntPtr handle, ::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetCreateNewConnectionUseDtx
void Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx(::System::IntPtr handle, ::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair
#include "Oculus/Platform/CAPI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key_
::StringW& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_key_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_key_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.KeyValuePairType valueType_
::Oculus::Platform::KeyValuePairType& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_valueType_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_valueType_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueType_"))->offset;
  return *reinterpret_cast<::Oculus::Platform::KeyValuePairType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String stringValue_
::StringW& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_stringValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_stringValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 intValue_
int& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_intValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_intValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intValue_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double doubleValue_
double& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_doubleValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_doubleValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doubleValue_"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCriterion
#include "Oculus/Platform/CAPI_ovrMatchmakingCriterion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key_
::StringW& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_key_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_key_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.MatchmakingCriterionImportance importance_
::Oculus::Platform::MatchmakingCriterionImportance& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_importance_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_importance_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "importance_"))->offset;
  return *reinterpret_cast<::Oculus::Platform::MatchmakingCriterionImportance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr parameterArray
::System::IntPtr& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArray");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterArray"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 parameterArrayCount
uint& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArrayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArrayCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterArrayCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCriterion..ctor
Oculus::Platform::CAPI::ovrMatchmakingCriterion::ovrMatchmakingCriterion(::StringW key, ::Oculus::Platform::MatchmakingCriterionImportance importance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(importance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, importance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback.Invoke
void Oculus::Platform::CAPI::FilterCallback::Invoke(ByRef<::ArrayW<int16_t>> pcmData, ::System::UIntPtr pcmDataLength, int frequency, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(pcmDataLength), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(numChannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pcmData), pcmDataLength, frequency, numChannels);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback.BeginInvoke
::System::IAsyncResult* Oculus::Platform::CAPI::FilterCallback::BeginInvoke(ByRef<::ArrayW<int16_t>> pcmData, ::System::UIntPtr pcmDataLength, int frequency, int numChannels, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(pcmDataLength), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(numChannels), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pcmData), pcmDataLength, frequency, numChannels, callback, object);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback.EndInvoke
void Oculus::Platform::CAPI::FilterCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback
#include "Oculus/Platform/Callback.hpp"
// Including type: Oculus.Platform.Callback/Oculus.Platform.RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Callback/Oculus.Platform.RequestCallback`1
#include "Oculus/Platform/Callback_RequestCallback_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>* Oculus::Platform::Callback::_get_requestIDsToRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_requestIDsToRequests");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>*>("Oculus.Platform", "Callback", "requestIDsToRequests")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
void Oculus::Platform::Callback::_set_requestIDsToRequests(::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_requestIDsToRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "requestIDsToRequests", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/Oculus.Platform.MessageType,Oculus.Platform.Callback/Oculus.Platform.RequestCallback> notificationCallbacks
::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>* Oculus::Platform::Callback::_get_notificationCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_notificationCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>*>("Oculus.Platform", "Callback", "notificationCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/Oculus.Platform.MessageType,Oculus.Platform.Callback/Oculus.Platform.RequestCallback> notificationCallbacks
void Oculus::Platform::Callback::_set_notificationCallbacks(::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_notificationCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "notificationCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hasRegisteredRoomInviteNotificationHandler
bool Oculus::Platform::Callback::_get_hasRegisteredRoomInviteNotificationHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_hasRegisteredRoomInviteNotificationHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Callback", "hasRegisteredRoomInviteNotificationHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hasRegisteredRoomInviteNotificationHandler
void Oculus::Platform::Callback::_set_hasRegisteredRoomInviteNotificationHandler(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_hasRegisteredRoomInviteNotificationHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "hasRegisteredRoomInviteNotificationHandler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Oculus.Platform.Message> pendingRoomInviteNotifications
::System::Collections::Generic::List_1<::Oculus::Platform::Message*>* Oculus::Platform::Callback::_get_pendingRoomInviteNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_pendingRoomInviteNotifications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Oculus::Platform::Message*>*>("Oculus.Platform", "Callback", "pendingRoomInviteNotifications"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Oculus.Platform.Message> pendingRoomInviteNotifications
void Oculus::Platform::Callback::_set_pendingRoomInviteNotifications(::System::Collections::Generic::List_1<::Oculus::Platform::Message*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_pendingRoomInviteNotifications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "pendingRoomInviteNotifications", value));
}
// Autogenerated method: Oculus.Platform.Callback..cctor
void Oculus::Platform::Callback::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.SetNotificationCallback
void Oculus::Platform::Callback::SetNotificationCallback(::Oculus::Platform::Message::MessageType type, ::Oculus::Platform::Message::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::SetNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "SetNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, callback);
}
// Autogenerated method: Oculus.Platform.Callback.AddRequest
void Oculus::Platform::Callback::AddRequest(::Oculus::Platform::Request* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::AddRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "AddRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request);
}
// Autogenerated method: Oculus.Platform.Callback.RunCallbacks
void Oculus::Platform::Callback::RunCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.RunLimitedCallbacks
void Oculus::Platform::Callback::RunLimitedCallbacks(uint limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RunLimitedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunLimitedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, limit);
}
// Autogenerated method: Oculus.Platform.Callback.OnApplicationQuit
void Oculus::Platform::Callback::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.FlushRoomInviteNotificationQueue
void Oculus::Platform::Callback::FlushRoomInviteNotificationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::FlushRoomInviteNotificationQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "FlushRoomInviteNotificationQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.HandleMessage
void Oculus::Platform::Callback::HandleMessage(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::HandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback/Oculus.Platform.RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Message/Oculus.Platform.Callback messageCallback
::Oculus::Platform::Message::Callback*& Oculus::Platform::Callback::RequestCallback::dyn_messageCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RequestCallback::dyn_messageCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Callback/Oculus.Platform.RequestCallback.HandleMessage
void Oculus::Platform::Callback::RequestCallback::HandleMessage(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RequestCallback::HandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CallbackRunner
#include "Oculus/Platform/CallbackRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPersistantBetweenSceneLoads
bool& Oculus::Platform::CallbackRunner::dyn_IsPersistantBetweenSceneLoads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::dyn_IsPersistantBetweenSceneLoads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPersistantBetweenSceneLoads"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.ovr_UnityResetTestPlatform
void Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CallbackRunner", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Awake
void Oculus::Platform::CallbackRunner::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Update
void Oculus::Platform::CallbackRunner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnDestroy
void Oculus::Platform::CallbackRunner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnApplicationQuit
void Oculus::Platform::CallbackRunner::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72BD74
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType Unknown
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType Unknown
void Oculus::Platform::ChallengeCreationType::_set_Unknown(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72BDAC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType UserCreated
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_UserCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_UserCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "UserCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType UserCreated
void Oculus::Platform::ChallengeCreationType::_set_UserCreated(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_UserCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "UserCreated", value));
}
// [DescriptionAttribute] Offset: 0x72BDE4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
void Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::ChallengeCreationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
::System::IntPtr& Oculus::Platform::ChallengeOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetDescription
void Oculus::Platform::ChallengeOptions::SetDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetEndDate
void Oculus::Platform::ChallengeOptions::SetEndDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeActiveChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeFutureChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludePastChallenges
void Oculus::Platform::ChallengeOptions::SetIncludePastChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetLeaderboardName
void Oculus::Platform::ChallengeOptions::SetLeaderboardName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetStartDate
void Oculus::Platform::ChallengeOptions::SetStartDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetTitle
void Oculus::Platform::ChallengeOptions::SetTitle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetViewerFilter
void Oculus::Platform::ChallengeOptions::SetViewerFilter(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetVisibility
void Oculus::Platform::ChallengeOptions::SetVisibility(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ChallengeOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.ChallengeOptions.Finalize
void Oculus::Platform::ChallengeOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72BE1C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
void Oculus::Platform::ChallengeViewerFilter::_set_Unknown(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72BE54
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_AllVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_AllVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "AllVisible"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
void Oculus::Platform::ChallengeViewerFilter::_set_AllVisible(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_AllVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "AllVisible", value));
}
// [DescriptionAttribute] Offset: 0x72BE8C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Participating
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Participating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Participating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Participating"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Participating
void Oculus::Platform::ChallengeViewerFilter::_set_Participating(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Participating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Participating", value));
}
// [DescriptionAttribute] Offset: 0x72BEC4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Invited
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Invited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Invited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Invited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Invited
void Oculus::Platform::ChallengeViewerFilter::_set_Invited(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Invited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Invited", value));
}
// [DescriptionAttribute] Offset: 0x72BEFC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
void Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::ChallengeViewerFilter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72BF34
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Unknown
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Unknown
void Oculus::Platform::ChallengeVisibility::_set_Unknown(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72BF6C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_InviteOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_InviteOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "InviteOnly"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
void Oculus::Platform::ChallengeVisibility::_set_InviteOnly(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_InviteOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "InviteOnly", value));
}
// [DescriptionAttribute] Offset: 0x72BFA4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Public
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Public
void Oculus::Platform::ChallengeVisibility::_set_Public(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Public", value));
}
// [DescriptionAttribute] Offset: 0x72BFDC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Private
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Private"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Private
void Oculus::Platform::ChallengeVisibility::_set_Private(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Private", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::ChallengeVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorageDataStatus
#include "Oculus/Platform/CloudStorageDataStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C014
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus Unknown
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus Unknown
void Oculus::Platform::CloudStorageDataStatus::_set_Unknown(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72C04C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus InSync
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_InSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_InSync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "InSync"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus InSync
void Oculus::Platform::CloudStorageDataStatus::_set_InSync(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_InSync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "InSync", value));
}
// [DescriptionAttribute] Offset: 0x72C084
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus NeedsDownload
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_NeedsDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_NeedsDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "NeedsDownload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus NeedsDownload
void Oculus::Platform::CloudStorageDataStatus::_set_NeedsDownload(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_NeedsDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "NeedsDownload", value));
}
// [DescriptionAttribute] Offset: 0x72C0BC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus RemoteDownloading
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_RemoteDownloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_RemoteDownloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "RemoteDownloading"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus RemoteDownloading
void Oculus::Platform::CloudStorageDataStatus::_set_RemoteDownloading(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_RemoteDownloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "RemoteDownloading", value));
}
// [DescriptionAttribute] Offset: 0x72C0F4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus NeedsUpload
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_NeedsUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_NeedsUpload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "NeedsUpload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus NeedsUpload
void Oculus::Platform::CloudStorageDataStatus::_set_NeedsUpload(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_NeedsUpload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "NeedsUpload", value));
}
// [DescriptionAttribute] Offset: 0x72C12C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus LocalUploading
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_LocalUploading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_LocalUploading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "LocalUploading"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus LocalUploading
void Oculus::Platform::CloudStorageDataStatus::_set_LocalUploading(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_LocalUploading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "LocalUploading", value));
}
// [DescriptionAttribute] Offset: 0x72C164
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus InConflict
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_InConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_InConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "InConflict"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus InConflict
void Oculus::Platform::CloudStorageDataStatus::_set_InConflict(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_InConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "InConflict", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::CloudStorageDataStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorageUpdateStatus
#include "Oculus/Platform/CloudStorageUpdateStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C19C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus Unknown
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus Unknown
void Oculus::Platform::CloudStorageUpdateStatus::_set_Unknown(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72C1D4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus Ok
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus Ok
void Oculus::Platform::CloudStorageUpdateStatus::_set_Ok(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "Ok", value));
}
// [DescriptionAttribute] Offset: 0x72C20C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus BetterVersionStored
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_BetterVersionStored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_BetterVersionStored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "BetterVersionStored"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus BetterVersionStored
void Oculus::Platform::CloudStorageUpdateStatus::_set_BetterVersionStored(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_BetterVersionStored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "BetterVersionStored", value));
}
// [DescriptionAttribute] Offset: 0x72C244
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus ManualMergeRequired
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_ManualMergeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_ManualMergeRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "ManualMergeRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus ManualMergeRequired
void Oculus::Platform::CloudStorageUpdateStatus::_set_ManualMergeRequired(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_ManualMergeRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "ManualMergeRequired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::CloudStorageUpdateStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.IMicrophone
#include "Oculus/Platform/IMicrophone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IMicrophone.Start
void Oculus::Platform::IMicrophone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Stop
void Oculus::Platform::IMicrophone::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Stop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Update
::ArrayW<float> Oculus::Platform::IMicrophone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.IVoipPCMSource
#include "Oculus/Platform/IVoipPCMSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IVoipPCMSource.GetPCM
int Oculus::Platform::IVoipPCMSource::GetPCM(::ArrayW<float> dest, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::GetPCM");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, length);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.SetSenderID
void Oculus::Platform::IVoipPCMSource::SetSenderID(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::SetSenderID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.Update
void Oculus::Platform::IVoipPCMSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.PeekSizeElements
int Oculus::Platform::IVoipPCMSource::PeekSizeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::PeekSizeElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekSizeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.KeyValuePairType
#include "Oculus/Platform/KeyValuePairType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C27C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType String
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType String
void Oculus::Platform::KeyValuePairType::_set_String(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "String", value));
}
// [DescriptionAttribute] Offset: 0x72C2B4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Int
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Int
void Oculus::Platform::KeyValuePairType::_set_Int(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Int", value));
}
// [DescriptionAttribute] Offset: 0x72C2EC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Double
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Double
void Oculus::Platform::KeyValuePairType::_set_Double(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Double", value));
}
// [DescriptionAttribute] Offset: 0x72C324
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Unknown
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Unknown
void Oculus::Platform::KeyValuePairType::_set_Unknown(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::KeyValuePairType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C35C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Unknown
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Unknown
void Oculus::Platform::LaunchType::_set_Unknown(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72C394
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Normal
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Normal
void Oculus::Platform::LaunchType::_set_Normal(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Normal", value));
}
// [DescriptionAttribute] Offset: 0x72C3CC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Invite
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Invite
void Oculus::Platform::LaunchType::_set_Invite(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Invite", value));
}
// [DescriptionAttribute] Offset: 0x72C404
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Coordinated
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Coordinated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Coordinated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Coordinated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Coordinated
void Oculus::Platform::LaunchType::_set_Coordinated(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Coordinated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Coordinated", value));
}
// [DescriptionAttribute] Offset: 0x72C43C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Deeplink
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Deeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Deeplink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Deeplink"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Deeplink
void Oculus::Platform::LaunchType::_set_Deeplink(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Deeplink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Deeplink", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::LaunchType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C474
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType None
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType None
void Oculus::Platform::LeaderboardFilterType::_set_None(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "None", value));
}
// [DescriptionAttribute] Offset: 0x72C4AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Friends
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Friends
void Oculus::Platform::LeaderboardFilterType::_set_Friends(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Friends", value));
}
// [DescriptionAttribute] Offset: 0x72C4E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Unknown
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Unknown
void Oculus::Platform::LeaderboardFilterType::_set_Unknown(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72C51C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType UserIds
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_UserIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_UserIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "UserIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType UserIds
void Oculus::Platform::LeaderboardFilterType::_set_UserIds(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_UserIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "UserIds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::LeaderboardFilterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C554
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Top
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Top"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Top
void Oculus::Platform::LeaderboardStartAt::_set_Top(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Top", value));
}
// [DescriptionAttribute] Offset: 0x72C58C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer", value));
}
// [DescriptionAttribute] Offset: 0x72C5C4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop", value));
}
// [DescriptionAttribute] Offset: 0x72C5FC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Unknown
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Unknown
void Oculus::Platform::LeaderboardStartAt::_set_Unknown(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::LeaderboardStartAt::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C634
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Unknown
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Unknown
void Oculus::Platform::LivestreamingAudience::_set_Unknown(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72C66C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Public
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Public
void Oculus::Platform::LivestreamingAudience::_set_Public(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Public", value));
}
// [DescriptionAttribute] Offset: 0x72C6A4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Friends
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Friends
void Oculus::Platform::LivestreamingAudience::_set_Friends(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Friends", value));
}
// [DescriptionAttribute] Offset: 0x72C6DC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_OnlyMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_OnlyMe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "OnlyMe"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
void Oculus::Platform::LivestreamingAudience::_set_OnlyMe(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_OnlyMe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "OnlyMe", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::LivestreamingAudience::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C714
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72C74C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn", value));
}
// [DescriptionAttribute] Offset: 0x72C784
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::LivestreamingMicrophoneStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C7BC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Success
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Success
void Oculus::Platform::LivestreamingStartStatus::_set_Success(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Success", value));
}
// [DescriptionAttribute] Offset: 0x72C7F4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
void Oculus::Platform::LivestreamingStartStatus::_set_Unknown(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72C82C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
void Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet", value));
}
// [DescriptionAttribute] Offset: 0x72C864
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
void Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect", value));
}
// [DescriptionAttribute] Offset: 0x72C89C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
void Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId", value));
}
// [DescriptionAttribute] Offset: 0x72C8D4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
void Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::LivestreamingStartStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MatchmakingCriterionImportance
#include "Oculus/Platform/MatchmakingCriterionImportance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72C90C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Required
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Required"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Required
void Oculus::Platform::MatchmakingCriterionImportance::_set_Required(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Required", value));
}
// [DescriptionAttribute] Offset: 0x72C944
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance High
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "High"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance High
void Oculus::Platform::MatchmakingCriterionImportance::_set_High(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "High", value));
}
// [DescriptionAttribute] Offset: 0x72C97C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Medium
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Medium
void Oculus::Platform::MatchmakingCriterionImportance::_set_Medium(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Medium", value));
}
// [DescriptionAttribute] Offset: 0x72C9B4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Low
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Low
void Oculus::Platform::MatchmakingCriterionImportance::_set_Low(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Low", value));
}
// [DescriptionAttribute] Offset: 0x72C9EC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Unknown
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Unknown
void Oculus::Platform::MatchmakingCriterionImportance::_set_Unknown(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::MatchmakingCriterionImportance::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
::System::IntPtr& Oculus::Platform::MatchmakingOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomJoinPolicy
void Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomMaxUsers
void Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.AddEnqueueAdditionalUser
void Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueAdditionalUsers
void Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueIsDebug
void Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueQueryKey
void Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::MatchmakingOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.MatchmakingOptions.Finalize
void Oculus::Platform::MatchmakingOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72CA24
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Unknown
::Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Unknown
void Oculus::Platform::MatchmakingStatApproach::_set_Unknown(::Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72CA5C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Trailing
::Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Trailing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_get_Trailing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Trailing"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Trailing
void Oculus::Platform::MatchmakingStatApproach::_set_Trailing(::Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_set_Trailing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Trailing", value));
}
// [DescriptionAttribute] Offset: 0x72CA94
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Swingy
::Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Swingy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_get_Swingy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Swingy"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Swingy
void Oculus::Platform::MatchmakingStatApproach::_set_Swingy(::Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_set_Swingy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Swingy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::MatchmakingStatApproach::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x72CACC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Unknown
::Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Unknown
void Oculus::Platform::MediaContentType::_set_Unknown(::Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x72CB04
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Photo
::Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Photo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_get_Photo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Photo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Photo
void Oculus::Platform::MediaContentType::_set_Photo(::Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_set_Photo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Photo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::MediaContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: Oculus.Platform.Models.Error
#include "Oculus/Platform/Models/Error.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
::Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::ExtraMessageTypesHandler*>("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
void Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField(::Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Message/Oculus.Platform.MessageType type
::Oculus::Platform::Message::MessageType& Oculus::Platform::Message::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message::MessageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 requestID
uint64_t& Oculus::Platform::Message::dyn_requestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_requestID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.Error error
::Oculus::Platform::Models::Error*& Oculus::Platform::Message::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Error**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Message.get_Type
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::MessageType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_IsError
bool Oculus::Platform::Message::get_IsError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_RequestID
uint64_t Oculus::Platform::Message::get_RequestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_HandleExtraMessageTypes
::Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::get_HandleExtraMessageTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "get_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::ExtraMessageTypesHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.set_HandleExtraMessageTypes
void Oculus::Platform::Message::set_HandleExtraMessageTypes(::Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::set_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "set_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Message.GetError
::Oculus::Platform::Models::Error* Oculus::Platform::Message::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Error*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPingResult
::Oculus::Platform::Models::PingResult* Oculus::Platform::Message::GetPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPingResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PingResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetworkingPeer
::Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::Message::GetNetworkingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetworkingPeer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetHttpTransferUpdate
::Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::Message::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetHttpTransferUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPlatformInitialize
::Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::Message::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPlatformInitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAbuseReportRecording
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::Message::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementDefinitions
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::Message::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementProgressList
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::Message::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementProgressList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementUpdate
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::Message::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetApplicationVersion
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::Message::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetails
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::Message::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetailsList
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::Message::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetailsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDeleteResult
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::Message::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadCancelResult
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::Message::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadResult
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::Message::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadUpdate
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::Message::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationFinalized
::Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::Message::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCalApplicationFinalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationProposed
::Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::Message::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCalApplicationProposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationSuggestionList
::Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::Message::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCalApplicationSuggestionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallenge
::Oculus::Platform::Models::Challenge* Oculus::Platform::Message::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallenge");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeEntryList
::Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::Message::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeList
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::Message::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageConflictMetadata
::Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::Message::GetCloudStorageConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageConflictMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageData
::Oculus::Platform::Models::CloudStorageData* Oculus::Platform::Message::GetCloudStorageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageMetadata
::Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::Message::GetCloudStorageMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageMetadataList
::Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::Message::GetCloudStorageMetadataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageMetadataList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageUpdateResponse
::Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::Message::GetCloudStorageUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageUpdateResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetDestinationList
::Oculus::Platform::Models::DestinationList* Oculus::Platform::Message::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestinationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetInstalledApplicationList
::Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::Message::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstalledApplicationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchBlockFlowResult
::Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::Message::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchFriendRequestFlowResult
::Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::Message::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchReportFlowResult
::Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::Message::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchUnblockFlowResult
::Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::Message::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardDidUpdate
bool Oculus::Platform::Message::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardDidUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardEntryList
::Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::Message::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLinkedAccountList
::Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::Message::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLinkedAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinkedAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingApplicationStatus
::Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::Message::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingApplicationStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStartResult
::Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::Message::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingStartResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStatus
::Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::Message::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingVideoStats
::Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::Message::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingVideoStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingAdminSnapshot
::Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::Message::GetMatchmakingAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingAdminSnapshot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingBrowseResult
::Oculus::Platform::Models::MatchmakingBrowseResult* Oculus::Platform::Message::GetMatchmakingBrowseResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingBrowseResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingBrowseResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingBrowseResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingEnqueueResult
::Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::Message::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingEnqueueResultAndRoom
::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::Message::GetMatchmakingEnqueueResultAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingEnqueueResultAndRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingStats
::Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::Message::GetMatchmakingStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncConnection
::Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::Message::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionList
::Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::Message::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSessionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionsChangedNotification
::Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::Message::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSessionsChangedNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSetSessionPropertyResult
::Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncVoipAttenuationValueList
::Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncVoipAttenuationValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetOrgScopedID
::Oculus::Platform::Models::OrgScopedID* Oculus::Platform::Message::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetOrgScopedID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetParty
::Oculus::Platform::Models::Party* Oculus::Platform::Message::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetParty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyID
::Oculus::Platform::Models::PartyID* Oculus::Platform::Message::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPartyID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyUpdateNotification
::Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::Message::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPartyUpdateNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPidList
::Oculus::Platform::Models::PidList* Oculus::Platform::Message::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPidList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPidList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetProductList
::Oculus::Platform::Models::ProductList* Oculus::Platform::Message::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetProductList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProductList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchase
::Oculus::Platform::Models::Purchase* Oculus::Platform::Message::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPurchase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchaseList
::Oculus::Platform::Models::PurchaseList* Oculus::Platform::Message::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPurchaseList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchaseList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoom
::Oculus::Platform::Models::Room* Oculus::Platform::Message::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomInviteNotification
::Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::Message::GetRoomInviteNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoomInviteNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomInviteNotificationList
::Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::Message::GetRoomInviteNotificationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoomInviteNotificationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotificationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomList
::Oculus::Platform::Models::RoomList* Oculus::Platform::Message::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSdkAccountList
::Oculus::Platform::Models::SdkAccountList* Oculus::Platform::Message::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSdkAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSdkAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetShareMediaResult
::Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::Message::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetShareMediaResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetString
::StringW Oculus::Platform::Message::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSystemPermission
::Oculus::Platform::Models::SystemPermission* Oculus::Platform::Message::GetSystemPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSystemPermission");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSystemVoipState
::Oculus::Platform::Models::SystemVoipState* Oculus::Platform::Message::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSystemVoipState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUser
::Oculus::Platform::Models::User* Oculus::Platform::Message::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserAndRoomList
::Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::Message::GetUserAndRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserAndRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAndRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserList
::Oculus::Platform::Models::UserList* Oculus::Platform::Message::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserProof
::Oculus::Platform::Models::UserProof* Oculus::Platform::Message::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserProof");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserReportID
::Oculus::Platform::Models::UserReportID* Oculus::Platform::Message::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserReportID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.ParseMessageHandle
::Oculus::Platform::Message* Oculus::Platform::Message::ParseMessageHandle(::System::IntPtr messageHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ParseMessageHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "ParseMessageHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageHandle);
}
// Autogenerated method: Oculus.Platform.Message.PopMessage
::Oculus::Platform::Message* Oculus::Platform::Message::PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.Finalize
void Oculus::Platform::Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.Callback.Invoke
void Oculus::Platform::Message::Callback::Invoke(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.Callback.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Message::Callback::BeginInvoke(::Oculus::Platform::Message* message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.Callback.EndInvoke
void Oculus::Platform::Message::Callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Message/Oculus.Platform.MessageType
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Unknown
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Unknown
void Oculus::Platform::Message::MessageType::_set_Unknown(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddCount
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_AddCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddCount"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddCount
void Oculus::Platform::Message::MessageType::_set_Achievements_AddCount(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_AddCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddCount", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddFields
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_AddFields");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddFields"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddFields
void Oculus::Platform::Message::MessageType::_set_Achievements_AddFields(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_AddFields");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddFields", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllDefinitions
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllDefinitions
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllProgress
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllProgress
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetDefinitionsByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetDefinitionsByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementDefinitionArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementDefinitionArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementProgressArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementProgressArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetProgressByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetProgressByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_Unlock
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_Unlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_Unlock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_Unlock
void Oculus::Platform::Message::MessageType::_set_Achievements_Unlock(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_Unlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_Unlock", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetRegisteredPIDs
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetRegisteredPIDs
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetSessionKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_RegisterSessionKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_RegisterSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_GetVersion
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_GetVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_GetVersion"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_GetVersion
void Oculus::Platform::Message::MessageType::_set_Application_GetVersion(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_GetVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_GetVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_LaunchOtherApp
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_LaunchOtherApp
void Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Delete
void Oculus::Platform::Message::MessageType::_set_AssetFile_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Download
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Download() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Download");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Download"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Download
void Oculus::Platform::Message::MessageType::_set_AssetFile_Download(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Download");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Download", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancel
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_GetList
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_GetList
void Oculus::Platform::Message::MessageType::_set_AssetFile_GetList(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Status
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Status"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Status
void Oculus::Platform::Message::MessageType::_set_AssetFile_Status(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Status", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusById
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Create
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Create"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Create
void Oculus::Platform::Message::MessageType::_set_Challenges_Create(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Create", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_DeclineInvite
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_DeclineInvite
void Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Delete
void Oculus::Platform::Message::MessageType::_set_Challenges_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Get
void Oculus::Platform::Message::MessageType::_set_Challenges_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesAfterRank
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesByIds
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetList
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetList
void Oculus::Platform::Message::MessageType::_set_Challenges_GetList(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextChallenges
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousChallenges
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Join
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Join
void Oculus::Platform::Message::MessageType::_set_Challenges_Join(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Leave
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Leave
void Oculus::Platform::Message::MessageType::_set_Challenges_Leave(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_UpdateInfo
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_UpdateInfo
void Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage2_GetUserDirectoryPath
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage2_GetUserDirectoryPath
void Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Delete
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
void Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Load
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Load"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Load
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Load(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Load", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadBucketMetadata
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadBucketMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadConflictMetadata
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadConflictMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadHandle
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadHandle
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadMetadata
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepLocal
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepLocal
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepRemote
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepRemote
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Save
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_Save");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Save"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Save
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Save(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_Save");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Save", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Entitlement_GetIsViewerEntitled
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Entitlement_GetIsViewerEntitled
void Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_ConsumePurchase
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_ConsumePurchase
void Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextProductArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextProductArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextPurchaseArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextPurchaseArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetProductsBySKU
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetProductsBySKU
void Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchases
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchases
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchasesDurableCache
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchasesDurableCache
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_LaunchCheckoutFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_LaunchCheckoutFlow
void Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_GetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_SetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_SetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesAfterRank
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesByIds
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetNextEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetPreviousEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_WriteEntry
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_WriteEntry
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Livestreaming_GetStatus
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Livestreaming_GetStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_GetStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Livestreaming_GetStatus
void Oculus::Platform::Message::MessageType::_set_Livestreaming_GetStatus(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Livestreaming_GetStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_GetStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Livestreaming_PauseStream
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_PauseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Livestreaming_PauseStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_PauseStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Livestreaming_PauseStream
void Oculus::Platform::Message::MessageType::_set_Livestreaming_PauseStream(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Livestreaming_PauseStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_PauseStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Livestreaming_ResumeStream
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_ResumeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Livestreaming_ResumeStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_ResumeStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Livestreaming_ResumeStream
void Oculus::Platform::Message::MessageType::_set_Livestreaming_ResumeStream(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Livestreaming_ResumeStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_ResumeStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetAdminSnapshot
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetAdminSnapshot
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetStats
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetStats
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_JoinRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_JoinRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_ReportResultInsecure
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_ReportResultInsecure
void Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_StartMatch
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_StartMatch
void Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Media_ShareToFacebook
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Media_ShareToFacebook
void Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetNextRoomInviteNotificationArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetNextRoomInviteNotificationArrayPage
void Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetRoomInvites
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetRoomInvites
void Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_MarkAsRead
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_MarkAsRead
void Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Party_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Party_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Party_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Party_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Party_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Party_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Party_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Clear
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Clear"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Clear
void Oculus::Platform::Message::MessageType::_set_RichPresence_Clear(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Clear", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetDestinations
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetDestinations
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetNextDestinationArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetNextDestinationArrayPage
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Set
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Set"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Set
void Oculus::Platform::Message::MessageType::_set_RichPresence_Set(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Set", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate2
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Get
void Oculus::Platform::Message::MessageType::_set_Room_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrentForUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrentForUser
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers2
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetModeratedRooms
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetModeratedRooms
void Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetNextRoomArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetNextRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_InviteUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_InviteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_InviteUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_InviteUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_InviteUser
void Oculus::Platform::Message::MessageType::_set_Room_InviteUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_InviteUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_InviteUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join
void Oculus::Platform::Message::MessageType::_set_Room_Join(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Join2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join2
void Oculus::Platform::Message::MessageType::_set_Room_Join2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Join2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_KickUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_KickUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_KickUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_KickUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_KickUser
void Oculus::Platform::Message::MessageType::_set_Room_KickUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_KickUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_KickUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_LaunchInvitableUserFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_LaunchInvitableUserFlow
void Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Leave
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Leave
void Oculus::Platform::Message::MessageType::_set_Room_Leave(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_SetDescription
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_SetDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_SetDescription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_SetDescription"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_SetDescription
void Oculus::Platform::Message::MessageType::_set_Room_SetDescription(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_SetDescription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_SetDescription", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateDataStore
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateDataStore
void Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateMembershipLockStatus
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateMembershipLockStatus
void Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateOwner
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateOwner
void Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdatePrivateRoomJoinPolicy
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdatePrivateRoomJoinPolicy
void Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_Get
void Oculus::Platform::Message::MessageType::_set_User_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetAccessToken
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetAccessToken
void Oculus::Platform::Message::MessageType::_set_User_GetAccessToken(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUser
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriends
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriends
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriendsAndRooms
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriendsAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserAndRoomArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserAndRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetOrgScopedID
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetOrgScopedID
void Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetSdkAccounts
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetSdkAccounts
void Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetUserProof
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetUserProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetUserProof"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetUserProof
void Oculus::Platform::Message::MessageType::_set_User_GetUserProof(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetUserProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetUserProof", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_LaunchFriendRequestFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_LaunchFriendRequestFlow
void Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_LaunchProfile
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_LaunchProfile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchProfile"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_LaunchProfile
void Oculus::Platform::Message::MessageType::_set_User_LaunchProfile(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_LaunchProfile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchProfile", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Voip_SetSystemVoipSuppressed
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Voip_SetSystemVoipSuppressed
void Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
void Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_AssetFile_DownloadUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_AssetFile_DownloadUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_FinalizeApplication
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_FinalizeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_ProposeApplication
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_ProposeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_HTTP_Transfer
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_HTTP_Transfer
void Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Livestreaming_StatusChange
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Livestreaming_StatusChange
void Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Matchmaking_MatchFound
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Matchmaking_MatchFound
void Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_ConnectionStatusChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_ConnectionStatusChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_SessionsChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_SessionsChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_ConnectionStateChange
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_ConnectionStateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PeerConnectRequest
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PeerConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PingResult
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PingResult
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Party_PartyUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Party_PartyUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteAccepted
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteAccepted
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteReceived
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteReceived
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_RoomUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_RoomUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_ConnectRequest
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_ConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_StateChange
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_StateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_SystemVoipState
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_SystemVoipState
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWithAccessToken
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWithAccessToken
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeStandaloneOculus
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeStandaloneOculus
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeAndroidAsynchronous
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeAndroidAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWindowsAsynchronous
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWindowsAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& Oculus::Platform::Message::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.MessageType
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler.Invoke
::Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke(::System::IntPtr messageHandle, ::Oculus::Platform::Message::MessageType message_type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(message_type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(this, ___internal__method, messageHandle, message_type);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke(::System::IntPtr messageHandle, ::Oculus::Platform::Message::MessageType message_type, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(message_type), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, messageHandle, message_type, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler.EndInvoke
::Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAbuseReportRecording
#include "Oculus/Platform/MessageWithAbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetDataFromMessage
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetAbuseReportRecording
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementDefinitions
#include "Oculus/Platform/MessageWithAchievementDefinitions.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetDataFromMessage
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetAchievementDefinitions
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementProgressList
#include "Oculus/Platform/MessageWithAchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetDataFromMessage
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetAchievementProgressList
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementProgressList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementUpdate
#include "Oculus/Platform/MessageWithAchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetDataFromMessage
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetAchievementUpdate
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationVersion
#include "Oculus/Platform/MessageWithApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetDataFromMessage
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetApplicationVersion
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetails
#include "Oculus/Platform/MessageWithAssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetDataFromMessage
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetAssetDetails
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetails::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetailsList
#include "Oculus/Platform/MessageWithAssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetDataFromMessage
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetAssetDetailsList
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetailsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDeleteResult
#include "Oculus/Platform/MessageWithAssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetAssetFileDeleteResult
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadCancelResult
#include "Oculus/Platform/MessageWithAssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetAssetFileDownloadCancelResult
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadResult
#include "Oculus/Platform/MessageWithAssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetAssetFileDownloadResult
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadUpdate
#include "Oculus/Platform/MessageWithAssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetAssetFileDownloadUpdate
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationFinalized
#include "Oculus/Platform/MessageWithCalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetDataFromMessage
::Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetCalApplicationFinalized
::Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationProposed
#include "Oculus/Platform/MessageWithCalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetDataFromMessage
::Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetCalApplicationProposed
::Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationSuggestionList
#include "Oculus/Platform/MessageWithCalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetDataFromMessage
::Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetCalApplicationSuggestionList
::Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallenge
#include "Oculus/Platform/MessageWithChallenge.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetDataFromMessage
::Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallenge::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetChallenge
::Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallenge::GetChallenge");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeList
#include "Oculus/Platform/MessageWithChallengeList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetDataFromMessage
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetChallengeList
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeList::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
