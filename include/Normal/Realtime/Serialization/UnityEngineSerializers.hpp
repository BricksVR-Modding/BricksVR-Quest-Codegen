// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Forward declaring type: UnityEngineSerializers
  class UnityEngineSerializers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Normal::Realtime::Serialization::UnityEngineSerializers);
DEFINE_IL2CPP_ARG_TYPE(::Normal::Realtime::Serialization::UnityEngineSerializers*, "Normal.Realtime.Serialization", "UnityEngineSerializers");
// Type namespace: Normal.Realtime.Serialization
namespace Normal::Realtime::Serialization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Normal.Realtime.Serialization.UnityEngineSerializers
  // [TokenAttribute] Offset: FFFFFFFF
  class UnityEngineSerializers : public ::Il2CppObject {
    public:
    // static public System.Void Register()
    // Offset: 0xA6EA70
    static void Register();
  }; // Normal.Realtime.Serialization.UnityEngineSerializers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Normal::Realtime::Serialization::UnityEngineSerializers::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Normal::Realtime::Serialization::UnityEngineSerializers::Register)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Normal::Realtime::Serialization::UnityEngineSerializers*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
