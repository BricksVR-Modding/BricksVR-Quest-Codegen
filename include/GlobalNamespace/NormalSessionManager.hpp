// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: JoystickLocomotion
  class JoystickLocomotion;
  // Forward declaring type: BrickStore
  class BrickStore;
  // Forward declaring type: UserSettings
  class UserSettings;
  // Forward declaring type: ControllerButtonInput
  class ControllerButtonInput;
  // Forward declaring type: DownloadBricksOnLoad
  class DownloadBricksOnLoad;
  // Forward declaring type: BrickPickerManager
  class BrickPickerManager;
  // Forward declaring type: TutorialManager
  class TutorialManager;
  // Forward declaring type: MusicPlayer
  class MusicPlayer;
  // Forward declaring type: MovementVignette
  class MovementVignette;
  // Forward declaring type: AdjustPlayerScale
  class AdjustPlayerScale;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: AudioSource
  class AudioSource;
  // Forward declaring type: Coroutine
  class Coroutine;
}
// Forward declaring namespace: Normal::Realtime
namespace Normal::Realtime {
  // Forward declaring type: RealtimeAvatarManager
  class RealtimeAvatarManager;
  // Forward declaring type: Realtime
  class Realtime;
}
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRInteractionManager
  class XRInteractionManager;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Toggle
  class Toggle;
  // Forward declaring type: Slider
  class Slider;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NormalSessionManager
  class NormalSessionManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NormalSessionManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NormalSessionManager*, "", "NormalSessionManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x278
  #pragma pack(push, 1)
  // Autogenerated type: NormalSessionManager
  // [TokenAttribute] Offset: FFFFFFFF
  class NormalSessionManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::NormalSessionManager::$Start$d__82
    class $Start$d__82;
    // Nested type: ::GlobalNamespace::NormalSessionManager::$JoinRoom$d__92
    class $JoinRoom$d__92;
    // Nested type: ::GlobalNamespace::NormalSessionManager::$BackToMenu$d__95
    class $BackToMenu$d__95;
    // Nested type: ::GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$d__103
    class $DownloadBricksFromDatastore$d__103;
    // Nested type: ::GlobalNamespace::NormalSessionManager::$$c__DisplayClass105_0
    class $$c__DisplayClass105_0;
    // Nested type: ::GlobalNamespace::NormalSessionManager::$PlayTutorialIEnum$d__113
    class $PlayTutorialIEnum$d__113;
    public:
    // public UnityEngine.GameObject realtimeGameobject
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* realtimeGameobject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private Normal.Realtime.RealtimeAvatarManager _avatarManager
    // Size: 0x8
    // Offset: 0x20
    ::Normal::Realtime::RealtimeAvatarManager* avatarManager;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::RealtimeAvatarManager*) == 0x8);
    // public UnityEngine.GameObject playerControllers
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* playerControllers;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject menuPlayerSpawnPoint
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* menuPlayerSpawnPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Transform gameSpawnPoint
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Transform* gameSpawnPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.GameObject menuLeftHand
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* menuLeftHand;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject menuRightHand
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* menuRightHand;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject teleporterLeftHand
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* teleporterLeftHand;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject teleporterRightHand
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* teleporterRightHand;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject inGameLeftHand
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* inGameLeftHand;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject inGameRightHand
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* inGameRightHand;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject head
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* head;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xFEFE0
    // public TMPro.TextMeshProUGUI menuRoomCodeDisplay
    // Size: 0x8
    // Offset: 0x78
    ::TMPro::TextMeshProUGUI* menuRoomCodeDisplay;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // public UnityEngine.GameObject menuEnvironment
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* menuEnvironment;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject mainEnvironment
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* mainEnvironment;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private Normal.Realtime.Realtime _realtime
    // Size: 0x8
    // Offset: 0x90
    ::Normal::Realtime::Realtime* realtime;
    // Field size check
    static_assert(sizeof(::Normal::Realtime::Realtime*) == 0x8);
    // public UnityEngine.MeshRenderer loadingObjectRenderer
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::MeshRenderer* loadingObjectRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // private UnityEngine.Material _loadingObjectMat
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::Material* loadingObjectMat;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.AudioSource ambientMusic
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::AudioSource* ambientMusic;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // public JoystickLocomotion joystickLocomotion
    // Size: 0x8
    // Offset: 0xB0
    ::GlobalNamespace::JoystickLocomotion* joystickLocomotion;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::JoystickLocomotion*) == 0x8);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager xrInteractionManager
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* xrInteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // private BrickStore _brickStore
    // Size: 0x8
    // Offset: 0xC0
    ::GlobalNamespace::BrickStore* brickStore;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BrickStore*) == 0x8);
    // public TMPro.TextMeshProUGUI menuRoomCode
    // Size: 0x8
    // Offset: 0xC8
    ::TMPro::TextMeshProUGUI* menuRoomCode;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // public UserSettings userSettings
    // Size: 0x8
    // Offset: 0xD0
    ::GlobalNamespace::UserSettings* userSettings;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::UserSettings*) == 0x8);
    // public UnityEngine.GameObject vrRig
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::GameObject* vrRig;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public ControllerButtonInput buttonInput
    // Size: 0x8
    // Offset: 0xE0
    ::GlobalNamespace::ControllerButtonInput* buttonInput;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ControllerButtonInput*) == 0x8);
    // public UnityEngine.GameObject menuBoard
    // Size: 0x8
    // Offset: 0xE8
    ::UnityEngine::GameObject* menuBoard;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public DownloadBricksOnLoad downloadBricksOnLoad
    // Size: 0x8
    // Offset: 0xF0
    ::GlobalNamespace::DownloadBricksOnLoad* downloadBricksOnLoad;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::DownloadBricksOnLoad*) == 0x8);
    // private System.Boolean _didConnectToRoom
    // Size: 0x1
    // Offset: 0xF8
    bool didConnectToRoom;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _didDisconnectFromRoom
    // Size: 0x1
    // Offset: 0xF9
    bool didDisconnectFromRoom;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: didDisconnectFromRoom and: joiningCoroutine
    char __padding29[0x6] = {};
    // private UnityEngine.Coroutine _joiningCoroutine
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::Coroutine* joiningCoroutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // public UnityEngine.GameObject mainPage
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::GameObject* mainPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xFF050
    // public UnityEngine.GameObject joinByCodePage
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::GameObject* joinByCodePage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject settingsPage
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::GameObject* settingsPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject inGameMain
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::GameObject* inGameMain;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject audioSettingsPage
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::GameObject* audioSettingsPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject controlsSettingsPage
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::GameObject* controlsSettingsPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject miscSettingsPage
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::GameObject* miscSettingsPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject loadingPage
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::GameObject* loadingPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject roomMenuPage
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::GameObject* roomMenuPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject enterNamePage
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::GameObject* enterNamePage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject joinMenuPage
    // Size: 0x8
    // Offset: 0x158
    ::UnityEngine::GameObject* joinMenuPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject joinRecentPage
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::GameObject* joinRecentPage;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject playersMenu
    // Size: 0x8
    // Offset: 0x168
    ::UnityEngine::GameObject* playersMenu;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject versionTooOldMenu
    // Size: 0x8
    // Offset: 0x170
    ::UnityEngine::GameObject* versionTooOldMenu;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject errorMenu
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::GameObject* errorMenu;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject findFriendsMenu
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::GameObject* findFriendsMenu;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject avatarEditorMenu
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::GameObject* avatarEditorMenu;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject exportRoomMenu
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::GameObject* exportRoomMenu;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.UI.Toggle teleportToggle
    // Size: 0x8
    // Offset: 0x198
    ::UnityEngine::UI::Toggle* teleportToggle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Toggle micEnabledToggle
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::UI::Toggle* micEnabledToggle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Toggle otherMicsEnabledToogle
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::UI::Toggle* otherMicsEnabledToogle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Toggle performanceMode
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::UI::Toggle* performanceMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Toggle musicPlayingToggle
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::UI::Toggle* musicPlayingToggle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Toggle smoothTurnToggle
    // Size: 0x8
    // Offset: 0x1C0
    ::UnityEngine::UI::Toggle* smoothTurnToggle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Toggle pushToTalkEnabledToggle
    // Size: 0x8
    // Offset: 0x1C8
    ::UnityEngine::UI::Toggle* pushToTalkEnabledToggle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Toggle brickClickSoundsToggle
    // Size: 0x8
    // Offset: 0x1D0
    ::UnityEngine::UI::Toggle* brickClickSoundsToggle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Toggle*) == 0x8);
    // public UnityEngine.UI.Slider musicVolumeSlider
    // Size: 0x8
    // Offset: 0x1D8
    ::UnityEngine::UI::Slider* musicVolumeSlider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // public UnityEngine.UI.Slider movementSpeedSlider
    // Size: 0x8
    // Offset: 0x1E0
    ::UnityEngine::UI::Slider* movementSpeedSlider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // public UnityEngine.UI.Slider rotationSpeedSlider
    // Size: 0x8
    // Offset: 0x1E8
    ::UnityEngine::UI::Slider* rotationSpeedSlider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // public UnityEngine.UI.Slider vignetteSlider
    // Size: 0x8
    // Offset: 0x1F0
    ::UnityEngine::UI::Slider* vignetteSlider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0xFF0C0
    // public UnityEngine.UI.Slider renderDistanceSlider
    // Size: 0x8
    // Offset: 0x1F8
    ::UnityEngine::UI::Slider* renderDistanceSlider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // public UnityEngine.UI.Slider playerScaleSlider
    // Size: 0x8
    // Offset: 0x200
    ::UnityEngine::UI::Slider* playerScaleSlider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // public UnityEngine.UI.Slider brickShininessSlider
    // Size: 0x8
    // Offset: 0x208
    ::UnityEngine::UI::Slider* brickShininessSlider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // public BrickPickerManager brickPickerMenu
    // Size: 0x8
    // Offset: 0x210
    ::GlobalNamespace::BrickPickerManager* brickPickerMenu;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BrickPickerManager*) == 0x8);
    // public TMPro.TextMeshProUGUI joiningStatusText
    // Size: 0x8
    // Offset: 0x218
    ::TMPro::TextMeshProUGUI* joiningStatusText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // public UnityEngine.GameObject joiningBackButton
    // Size: 0x8
    // Offset: 0x220
    ::UnityEngine::GameObject* joiningBackButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public TutorialManager tutorialManager
    // Size: 0x8
    // Offset: 0x228
    ::GlobalNamespace::TutorialManager* tutorialManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::TutorialManager*) == 0x8);
    // public MusicPlayer musicPlayer
    // Size: 0x8
    // Offset: 0x230
    ::GlobalNamespace::MusicPlayer* musicPlayer;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MusicPlayer*) == 0x8);
    // private readonly System.String _roomPrefix
    // Size: 0x8
    // Offset: 0x238
    ::StringW roomPrefix;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _roomName
    // Size: 0x8
    // Offset: 0x240
    ::StringW roomName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Single _ambientMusicMaxVolume
    // Size: 0x4
    // Offset: 0x248
    float ambientMusicMaxVolume;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean _loading
    // Size: 0x1
    // Offset: 0x24C
    bool loading;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _inGameMenuUp
    // Size: 0x1
    // Offset: 0x24D
    bool inGameMenuUp;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean debugMode
    // Size: 0x1
    // Offset: 0x24E
    bool debugMode;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean oldMenuEnabled
    // Size: 0x1
    // Offset: 0x24F
    bool oldMenuEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public UnityEngine.GameObject tutorialEnvironment
    // Size: 0x8
    // Offset: 0x250
    ::UnityEngine::GameObject* tutorialEnvironment;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public TMPro.TextMeshProUGUI roomNameLabel
    // Size: 0x8
    // Offset: 0x258
    ::TMPro::TextMeshProUGUI* roomNameLabel;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // public MovementVignette movementVignette
    // Size: 0x8
    // Offset: 0x260
    ::GlobalNamespace::MovementVignette* movementVignette;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MovementVignette*) == 0x8);
    // public AdjustPlayerScale adjustPlayerScale
    // Size: 0x8
    // Offset: 0x268
    ::GlobalNamespace::AdjustPlayerScale* adjustPlayerScale;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AdjustPlayerScale*) == 0x8);
    // private UnityEngine.Coroutine _tutorialCoroutine
    // Size: 0x8
    // Offset: 0x270
    ::UnityEngine::Coroutine* tutorialCoroutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static public System.String UpstreamErrorText
    static constexpr const char* UpstreamErrorText = "Error: Received an error status from the BricksVR datastore.\u000a\u000aPlease join the Discord at https://bricksvr.com/discord or wait a few minutes.";
    // Get static field: static public System.String UpstreamErrorText
    static ::StringW _get_UpstreamErrorText();
    // Set static field: static public System.String UpstreamErrorText
    static void _set_UpstreamErrorText(::StringW value);
    // static field const value: static public System.String NetworkErrorText
    static constexpr const char* NetworkErrorText = "Error: Could not connect to the BricksVR server, are you connected to the internet?";
    // Get static field: static public System.String NetworkErrorText
    static ::StringW _get_NetworkErrorText();
    // Set static field: static public System.String NetworkErrorText
    static void _set_NetworkErrorText(::StringW value);
    // Get instance field reference: public UnityEngine.GameObject realtimeGameobject
    [[deprecated]] ::UnityEngine::GameObject*& dyn_realtimeGameobject();
    // Get instance field reference: private Normal.Realtime.RealtimeAvatarManager _avatarManager
    [[deprecated]] ::Normal::Realtime::RealtimeAvatarManager*& dyn__avatarManager();
    // Get instance field reference: public UnityEngine.GameObject playerControllers
    [[deprecated]] ::UnityEngine::GameObject*& dyn_playerControllers();
    // Get instance field reference: public UnityEngine.GameObject menuPlayerSpawnPoint
    [[deprecated]] ::UnityEngine::GameObject*& dyn_menuPlayerSpawnPoint();
    // Get instance field reference: public UnityEngine.Transform gameSpawnPoint
    [[deprecated]] ::UnityEngine::Transform*& dyn_gameSpawnPoint();
    // Get instance field reference: public UnityEngine.GameObject menuLeftHand
    [[deprecated]] ::UnityEngine::GameObject*& dyn_menuLeftHand();
    // Get instance field reference: public UnityEngine.GameObject menuRightHand
    [[deprecated]] ::UnityEngine::GameObject*& dyn_menuRightHand();
    // Get instance field reference: public UnityEngine.GameObject teleporterLeftHand
    [[deprecated]] ::UnityEngine::GameObject*& dyn_teleporterLeftHand();
    // Get instance field reference: public UnityEngine.GameObject teleporterRightHand
    [[deprecated]] ::UnityEngine::GameObject*& dyn_teleporterRightHand();
    // Get instance field reference: public UnityEngine.GameObject inGameLeftHand
    [[deprecated]] ::UnityEngine::GameObject*& dyn_inGameLeftHand();
    // Get instance field reference: public UnityEngine.GameObject inGameRightHand
    [[deprecated]] ::UnityEngine::GameObject*& dyn_inGameRightHand();
    // Get instance field reference: public UnityEngine.GameObject head
    [[deprecated]] ::UnityEngine::GameObject*& dyn_head();
    // Get instance field reference: public TMPro.TextMeshProUGUI menuRoomCodeDisplay
    [[deprecated]] ::TMPro::TextMeshProUGUI*& dyn_menuRoomCodeDisplay();
    // Get instance field reference: public UnityEngine.GameObject menuEnvironment
    [[deprecated]] ::UnityEngine::GameObject*& dyn_menuEnvironment();
    // Get instance field reference: public UnityEngine.GameObject mainEnvironment
    [[deprecated]] ::UnityEngine::GameObject*& dyn_mainEnvironment();
    // Get instance field reference: private Normal.Realtime.Realtime _realtime
    [[deprecated]] ::Normal::Realtime::Realtime*& dyn__realtime();
    // Get instance field reference: public UnityEngine.MeshRenderer loadingObjectRenderer
    [[deprecated]] ::UnityEngine::MeshRenderer*& dyn_loadingObjectRenderer();
    // Get instance field reference: private UnityEngine.Material _loadingObjectMat
    [[deprecated]] ::UnityEngine::Material*& dyn__loadingObjectMat();
    // Get instance field reference: public UnityEngine.AudioSource ambientMusic
    [[deprecated]] ::UnityEngine::AudioSource*& dyn_ambientMusic();
    // Get instance field reference: public JoystickLocomotion joystickLocomotion
    [[deprecated]] ::GlobalNamespace::JoystickLocomotion*& dyn_joystickLocomotion();
    // Get instance field reference: public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager xrInteractionManager
    [[deprecated]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_xrInteractionManager();
    // Get instance field reference: private BrickStore _brickStore
    [[deprecated]] ::GlobalNamespace::BrickStore*& dyn__brickStore();
    // Get instance field reference: public TMPro.TextMeshProUGUI menuRoomCode
    [[deprecated]] ::TMPro::TextMeshProUGUI*& dyn_menuRoomCode();
    // Get instance field reference: public UserSettings userSettings
    [[deprecated]] ::GlobalNamespace::UserSettings*& dyn_userSettings();
    // Get instance field reference: public UnityEngine.GameObject vrRig
    [[deprecated]] ::UnityEngine::GameObject*& dyn_vrRig();
    // Get instance field reference: public ControllerButtonInput buttonInput
    [[deprecated]] ::GlobalNamespace::ControllerButtonInput*& dyn_buttonInput();
    // Get instance field reference: public UnityEngine.GameObject menuBoard
    [[deprecated]] ::UnityEngine::GameObject*& dyn_menuBoard();
    // Get instance field reference: public DownloadBricksOnLoad downloadBricksOnLoad
    [[deprecated]] ::GlobalNamespace::DownloadBricksOnLoad*& dyn_downloadBricksOnLoad();
    // Get instance field reference: private System.Boolean _didConnectToRoom
    [[deprecated]] bool& dyn__didConnectToRoom();
    // Get instance field reference: private System.Boolean _didDisconnectFromRoom
    [[deprecated]] bool& dyn__didDisconnectFromRoom();
    // Get instance field reference: private UnityEngine.Coroutine _joiningCoroutine
    [[deprecated]] ::UnityEngine::Coroutine*& dyn__joiningCoroutine();
    // Get instance field reference: public UnityEngine.GameObject mainPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_mainPage();
    // Get instance field reference: public UnityEngine.GameObject joinByCodePage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_joinByCodePage();
    // Get instance field reference: public UnityEngine.GameObject settingsPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_settingsPage();
    // Get instance field reference: public UnityEngine.GameObject inGameMain
    [[deprecated]] ::UnityEngine::GameObject*& dyn_inGameMain();
    // Get instance field reference: public UnityEngine.GameObject audioSettingsPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_audioSettingsPage();
    // Get instance field reference: public UnityEngine.GameObject controlsSettingsPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_controlsSettingsPage();
    // Get instance field reference: public UnityEngine.GameObject miscSettingsPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_miscSettingsPage();
    // Get instance field reference: public UnityEngine.GameObject loadingPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_loadingPage();
    // Get instance field reference: public UnityEngine.GameObject roomMenuPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_roomMenuPage();
    // Get instance field reference: public UnityEngine.GameObject enterNamePage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_enterNamePage();
    // Get instance field reference: public UnityEngine.GameObject joinMenuPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_joinMenuPage();
    // Get instance field reference: public UnityEngine.GameObject joinRecentPage
    [[deprecated]] ::UnityEngine::GameObject*& dyn_joinRecentPage();
    // Get instance field reference: public UnityEngine.GameObject playersMenu
    [[deprecated]] ::UnityEngine::GameObject*& dyn_playersMenu();
    // Get instance field reference: public UnityEngine.GameObject versionTooOldMenu
    [[deprecated]] ::UnityEngine::GameObject*& dyn_versionTooOldMenu();
    // Get instance field reference: public UnityEngine.GameObject errorMenu
    [[deprecated]] ::UnityEngine::GameObject*& dyn_errorMenu();
    // Get instance field reference: public UnityEngine.GameObject findFriendsMenu
    [[deprecated]] ::UnityEngine::GameObject*& dyn_findFriendsMenu();
    // Get instance field reference: public UnityEngine.GameObject avatarEditorMenu
    [[deprecated]] ::UnityEngine::GameObject*& dyn_avatarEditorMenu();
    // Get instance field reference: public UnityEngine.GameObject exportRoomMenu
    [[deprecated]] ::UnityEngine::GameObject*& dyn_exportRoomMenu();
    // Get instance field reference: public UnityEngine.UI.Toggle teleportToggle
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_teleportToggle();
    // Get instance field reference: public UnityEngine.UI.Toggle micEnabledToggle
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_micEnabledToggle();
    // Get instance field reference: public UnityEngine.UI.Toggle otherMicsEnabledToogle
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_otherMicsEnabledToogle();
    // Get instance field reference: public UnityEngine.UI.Toggle performanceMode
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_performanceMode();
    // Get instance field reference: public UnityEngine.UI.Toggle musicPlayingToggle
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_musicPlayingToggle();
    // Get instance field reference: public UnityEngine.UI.Toggle smoothTurnToggle
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_smoothTurnToggle();
    // Get instance field reference: public UnityEngine.UI.Toggle pushToTalkEnabledToggle
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_pushToTalkEnabledToggle();
    // Get instance field reference: public UnityEngine.UI.Toggle brickClickSoundsToggle
    [[deprecated]] ::UnityEngine::UI::Toggle*& dyn_brickClickSoundsToggle();
    // Get instance field reference: public UnityEngine.UI.Slider musicVolumeSlider
    [[deprecated]] ::UnityEngine::UI::Slider*& dyn_musicVolumeSlider();
    // Get instance field reference: public UnityEngine.UI.Slider movementSpeedSlider
    [[deprecated]] ::UnityEngine::UI::Slider*& dyn_movementSpeedSlider();
    // Get instance field reference: public UnityEngine.UI.Slider rotationSpeedSlider
    [[deprecated]] ::UnityEngine::UI::Slider*& dyn_rotationSpeedSlider();
    // Get instance field reference: public UnityEngine.UI.Slider vignetteSlider
    [[deprecated]] ::UnityEngine::UI::Slider*& dyn_vignetteSlider();
    // Get instance field reference: public UnityEngine.UI.Slider renderDistanceSlider
    [[deprecated]] ::UnityEngine::UI::Slider*& dyn_renderDistanceSlider();
    // Get instance field reference: public UnityEngine.UI.Slider playerScaleSlider
    [[deprecated]] ::UnityEngine::UI::Slider*& dyn_playerScaleSlider();
    // Get instance field reference: public UnityEngine.UI.Slider brickShininessSlider
    [[deprecated]] ::UnityEngine::UI::Slider*& dyn_brickShininessSlider();
    // Get instance field reference: public BrickPickerManager brickPickerMenu
    [[deprecated]] ::GlobalNamespace::BrickPickerManager*& dyn_brickPickerMenu();
    // Get instance field reference: public TMPro.TextMeshProUGUI joiningStatusText
    [[deprecated]] ::TMPro::TextMeshProUGUI*& dyn_joiningStatusText();
    // Get instance field reference: public UnityEngine.GameObject joiningBackButton
    [[deprecated]] ::UnityEngine::GameObject*& dyn_joiningBackButton();
    // Get instance field reference: public TutorialManager tutorialManager
    [[deprecated]] ::GlobalNamespace::TutorialManager*& dyn_tutorialManager();
    // Get instance field reference: public MusicPlayer musicPlayer
    [[deprecated]] ::GlobalNamespace::MusicPlayer*& dyn_musicPlayer();
    // Get instance field reference: private readonly System.String _roomPrefix
    [[deprecated]] ::StringW& dyn__roomPrefix();
    // Get instance field reference: private System.String _roomName
    [[deprecated]] ::StringW& dyn__roomName();
    // Get instance field reference: private System.Single _ambientMusicMaxVolume
    [[deprecated]] float& dyn__ambientMusicMaxVolume();
    // Get instance field reference: private System.Boolean _loading
    [[deprecated]] bool& dyn__loading();
    // Get instance field reference: private System.Boolean _inGameMenuUp
    [[deprecated]] bool& dyn__inGameMenuUp();
    // Get instance field reference: public System.Boolean debugMode
    [[deprecated]] bool& dyn_debugMode();
    // Get instance field reference: public System.Boolean oldMenuEnabled
    [[deprecated]] bool& dyn_oldMenuEnabled();
    // Get instance field reference: public UnityEngine.GameObject tutorialEnvironment
    [[deprecated]] ::UnityEngine::GameObject*& dyn_tutorialEnvironment();
    // Get instance field reference: public TMPro.TextMeshProUGUI roomNameLabel
    [[deprecated]] ::TMPro::TextMeshProUGUI*& dyn_roomNameLabel();
    // Get instance field reference: public MovementVignette movementVignette
    [[deprecated]] ::GlobalNamespace::MovementVignette*& dyn_movementVignette();
    // Get instance field reference: public AdjustPlayerScale adjustPlayerScale
    [[deprecated]] ::GlobalNamespace::AdjustPlayerScale*& dyn_adjustPlayerScale();
    // Get instance field reference: private UnityEngine.Coroutine _tutorialCoroutine
    [[deprecated]] ::UnityEngine::Coroutine*& dyn__tutorialCoroutine();
    // private System.Collections.IEnumerator Start()
    // Offset: 0x6C1390
    ::System::Collections::IEnumerator* Start();
    // private System.Void Update()
    // Offset: 0x6C1B10
    void Update();
    // public System.String GetRoomName()
    // Offset: 0x6C0840
    ::StringW GetRoomName();
    // public System.String NormcoreRoomForCode(System.String roomCode)
    // Offset: 0x6C0F20
    ::StringW NormcoreRoomForCode(::StringW roomCode);
    // public System.Boolean Connected()
    // Offset: 0x6BF960
    bool Connected();
    // public System.Boolean Loading()
    // Offset: 0x6C0A70
    bool Loading();
    // public System.Boolean InGameMenuUp()
    // Offset: 0x6C08E0
    bool InGameMenuUp();
    // public System.Void CreateAndJoin()
    // Offset: 0x6BF990
    void CreateAndJoin();
    // public System.Void JoinRoomWrapper()
    // Offset: 0x6C0980
    void JoinRoomWrapper();
    // public System.Void JoinRoomWrapper(System.String roomName)
    // Offset: 0x6C08F0
    void JoinRoomWrapper(::StringW roomName);
    // private System.Collections.IEnumerator JoinRoom()
    // Offset: 0x6C0A00
    ::System::Collections::IEnumerator* JoinRoom();
    // public System.Void BackToMenuWrapper()
    // Offset: 0x6BF7E0
    void BackToMenuWrapper();
    // private System.Void HandleBrickDownloadError()
    // Offset: 0x6C0850
    void HandleBrickDownloadError();
    // private System.Collections.IEnumerator BackToMenu()
    // Offset: 0x6BF8A0
    ::System::Collections::IEnumerator* BackToMenu();
    // public System.Void PressJoinGameNumberButton(System.String button)
    // Offset: 0x6C1250
    void PressJoinGameNumberButton(::StringW button);
    // public System.Void ResetRoomName()
    // Offset: 0x6C1340
    void ResetRoomName();
    // private System.Void UpdateNumberOnMenuUI()
    // Offset: 0x6C16F0
    void UpdateNumberOnMenuUI();
    // public System.Void UpdateSettingsUI()
    // Offset: 0x6C17A0
    void UpdateSettingsUI();
    // public System.Void ClearRoomName()
    // Offset: 0x6BF910
    void ClearRoomName();
    // private System.Void OnMenu()
    // Offset: 0x6C0F30
    void OnMenu();
    // private System.Void MovePlayerToMainMenu()
    // Offset: 0x6C0E70
    void MovePlayerToMainMenu();
    // private System.Collections.IEnumerator DownloadBricksFromDatastore()
    // Offset: 0x6BFD70
    ::System::Collections::IEnumerator* DownloadBricksFromDatastore();
    // private System.Void WarmResourceLoadCaches()
    // Offset: 0x6C2390
    void WarmResourceLoadCaches();
    // private System.Void WarmOtherCaches()
    // Offset: 0x6C1E20
    void WarmOtherCaches();
    // private System.Void WarmSpawnerCaches()
    // Offset: 0x1DDF00
    void WarmSpawnerCaches();
    // private System.Void DidConnectToRoom(Normal.Realtime.Realtime realtime)
    // Offset: 0x6BFA20
    void DidConnectToRoom(::Normal::Realtime::Realtime* realtime);
    // private System.Void DidDisconnectFromRoom(Normal.Realtime.Realtime realtime)
    // Offset: 0x6BFAF0
    void DidDisconnectFromRoom(::Normal::Realtime::Realtime* realtime);
    // private System.String RandomRoomName()
    // Offset: 0x6C1310
    ::StringW RandomRoomName();
    // private System.Void MoveMenuToFrontOfUser()
    // Offset: 0x6C0A80
    void MoveMenuToFrontOfUser();
    // public System.Void PlayTutorial()
    // Offset: 0x6C11A0
    void PlayTutorial();
    // private System.Collections.IEnumerator PlayTutorialIEnum()
    // Offset: 0x6C1130
    ::System::Collections::IEnumerator* PlayTutorialIEnum();
    // private System.Void DisableAllMenus()
    // Offset: 0x6BFBD0
    void DisableAllMenus();
    // private System.String PadRoomNameWithUnderscores(System.String roomName)
    // Offset: 0x6C10C0
    ::StringW PadRoomNameWithUnderscores(::StringW roomName);
    // private System.String FormatRoomName(System.String roomName)
    // Offset: 0x6C03D0
    ::StringW FormatRoomName(::StringW roomName);
    // private System.String FormatRoomNameAnyLenNoMono(System.String roomName)
    // Offset: 0x6BFDE0
    ::StringW FormatRoomNameAnyLenNoMono(::StringW roomName);
    // private System.Void <JoinRoom>b__92_0()
    // Offset: 0x6C1420
    void $JoinRoom$b__92_0();
    // private System.Void <OnMenu>b__101_0()
    // Offset: 0x6C1670
    void $OnMenu$b__101_0();
    // private System.Void <MovePlayerToMainMenu>b__102_0()
    // Offset: 0x6C1580
    void $MovePlayerToMainMenu$b__102_0();
    // private System.Boolean <DownloadBricksFromDatastore>b__103_0()
    // Offset: 0x6C1400
    bool $DownloadBricksFromDatastore$b__103_0();
    // public System.Void .ctor()
    // Offset: 0x6C24F0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NormalSessionManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NormalSessionManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NormalSessionManager*, creationType>()));
    }
  }; // NormalSessionManager
  #pragma pack(pop)
  static check_size<sizeof(NormalSessionManager), 624 + sizeof(::UnityEngine::Coroutine*)> __GlobalNamespace_NormalSessionManagerSizeCheck;
  static_assert(sizeof(NormalSessionManager) == 0x278);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::GetRoomName
// Il2CppName: GetRoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::GetRoomName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "GetRoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::NormcoreRoomForCode
// Il2CppName: NormcoreRoomForCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NormalSessionManager::*)(::StringW)>(&GlobalNamespace::NormalSessionManager::NormcoreRoomForCode)> {
  static const MethodInfo* get() {
    static auto* roomCode = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "NormcoreRoomForCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomCode});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::Connected
// Il2CppName: Connected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::Connected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "Connected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::Loading
// Il2CppName: Loading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::Loading)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "Loading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::InGameMenuUp
// Il2CppName: InGameMenuUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::InGameMenuUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "InGameMenuUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::CreateAndJoin
// Il2CppName: CreateAndJoin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::CreateAndJoin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "CreateAndJoin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::JoinRoomWrapper
// Il2CppName: JoinRoomWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::JoinRoomWrapper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "JoinRoomWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::JoinRoomWrapper
// Il2CppName: JoinRoomWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)(::StringW)>(&GlobalNamespace::NormalSessionManager::JoinRoomWrapper)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "JoinRoomWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::JoinRoom
// Il2CppName: JoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::JoinRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "JoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::BackToMenuWrapper
// Il2CppName: BackToMenuWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::BackToMenuWrapper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "BackToMenuWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::HandleBrickDownloadError
// Il2CppName: HandleBrickDownloadError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::HandleBrickDownloadError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "HandleBrickDownloadError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::BackToMenu
// Il2CppName: BackToMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::BackToMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "BackToMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::PressJoinGameNumberButton
// Il2CppName: PressJoinGameNumberButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)(::StringW)>(&GlobalNamespace::NormalSessionManager::PressJoinGameNumberButton)> {
  static const MethodInfo* get() {
    static auto* button = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "PressJoinGameNumberButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{button});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::ResetRoomName
// Il2CppName: ResetRoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::ResetRoomName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "ResetRoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::UpdateNumberOnMenuUI
// Il2CppName: UpdateNumberOnMenuUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::UpdateNumberOnMenuUI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "UpdateNumberOnMenuUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::UpdateSettingsUI
// Il2CppName: UpdateSettingsUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::UpdateSettingsUI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "UpdateSettingsUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::ClearRoomName
// Il2CppName: ClearRoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::ClearRoomName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "ClearRoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::OnMenu
// Il2CppName: OnMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::OnMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "OnMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::MovePlayerToMainMenu
// Il2CppName: MovePlayerToMainMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::MovePlayerToMainMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "MovePlayerToMainMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::DownloadBricksFromDatastore
// Il2CppName: DownloadBricksFromDatastore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::DownloadBricksFromDatastore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "DownloadBricksFromDatastore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::WarmResourceLoadCaches
// Il2CppName: WarmResourceLoadCaches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::WarmResourceLoadCaches)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "WarmResourceLoadCaches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::WarmOtherCaches
// Il2CppName: WarmOtherCaches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::WarmOtherCaches)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "WarmOtherCaches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::WarmSpawnerCaches
// Il2CppName: WarmSpawnerCaches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::WarmSpawnerCaches)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "WarmSpawnerCaches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::DidConnectToRoom
// Il2CppName: DidConnectToRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)(::Normal::Realtime::Realtime*)>(&GlobalNamespace::NormalSessionManager::DidConnectToRoom)> {
  static const MethodInfo* get() {
    static auto* realtime = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "Realtime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "DidConnectToRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{realtime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::DidDisconnectFromRoom
// Il2CppName: DidDisconnectFromRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)(::Normal::Realtime::Realtime*)>(&GlobalNamespace::NormalSessionManager::DidDisconnectFromRoom)> {
  static const MethodInfo* get() {
    static auto* realtime = &::il2cpp_utils::GetClassFromName("Normal.Realtime", "Realtime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "DidDisconnectFromRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{realtime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::RandomRoomName
// Il2CppName: RandomRoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::RandomRoomName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "RandomRoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::MoveMenuToFrontOfUser
// Il2CppName: MoveMenuToFrontOfUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::MoveMenuToFrontOfUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "MoveMenuToFrontOfUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::PlayTutorial
// Il2CppName: PlayTutorial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::PlayTutorial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "PlayTutorial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::PlayTutorialIEnum
// Il2CppName: PlayTutorialIEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::PlayTutorialIEnum)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "PlayTutorialIEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::DisableAllMenus
// Il2CppName: DisableAllMenus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::DisableAllMenus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "DisableAllMenus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::PadRoomNameWithUnderscores
// Il2CppName: PadRoomNameWithUnderscores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NormalSessionManager::*)(::StringW)>(&GlobalNamespace::NormalSessionManager::PadRoomNameWithUnderscores)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "PadRoomNameWithUnderscores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::FormatRoomName
// Il2CppName: FormatRoomName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NormalSessionManager::*)(::StringW)>(&GlobalNamespace::NormalSessionManager::FormatRoomName)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "FormatRoomName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::FormatRoomNameAnyLenNoMono
// Il2CppName: FormatRoomNameAnyLenNoMono
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::NormalSessionManager::*)(::StringW)>(&GlobalNamespace::NormalSessionManager::FormatRoomNameAnyLenNoMono)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "FormatRoomNameAnyLenNoMono", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::$JoinRoom$b__92_0
// Il2CppName: <JoinRoom>b__92_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::$JoinRoom$b__92_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "<JoinRoom>b__92_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::$OnMenu$b__101_0
// Il2CppName: <OnMenu>b__101_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::$OnMenu$b__101_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "<OnMenu>b__101_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::$MovePlayerToMainMenu$b__102_0
// Il2CppName: <MovePlayerToMainMenu>b__102_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::$MovePlayerToMainMenu$b__102_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "<MovePlayerToMainMenu>b__102_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$b__103_0
// Il2CppName: <DownloadBricksFromDatastore>b__103_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::NormalSessionManager::*)()>(&GlobalNamespace::NormalSessionManager::$DownloadBricksFromDatastore$b__103_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NormalSessionManager*), "<DownloadBricksFromDatastore>b__103_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NormalSessionManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
